<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>代码之美 - 分类 - 退思轩</title><link>https://example.com/categories/%E4%BB%A3%E7%A0%81%E4%B9%8B%E7%BE%8E/</link><description>代码之美 - 分类 - 退思轩</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>suda.ivywk@gmail.com (Kai Wang)</managingEditor><webMaster>suda.ivywk@gmail.com (Kai Wang)</webMaster><copyright>本作品采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可</copyright><lastBuildDate>Wed, 22 Jul 2015 20:46:00 +0800</lastBuildDate><atom:link href="https://example.com/categories/%E4%BB%A3%E7%A0%81%E4%B9%8B%E7%BE%8E/" rel="self" type="application/rss+xml"/><item><title>SGU 144 - Meeting</title><link>https://example.com/2015/07/sgu-144-meeting/</link><pubDate>Wed, 22 Jul 2015 20:46:00 +0800</pubDate><author>作者</author><guid>https://example.com/2015/07/sgu-144-meeting/</guid><description><![CDATA[<h2 id="description">Description</h2>
<p>Two of the three members of the winning team of one of the ACM regional contests are going to meet in order to train for the upcoming World Finals. They decided that they will meet sometime between $X$ o&rsquo;clock and $Y$ o&rsquo;clock. Because they never get anywhere on time (they were late even on the day of the regional contest), they did not set an exact time when they will meet. However, they decided that the one who gets first at the meeting point will not wait more than $Z$ minutes for the other one (they calculated that, if the other one will not come within $Z$ minutes from the arrival of the first of them, then it is very probable that he will not show up at all).</p>
<p>Knowing that, in the end, both of them will show up at some time between $X$ o&rsquo;clock and $Y$ o&rsquo;clock (not necessarily after an integer number of minutes), compute which is the probability that they will actually meet.</p>
<h2 id="input">Input</h2>
<p>The input will contain 2 integer numbers $X$ and $Y$ ($0\leq X &lt; Y\leq 24$) and one real number $Z$ ($0 &lt; Z\leq 60(Y-X)$).</p>
<h2 id="output">Output</h2>
<p>You should output the required probability with 7 decimal digits (rounded according to the 8th decimal digit).</p>
<h2 id="sample-input">Sample Input</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">11 12 20.0
</code></pre></td></tr></table>
</div>
</div><h2 id="sample-output">Sample Output</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">0.5555556
</code></pre></td></tr></table>
</div>
</div><h2 id="analysis">Analysis</h2>
<p>这是一道纯粹的数学概率题，我们可以进行公式推导。首先我们需要统一单位，将 $X$ 和 $Y$ 均以分钟为单位；其次，我们以 $X$ 点钟为计时零点；接下来做出这样一张图：</p>
<figure><a class="lightgallery" href="/images/2015/SGU%20144%20-%20Meeting/Answer.png" title="/images/2015/SGU 144 - Meeting/Answer.png" data-thumbnail="/images/2015/SGU 144 - Meeting/Answer.png" data-sub-html="<h2>概率分布图</h2>">
        
    </a><figcaption class="image-caption">概率分布图</figcaption>
    </figure>
<p>根据上图，我们可以知道相遇的概率为中间六边形的面积，即 $P = S_A / S$，由于 $S_A$ 求解起来比较困难，我们可以转换为计算总面积减去两个三角形的面积。因此，答案为 $$ P = 1 - \frac{(Y - X - Z) ^ 2}{(Y - X) ^ 2}$$</p>
<h2 id="solution">Solution</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-cpp" data-lang="cpp"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;iomanip&gt;</span><span class="cp">
</span><span class="cp"></span> 
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
 
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">ios</span><span class="o">::</span><span class="n">sync_with_stdio</span><span class="p">(</span><span class="nb">false</span><span class="p">);</span>
    <span class="kt">double</span> <span class="n">X</span><span class="p">,</span> <span class="n">Y</span><span class="p">,</span> <span class="n">Z</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span><span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">X</span> <span class="o">&gt;&gt;</span> <span class="n">Y</span> <span class="o">&gt;&gt;</span> <span class="n">Z</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">X</span> <span class="o">*=</span> <span class="mi">60</span><span class="p">;</span> <span class="n">Y</span> <span class="o">*=</span> <span class="mi">60</span><span class="p">;</span> <span class="n">Y</span> <span class="o">-=</span> <span class="n">X</span><span class="p">;</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">fixed</span> <span class="o">&lt;&lt;</span> <span class="n">setprecision</span><span class="p">(</span><span class="mi">7</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="mi">1</span> <span class="o">-</span> <span class="p">(</span><span class="n">Y</span> <span class="o">-</span> <span class="n">Z</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="n">Y</span> <span class="o">-</span> <span class="n">Z</span><span class="p">)</span> <span class="o">/</span> <span class="p">(</span><span class="n">Y</span> <span class="o">*</span> <span class="n">Y</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>这道题目主要考察数学中的概率知识。</p>
]]></description></item><item><title>SGU 116 - Index of super-prime</title><link>https://example.com/2015/07/sgu-116-index-of-super-prime/</link><pubDate>Mon, 20 Jul 2015 13:39:00 +0800</pubDate><author>作者</author><guid>https://example.com/2015/07/sgu-116-index-of-super-prime/</guid><description><![CDATA[<h2 id="description">Description</h2>
<p>Let $P_1, P_2,\cdots ,P_N,\cdots$ be a sequence of prime numbers. Super-prime number is such a prime number that its current number in prime numbers sequence is a prime number too. For example, 3 is a super-prime number, but 7 is not. Index of super-prime for number is 0 iff it is impossible to present it as a sum of few (maybe one) super-prime numbers, and if such presentation exists, index is equal to minimal number of items in such presentation. Your task is to find index of super-prime for given numbers and find optimal presentation as a sum of super-primes.</p>
<h2 id="input">Input</h2>
<p>There is a positive integer number in input. Number is not more than 10000.</p>
<h2 id="output">Output</h2>
<p>Write index $I$ for given number as the first number in line. Write I super-primes numbers that are items in optimal presentation for given number. Write these I numbers in order of non-increasing.</p>
<h2 id="sample-input">Sample Input</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">6
</code></pre></td></tr></table>
</div>
</div><h2 id="sample-output">Sample Output</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-fallback" data-lang="fallback">2
3 3
</code></pre></td></tr></table>
</div>
</div><h2 id="analysis">Analysis</h2>
<p>首先，我们可以根据筛法求出 10000 以内的素数，接下来我们继续利用筛法，求出这些素数中，下标为素数的超级素数，这样我们就得到了题目中所需要的超级素数。</p>
<p>对于寻找一个最优的组合，我们可以使用 0/1 背包来解决这个问题，同时记录路径，最后输出最优解即可。</p>
<h2 id="solution">Solution</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-cpp" data-lang="cpp"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;memory.h&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;vector&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;algorithm&gt;</span><span class="cp">
</span><span class="cp"></span> 
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
 
<span class="k">const</span> <span class="kt">int</span> <span class="n">MAX</span> <span class="o">=</span> <span class="mi">10240</span><span class="p">;</span>
 
<span class="n">vector</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">P</span><span class="p">,</span> <span class="n">SP</span><span class="p">;</span>
 
<span class="kt">int</span> <span class="n">pP</span><span class="p">[</span><span class="n">MAX</span><span class="p">],</span> <span class="n">pSP</span><span class="p">[</span><span class="n">MAX</span><span class="p">],</span> <span class="n">nCnt</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">f</span><span class="p">[</span><span class="n">MAX</span><span class="p">],</span> <span class="n">pPath</span><span class="p">[</span><span class="n">MAX</span><span class="p">];</span>
 
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">N</span><span class="p">;</span>
    <span class="n">P</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span> <span class="n">SP</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
    <span class="n">memset</span><span class="p">(</span><span class="n">pP</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">pP</span><span class="p">));</span>
    <span class="n">memset</span><span class="p">(</span><span class="n">pSP</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">pSP</span><span class="p">));</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">MAX</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">pP</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">P</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="n">i</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">MAX</span><span class="p">;</span> <span class="n">j</span> <span class="o">+=</span> <span class="n">i</span><span class="p">)</span>
            <span class="p">{</span> <span class="n">pP</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">P</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">pSP</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">SP</span><span class="p">.</span><span class="n">push_back</span><span class="p">(</span><span class="n">P</span><span class="p">[</span><span class="n">i</span><span class="p">]);</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="n">i</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">P</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">j</span> <span class="o">+=</span> <span class="n">i</span><span class="p">)</span>
            <span class="p">{</span> <span class="n">pSP</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">while</span><span class="p">(</span><span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">N</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">memset</span><span class="p">(</span><span class="n">f</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">f</span><span class="p">));</span>
        <span class="n">memset</span><span class="p">(</span><span class="n">pPath</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">pPath</span><span class="p">));</span>
        <span class="n">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span> <span class="n">f</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="mi">214748364</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">SP</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">SP</span><span class="p">[</span><span class="n">i</span><span class="p">];</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="n">j</span> <span class="o">-</span> <span class="n">SP</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">&lt;</span> <span class="n">f</span><span class="p">[</span><span class="n">j</span><span class="p">])</span>
                <span class="p">{</span>
                    <span class="n">f</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">f</span><span class="p">[</span><span class="n">j</span> <span class="o">-</span> <span class="n">SP</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
                    <span class="n">pPath</span><span class="p">[</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">j</span> <span class="o">-</span> <span class="n">SP</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">if</span><span class="p">(</span><span class="n">f</span><span class="p">[</span><span class="n">N</span><span class="p">]</span> <span class="o">==</span> <span class="mi">214748364</span><span class="p">)</span> <span class="p">{</span> <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="mi">0</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">f</span><span class="p">[</span><span class="n">N</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span> <span class="o">&lt;&lt;</span> <span class="n">N</span> <span class="o">-</span> <span class="n">pPath</span><span class="p">[</span><span class="n">N</span><span class="p">];</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">pPath</span><span class="p">[</span><span class="n">N</span><span class="p">];</span> <span class="n">i</span><span class="p">;</span> <span class="n">i</span> <span class="o">=</span> <span class="n">pPath</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
            <span class="p">{</span> <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34; &#34;</span> <span class="o">&lt;&lt;</span> <span class="n">i</span> <span class="o">-</span> <span class="n">pPath</span><span class="p">[</span><span class="n">i</span><span class="p">];</span> <span class="p">}</span>
            <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><p>这道题目主要考察最为基本的动态规划以及记录路径。</p>
]]></description></item><item><title>专题一、简单搜索 - Virtual Judge</title><link>https://example.com/2015/06/%E4%B8%93%E9%A2%98%E4%B8%80%E7%AE%80%E5%8D%95%E6%90%9C%E7%B4%A2-virtual-judge/</link><pubDate>Mon, 08 Jun 2015 21:57:00 +0800</pubDate><author>作者</author><guid>https://example.com/2015/06/%E4%B8%93%E9%A2%98%E4%B8%80%E7%AE%80%E5%8D%95%E6%90%9C%E7%B4%A2-virtual-judge/</guid><description><![CDATA[<p>很久以前刷完了 Virtual Judge 上的简单搜索专题，现总结如下：</p>
<h2 id="poj-1321">POJ 1321</h2>
<p>由于题目的数据范围比较小，可以直接 dfs 暴力。读入时记录每个空位的位置，保存在 <code>pX[]</code> 以及 <code>pY[]</code> 数组中。暴力的时候统计当前处理第几个空格以及当前处理到了第几行即可。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-cpp" data-lang="cpp"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;memory.h&gt;</span><span class="cp">
</span><span class="cp"></span> 
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
 
<span class="k">const</span> <span class="kt">int</span> <span class="n">MAX</span> <span class="o">=</span> <span class="mi">128</span><span class="p">;</span>
 
 
<span class="kt">long</span> <span class="kt">long</span> <span class="n">ans</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">N</span><span class="p">,</span> <span class="n">K</span><span class="p">,</span> <span class="n">nCnt</span><span class="p">;</span>
<span class="kt">bool</span> <span class="n">pUsed</span><span class="p">[</span><span class="n">MAX</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">pX</span><span class="p">[</span><span class="n">MAX</span><span class="p">],</span> <span class="n">pY</span><span class="p">[</span><span class="n">MAX</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">pRow</span><span class="p">[</span><span class="n">MAX</span><span class="p">],</span> <span class="n">pCol</span><span class="p">[</span><span class="n">MAX</span><span class="p">];</span>
 
<span class="kt">void</span> <span class="nf">dfs</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">);</span>
 
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">char</span> <span class="n">dwTmp</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span><span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">N</span> <span class="o">&gt;&gt;</span> <span class="n">K</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">N</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">K</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span> <span class="k">break</span><span class="p">;</span> <span class="p">}</span>
        <span class="n">nCnt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">ans</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">dwTmp</span><span class="p">;</span>
                <span class="k">if</span><span class="p">(</span><span class="n">dwTmp</span> <span class="o">==</span> <span class="sc">&#39;#&#39;</span><span class="p">)</span>
                <span class="p">{</span> <span class="n">nCnt</span><span class="o">++</span><span class="p">;</span> <span class="n">pX</span><span class="p">[</span><span class="n">nCnt</span><span class="p">]</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span> <span class="n">pY</span><span class="p">[</span><span class="n">nCnt</span><span class="p">]</span> <span class="o">=</span> <span class="n">j</span><span class="p">;</span> <span class="p">}</span>
            <span class="p">}</span>
            <span class="n">cin</span><span class="p">.</span><span class="n">ignore</span><span class="p">();</span>
        <span class="p">}</span>
        <span class="n">memset</span><span class="p">(</span><span class="n">pRow</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">pRow</span><span class="p">));</span>
        <span class="n">memset</span><span class="p">(</span><span class="n">pCol</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">pCol</span><span class="p">));</span>
        <span class="n">memset</span><span class="p">(</span><span class="n">pUsed</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">pUsed</span><span class="p">));</span>
        <span class="n">dfs</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">ans</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
 
<span class="kt">void</span> <span class="nf">dfs</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span><span class="p">(</span><span class="n">y</span> <span class="o">==</span> <span class="n">K</span><span class="p">)</span>
    <span class="p">{</span> <span class="n">ans</span><span class="o">++</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">else</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">x</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">nCnt</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="n">pUsed</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">||</span> <span class="n">pRow</span><span class="p">[</span><span class="n">pX</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span> <span class="o">||</span> <span class="n">pCol</span><span class="p">[</span><span class="n">pY</span><span class="p">[</span><span class="n">i</span><span class="p">]]))</span>
            <span class="p">{</span>
                <span class="n">pRow</span><span class="p">[</span><span class="n">pX</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span><span class="o">++</span><span class="p">;</span> <span class="n">pCol</span><span class="p">[</span><span class="n">pY</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span><span class="o">++</span><span class="p">;</span>
                <span class="n">pUsed</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                <span class="n">dfs</span><span class="p">(</span><span class="n">i</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">y</span> <span class="o">+</span> <span class="mi">1</span><span class="p">);</span>
                <span class="n">pUsed</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
                <span class="n">pRow</span><span class="p">[</span><span class="n">pX</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span><span class="o">--</span><span class="p">;</span> <span class="n">pCol</span><span class="p">[</span><span class="n">pY</span><span class="p">[</span><span class="n">i</span><span class="p">]]</span><span class="o">--</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="poj-2251">POJ 2251</h2>
<p>这是一个三维迷宫，对立体空间的六个方向进行 bfs 即可。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-cpp" data-lang="cpp"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;memory.h&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;queue&gt;</span><span class="cp">
</span><span class="cp"></span> 
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
 
<span class="k">const</span> <span class="kt">int</span> <span class="n">MAX</span> <span class="o">=</span> <span class="mi">32</span><span class="p">;</span>
 
<span class="k">const</span> <span class="kt">int</span> <span class="n">dx</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="p">};</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">dy</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="p">};</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">dz</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span> <span class="p">};</span>
 
<span class="k">struct</span> <span class="nc">Point</span>
<span class="p">{</span>
    <span class="n">Point</span><span class="p">(</span><span class="kt">int</span> <span class="n">_x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="kt">int</span> <span class="n">_y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="kt">int</span> <span class="n">_z</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="kt">int</span> <span class="n">_ans</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span> <span class="n">x</span> <span class="o">=</span> <span class="n">_x</span><span class="p">;</span> <span class="n">y</span> <span class="o">=</span> <span class="n">_y</span><span class="p">;</span> <span class="n">z</span> <span class="o">=</span> <span class="n">_z</span><span class="p">;</span> <span class="n">ans</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="p">}</span>
     
    <span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="p">,</span> <span class="n">ans</span><span class="p">;</span>
<span class="p">};</span>
 
<span class="n">queue</span><span class="o">&lt;</span><span class="n">Point</span><span class="o">&gt;</span> <span class="n">Q</span><span class="p">;</span>
<span class="n">Point</span> <span class="n">Start</span><span class="p">,</span> <span class="n">End</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">pMaze</span><span class="p">[</span><span class="n">MAX</span><span class="p">][</span><span class="n">MAX</span><span class="p">][</span><span class="n">MAX</span><span class="p">];</span>
<span class="kt">bool</span> <span class="n">pVisited</span><span class="p">[</span><span class="n">MAX</span><span class="p">][</span><span class="n">MAX</span><span class="p">][</span><span class="n">MAX</span><span class="p">];</span>
 
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">L</span><span class="p">,</span> <span class="n">R</span><span class="p">,</span> <span class="n">C</span><span class="p">;</span>
    <span class="n">string</span> <span class="n">strTmp</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span><span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">L</span> <span class="o">&gt;&gt;</span> <span class="n">R</span> <span class="o">&gt;&gt;</span> <span class="n">C</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">L</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">R</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">C</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="k">break</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">Q</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span> <span class="p">{</span> <span class="n">Q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span> <span class="p">}</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">L</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">R</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">strTmp</span><span class="p">;</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">k</span> <span class="o">&lt;=</span> <span class="n">C</span><span class="p">;</span> <span class="n">k</span><span class="o">++</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">strTmp</span><span class="p">[</span><span class="n">k</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;S&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="n">pMaze</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">Start</span> <span class="o">=</span> <span class="n">Point</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="p">);</span> <span class="p">}</span>
                    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">strTmp</span><span class="p">[</span><span class="n">k</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;E&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="n">pMaze</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">End</span> <span class="o">=</span> <span class="n">Point</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="n">k</span><span class="p">);</span> <span class="p">}</span>
                    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">strTmp</span><span class="p">[</span><span class="n">k</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;.&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="n">pMaze</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="p">}</span>
                    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">strTmp</span><span class="p">[</span><span class="n">k</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;#&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="n">pMaze</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">][</span><span class="n">k</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="n">Q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">Start</span><span class="p">);</span>
        <span class="kt">bool</span> <span class="n">bFlag</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
        <span class="n">memset</span><span class="p">(</span><span class="n">pVisited</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">pVisited</span><span class="p">));</span>
        <span class="n">pVisited</span><span class="p">[</span><span class="n">Start</span><span class="p">.</span><span class="n">x</span><span class="p">][</span><span class="n">Start</span><span class="p">.</span><span class="n">y</span><span class="p">][</span><span class="n">Start</span><span class="p">.</span><span class="n">z</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
        <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">Q</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
        <span class="p">{</span>
            <span class="n">Point</span> <span class="n">Now</span> <span class="o">=</span> <span class="n">Q</span><span class="p">.</span><span class="n">front</span><span class="p">();</span> <span class="n">Q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
            <span class="k">if</span><span class="p">(</span><span class="n">Now</span><span class="p">.</span><span class="n">x</span> <span class="o">==</span> <span class="n">End</span><span class="p">.</span><span class="n">x</span> <span class="o">&amp;&amp;</span> <span class="n">Now</span><span class="p">.</span><span class="n">y</span> <span class="o">==</span> <span class="n">End</span><span class="p">.</span><span class="n">y</span> <span class="o">&amp;&amp;</span> <span class="n">Now</span><span class="p">.</span><span class="n">z</span> <span class="o">==</span> <span class="n">End</span><span class="p">.</span><span class="n">z</span><span class="p">)</span> <span class="p">{</span> <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;Escaped in &#34;</span> <span class="o">&lt;&lt;</span> <span class="n">Now</span><span class="p">.</span><span class="n">ans</span> <span class="o">&lt;&lt;</span> <span class="s">&#34; minute(s).&#34;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> <span class="n">bFlag</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span> <span class="k">break</span><span class="p">;</span> <span class="p">}</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">6</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">Point</span> <span class="n">Next</span><span class="p">;</span>
                <span class="n">Next</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="n">Now</span><span class="p">.</span><span class="n">x</span> <span class="o">+</span> <span class="n">dx</span><span class="p">[</span><span class="n">i</span><span class="p">];</span> <span class="n">Next</span><span class="p">.</span><span class="n">y</span> <span class="o">=</span> <span class="n">Now</span><span class="p">.</span><span class="n">y</span> <span class="o">+</span> <span class="n">dy</span><span class="p">[</span><span class="n">i</span><span class="p">];</span> <span class="n">Next</span><span class="p">.</span><span class="n">z</span> <span class="o">=</span> <span class="n">Now</span><span class="p">.</span><span class="n">z</span> <span class="o">+</span> <span class="n">dz</span><span class="p">[</span><span class="n">i</span><span class="p">];</span> <span class="n">Next</span><span class="p">.</span><span class="n">ans</span> <span class="o">=</span> <span class="n">Now</span><span class="p">.</span><span class="n">ans</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
                <span class="k">if</span><span class="p">(</span><span class="n">Next</span><span class="p">.</span><span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">Next</span><span class="p">.</span><span class="n">x</span> <span class="o">&lt;=</span> <span class="n">L</span> <span class="o">&amp;&amp;</span> <span class="n">Next</span><span class="p">.</span><span class="n">y</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">Next</span><span class="p">.</span><span class="n">y</span> <span class="o">&lt;=</span> <span class="n">R</span> <span class="o">&amp;&amp;</span> <span class="n">Next</span><span class="p">.</span><span class="n">z</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">Next</span><span class="p">.</span><span class="n">z</span> <span class="o">&lt;=</span> <span class="n">C</span> <span class="o">&amp;&amp;</span>
                    <span class="n">pMaze</span><span class="p">[</span><span class="n">Next</span><span class="p">.</span><span class="n">x</span><span class="p">][</span><span class="n">Next</span><span class="p">.</span><span class="n">y</span><span class="p">][</span><span class="n">Next</span><span class="p">.</span><span class="n">z</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">pVisited</span><span class="p">[</span><span class="n">Next</span><span class="p">.</span><span class="n">x</span><span class="p">][</span><span class="n">Next</span><span class="p">.</span><span class="n">y</span><span class="p">][</span><span class="n">Next</span><span class="p">.</span><span class="n">z</span><span class="p">])</span>
                <span class="p">{</span>
                    <span class="n">pVisited</span><span class="p">[</span><span class="n">Next</span><span class="p">.</span><span class="n">x</span><span class="p">][</span><span class="n">Next</span><span class="p">.</span><span class="n">y</span><span class="p">][</span><span class="n">Next</span><span class="p">.</span><span class="n">z</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                    <span class="n">Q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">Next</span><span class="p">);</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">bFlag</span><span class="p">)</span> <span class="p">{</span> <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;Trapped!&#34;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="poj-3278">POJ 3278</h2>
<p>同样是 bfs，一共三种状态进行转移。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-cpp" data-lang="cpp"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;memory.h&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;queue&gt;</span><span class="cp">
</span><span class="cp"></span> 
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
 
<span class="k">const</span> <span class="kt">int</span> <span class="n">MAX</span> <span class="o">=</span> <span class="mi">1024000</span><span class="p">;</span>
 
<span class="k">struct</span> <span class="nc">Pos</span>
<span class="p">{</span>
    <span class="n">Pos</span><span class="p">(</span><span class="kt">int</span> <span class="n">_x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="kt">int</span> <span class="n">_ans</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span> <span class="n">x</span> <span class="o">=</span> <span class="n">_x</span><span class="p">;</span> <span class="n">ans</span> <span class="o">=</span> <span class="n">_ans</span><span class="p">;</span> <span class="p">}</span>
     
    <span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="n">ans</span><span class="p">;</span>
<span class="p">};</span>
 
<span class="n">queue</span><span class="o">&lt;</span><span class="n">Pos</span><span class="o">&gt;</span> <span class="n">Q</span><span class="p">;</span>
<span class="kt">bool</span> <span class="n">pVisited</span><span class="p">[</span><span class="n">MAX</span><span class="p">];</span>
 
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">N</span><span class="p">,</span> <span class="n">K</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span><span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">N</span> <span class="o">&gt;&gt;</span> <span class="n">K</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">memset</span><span class="p">(</span><span class="n">pVisited</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">pVisited</span><span class="p">));</span>
        <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">Q</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span> <span class="p">{</span> <span class="n">Q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span> <span class="p">}</span>
        <span class="n">Q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">Pos</span><span class="p">(</span><span class="n">N</span><span class="p">,</span> <span class="mi">0</span><span class="p">));</span> <span class="n">pVisited</span><span class="p">[</span><span class="n">N</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
        <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">Q</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
        <span class="p">{</span>
            <span class="n">Pos</span> <span class="n">Now</span> <span class="o">=</span> <span class="n">Q</span><span class="p">.</span><span class="n">front</span><span class="p">();</span> <span class="n">Q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
            <span class="k">if</span><span class="p">(</span><span class="n">Now</span><span class="p">.</span><span class="n">x</span> <span class="o">==</span> <span class="n">K</span><span class="p">)</span> <span class="p">{</span> <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">Now</span><span class="p">.</span><span class="n">ans</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> <span class="k">break</span><span class="p">;</span> <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="n">Now</span><span class="p">.</span><span class="n">x</span> <span class="o">*</span> <span class="mi">2</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">Now</span><span class="p">.</span><span class="n">x</span> <span class="o">*</span> <span class="mi">2</span> <span class="o">&lt;</span> <span class="n">MAX</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">pVisited</span><span class="p">[</span><span class="n">Now</span><span class="p">.</span><span class="n">x</span> <span class="o">*</span> <span class="mi">2</span><span class="p">])</span>
            <span class="p">{</span>
                <span class="n">Q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">Pos</span><span class="p">(</span><span class="n">Now</span><span class="p">.</span><span class="n">x</span> <span class="o">*</span> <span class="mi">2</span><span class="p">,</span> <span class="n">Now</span><span class="p">.</span><span class="n">ans</span> <span class="o">+</span> <span class="mi">1</span><span class="p">));</span>
                <span class="n">pVisited</span><span class="p">[</span><span class="n">Now</span><span class="p">.</span><span class="n">x</span> <span class="o">*</span> <span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="n">Now</span><span class="p">.</span><span class="n">x</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">Now</span><span class="p">.</span><span class="n">x</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">&lt;</span> <span class="n">MAX</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">pVisited</span><span class="p">[</span><span class="n">Now</span><span class="p">.</span><span class="n">x</span> <span class="o">-</span> <span class="mi">1</span><span class="p">])</span>
            <span class="p">{</span>
                <span class="n">Q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">Pos</span><span class="p">(</span><span class="n">Now</span><span class="p">.</span><span class="n">x</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">Now</span><span class="p">.</span><span class="n">ans</span> <span class="o">+</span> <span class="mi">1</span><span class="p">));</span>
                <span class="n">pVisited</span><span class="p">[</span><span class="n">Now</span><span class="p">.</span><span class="n">x</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="n">Now</span><span class="p">.</span><span class="n">x</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">&gt;=</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">Now</span><span class="p">.</span><span class="n">x</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">&lt;</span> <span class="n">MAX</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">pVisited</span><span class="p">[</span><span class="n">Now</span><span class="p">.</span><span class="n">x</span> <span class="o">+</span> <span class="mi">1</span><span class="p">])</span>
            <span class="p">{</span>
                <span class="n">Q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">Pos</span><span class="p">(</span><span class="n">Now</span><span class="p">.</span><span class="n">x</span> <span class="o">+</span> <span class="mi">1</span><span class="p">,</span> <span class="n">Now</span><span class="p">.</span><span class="n">ans</span> <span class="o">+</span> <span class="mi">1</span><span class="p">));</span>
                <span class="n">pVisited</span><span class="p">[</span><span class="n">Now</span><span class="p">.</span><span class="n">x</span> <span class="o">+</span> <span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="poj-3279">POJ 3279</h2>
<p>考虑到第一行的状态确定以后，后面的 $N - 1$ 行的状态就确定了，因此只需要枚举第一行，由于数据范围比较小，所以使用二进制状态压缩即可。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span><span class="lnt">89
</span><span class="lnt">90
</span><span class="lnt">91
</span><span class="lnt">92
</span><span class="lnt">93
</span><span class="lnt">94
</span><span class="lnt">95
</span><span class="lnt">96
</span><span class="lnt">97
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-cpp" data-lang="cpp"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;memory.h&gt;</span><span class="cp">
</span><span class="cp"></span> 
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
 
<span class="k">const</span> <span class="kt">int</span> <span class="n">MAX</span> <span class="o">=</span> <span class="mi">32</span><span class="p">;</span>
 
<span class="k">const</span> <span class="kt">int</span> <span class="n">dx</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="p">};</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">dy</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span> <span class="p">};</span>
 
<span class="kt">int</span> <span class="n">M</span><span class="p">,</span> <span class="n">N</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">pMap</span><span class="p">[</span><span class="n">MAX</span><span class="p">][</span><span class="n">MAX</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">pAns</span><span class="p">[</span><span class="n">MAX</span><span class="p">][</span><span class="n">MAX</span><span class="p">],</span> <span class="n">pTmp</span><span class="p">[</span><span class="n">MAX</span><span class="p">][</span><span class="n">MAX</span><span class="p">];</span>
 
<span class="kt">int</span> <span class="nf">Solve</span><span class="p">();</span>
<span class="kt">int</span> <span class="nf">IsFlip</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">);</span>
 
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">while</span><span class="p">(</span><span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">M</span> <span class="o">&gt;&gt;</span> <span class="n">N</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">ans</span> <span class="o">=</span> <span class="mi">2147483647</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">M</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span> <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">pMap</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">];</span> <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="p">(</span><span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">N</span><span class="p">);</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">memset</span><span class="p">(</span><span class="n">pTmp</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">pTmp</span><span class="p">));</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">&amp;</span> <span class="p">(</span><span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="p">))</span>
                <span class="p">{</span> <span class="n">pTmp</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="p">}</span>
            <span class="p">}</span>
            <span class="kt">int</span> <span class="n">nTmp</span> <span class="o">=</span> <span class="n">Solve</span><span class="p">();</span>
            <span class="k">if</span><span class="p">(</span><span class="n">nTmp</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span> <span class="k">continue</span><span class="p">;</span> <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="n">nTmp</span> <span class="o">&lt;</span> <span class="n">ans</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">ans</span> <span class="o">=</span> <span class="n">nTmp</span><span class="p">;</span>
                <span class="n">memcpy</span><span class="p">(</span><span class="n">pAns</span><span class="p">,</span> <span class="n">pTmp</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">pTmp</span><span class="p">));</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">if</span><span class="p">(</span><span class="n">ans</span> <span class="o">!=</span> <span class="mi">2147483647</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">M</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">pAns</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">];</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">j</span> <span class="o">!=</span> <span class="n">N</span><span class="p">)</span> <span class="p">{</span> <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34; &#34;</span><span class="p">;</span> <span class="p">}</span>
                <span class="p">}</span>
                <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">else</span> <span class="p">{</span> <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;IMPOSSIBLE&#34;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
 
<span class="kt">int</span> <span class="nf">Solve</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">nRet</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">M</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">IsFlip</span><span class="p">(</span><span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="n">j</span><span class="p">))</span> <span class="p">{</span> <span class="n">pTmp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">IsFlip</span><span class="p">(</span><span class="n">M</span><span class="p">,</span> <span class="n">i</span><span class="p">))</span> <span class="p">{</span> <span class="k">return</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">M</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">nRet</span> <span class="o">+=</span> <span class="n">pTmp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">];</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">nRet</span><span class="p">;</span>
<span class="p">}</span>
 
<span class="kt">int</span> <span class="nf">IsFlip</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">nRet</span> <span class="o">=</span> <span class="n">pTmp</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">];</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">nx</span> <span class="o">=</span> <span class="n">x</span> <span class="o">+</span> <span class="n">dx</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="kt">int</span> <span class="n">ny</span> <span class="o">=</span> <span class="n">y</span> <span class="o">+</span> <span class="n">dy</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="k">if</span><span class="p">(</span><span class="n">nx</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">nx</span> <span class="o">&lt;=</span> <span class="n">M</span> <span class="o">&amp;&amp;</span> <span class="n">ny</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">ny</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">)</span>
        <span class="p">{</span> <span class="n">nRet</span> <span class="o">+=</span> <span class="n">pTmp</span><span class="p">[</span><span class="n">nx</span><span class="p">][</span><span class="n">ny</span><span class="p">];</span> <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">nRet</span> <span class="o">+=</span> <span class="n">pMap</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">];</span>
    <span class="k">return</span> <span class="n">nRet</span> <span class="o">&amp;</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="poj-1426">POJ 1426</h2>
<p>这道题目也是一道 bfs，只需要记录每次遍历到的结果 <code>tmp % N</code>，同时保存已选取的数字的内容，最后判断已选取的数字的长度是否符合题目的要求。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-cpp" data-lang="cpp"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;memory.h&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;queue&gt;</span><span class="cp">
</span><span class="cp"></span> 
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
 
<span class="k">const</span> <span class="kt">int</span> <span class="n">MAX</span> <span class="o">=</span> <span class="mi">256</span><span class="p">;</span>
 
<span class="k">const</span> <span class="kt">int</span> <span class="n">d</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span> <span class="p">};</span>
 
<span class="k">struct</span> <span class="nc">Num</span>
<span class="p">{</span>
    <span class="n">Num</span><span class="p">(</span><span class="kt">int</span> <span class="n">_nNum</span> <span class="o">=</span> <span class="mi">1</span><span class="p">,</span> <span class="n">string</span> <span class="n">_ans</span> <span class="o">=</span> <span class="s">&#34;1&#34;</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">nNum</span> <span class="o">=</span> <span class="n">_nNum</span><span class="p">;</span>
        <span class="n">ans</span> <span class="o">=</span> <span class="n">_ans</span><span class="p">;</span>
    <span class="p">}</span>
 
    <span class="kt">int</span> <span class="n">nNum</span><span class="p">;</span>
    <span class="n">string</span> <span class="n">ans</span><span class="p">;</span>
<span class="p">};</span>
 
<span class="kt">int</span> <span class="n">N</span><span class="p">;</span>
<span class="kt">bool</span> <span class="n">pVisited</span><span class="p">[</span><span class="n">MAX</span><span class="p">];</span>
<span class="n">queue</span><span class="o">&lt;</span><span class="n">Num</span><span class="o">&gt;</span> <span class="n">Q</span><span class="p">;</span>
 
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">while</span><span class="p">(</span><span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">N</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">N</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="k">break</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">Q</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span> <span class="p">{</span> <span class="n">Q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span> <span class="p">}</span>
            <span class="n">memset</span><span class="p">(</span><span class="n">pVisited</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">pVisited</span><span class="p">));</span>
            <span class="n">Q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">Num</span><span class="p">(</span><span class="mi">1</span><span class="p">));</span> <span class="n">pVisited</span><span class="p">[</span><span class="mi">1</span> <span class="o">%</span> <span class="n">N</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
            <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">Q</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
            <span class="p">{</span>
                <span class="n">Num</span> <span class="n">Now</span> <span class="o">=</span> <span class="n">Q</span><span class="p">.</span><span class="n">front</span><span class="p">();</span> <span class="n">Q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
                <span class="k">if</span><span class="p">(</span><span class="n">Now</span><span class="p">.</span><span class="n">nNum</span> <span class="o">%</span> <span class="n">N</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">Now</span><span class="p">.</span><span class="n">ans</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> <span class="k">break</span><span class="p">;</span> <span class="p">}</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">2</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="n">Num</span> <span class="n">Next</span> <span class="o">=</span> <span class="n">Now</span><span class="p">;</span>
                    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">pVisited</span><span class="p">[(</span><span class="n">Now</span><span class="p">.</span><span class="n">nNum</span> <span class="o">*</span> <span class="mi">10</span> <span class="o">+</span> <span class="n">d</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="o">%</span> <span class="n">N</span><span class="p">])</span>
                    <span class="p">{</span>
                        <span class="n">pVisited</span><span class="p">[(</span><span class="n">Now</span><span class="p">.</span><span class="n">nNum</span> <span class="o">*</span> <span class="mi">10</span> <span class="o">+</span> <span class="n">d</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="o">%</span> <span class="n">N</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                        <span class="n">Q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">Num</span><span class="p">((</span><span class="n">Now</span><span class="p">.</span><span class="n">nNum</span> <span class="o">*</span> <span class="mi">10</span> <span class="o">+</span> <span class="n">d</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="o">%</span> <span class="n">N</span><span class="p">,</span> <span class="n">Now</span><span class="p">.</span><span class="n">ans</span> <span class="o">+</span> <span class="p">(</span><span class="kt">char</span><span class="p">)(</span><span class="n">d</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="sc">&#39;0&#39;</span><span class="p">)));</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="poj-3126">POJ 3126</h2>
<p>bfs 水题。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-cpp" data-lang="cpp"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;memory.h&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;queue&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;set&gt;</span><span class="cp">
</span><span class="cp"></span> 
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
 
<span class="k">const</span> <span class="kt">int</span> <span class="n">MAX</span> <span class="o">=</span> <span class="mi">10240</span><span class="p">;</span>
 
<span class="k">struct</span> <span class="nc">Prime</span>
<span class="p">{</span>
    <span class="n">Prime</span><span class="p">(</span><span class="kt">int</span> <span class="n">_x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="kt">int</span> <span class="n">_ans</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span> <span class="n">x</span> <span class="o">=</span> <span class="n">_x</span><span class="p">;</span> <span class="n">ans</span> <span class="o">=</span> <span class="n">_ans</span><span class="p">;</span> <span class="p">}</span>
     
    <span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="n">ans</span><span class="p">;</span>
<span class="p">};</span>
 
<span class="n">set</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span> <span class="n">S</span><span class="p">;</span>
<span class="n">queue</span><span class="o">&lt;</span><span class="n">Prime</span><span class="o">&gt;</span> <span class="n">Q</span><span class="p">;</span>
<span class="kt">bool</span> <span class="n">pVisited</span><span class="p">[</span><span class="n">MAX</span><span class="p">];</span>
 
<span class="kt">int</span> <span class="nf">Change</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">,</span> <span class="kt">int</span> <span class="n">z</span><span class="p">);</span>
 
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1000</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="mi">9999</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">bool</span> <span class="n">bFlag</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span> <span class="n">j</span> <span class="o">*</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">i</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="o">%</span> <span class="n">j</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="n">bFlag</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span> <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">if</span><span class="p">(</span><span class="n">bFlag</span><span class="p">)</span> <span class="p">{</span> <span class="n">S</span><span class="p">.</span><span class="n">insert</span><span class="p">(</span><span class="n">i</span><span class="p">);</span> <span class="p">}</span>
    <span class="p">}</span>
    <span class="kt">int</span> <span class="n">N</span><span class="p">,</span> <span class="n">s</span><span class="p">,</span> <span class="n">e</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span><span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">N</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">Q</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span> <span class="p">{</span> <span class="n">Q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span> <span class="p">}</span>
            <span class="n">memset</span><span class="p">(</span><span class="n">pVisited</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">pVisited</span><span class="p">));</span>
            <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">s</span> <span class="o">&gt;&gt;</span> <span class="n">e</span><span class="p">;</span>
            <span class="n">Q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">Prime</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="mi">0</span><span class="p">));</span> <span class="n">pVisited</span><span class="p">[</span><span class="n">s</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
            <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">Q</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
            <span class="p">{</span>
                <span class="n">Prime</span> <span class="n">Now</span> <span class="o">=</span> <span class="n">Q</span><span class="p">.</span><span class="n">front</span><span class="p">();</span> <span class="n">Q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
                <span class="k">if</span><span class="p">(</span><span class="n">Now</span><span class="p">.</span><span class="n">x</span> <span class="o">==</span> <span class="n">e</span><span class="p">)</span> <span class="p">{</span> <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">Now</span><span class="p">.</span><span class="n">ans</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> <span class="k">break</span><span class="p">;</span> <span class="p">}</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="mi">9</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
                    <span class="p">{</span>
                        <span class="kt">int</span> <span class="n">nNext</span> <span class="o">=</span> <span class="n">Change</span><span class="p">(</span><span class="n">Now</span><span class="p">.</span><span class="n">x</span><span class="p">,</span> <span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">);</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">S</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="n">nNext</span><span class="p">)</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">pVisited</span><span class="p">[</span><span class="n">nNext</span><span class="p">])</span>
                        <span class="p">{</span>
                            <span class="n">Q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">Prime</span><span class="p">(</span><span class="n">nNext</span><span class="p">,</span> <span class="n">Now</span><span class="p">.</span><span class="n">ans</span> <span class="o">+</span> <span class="mi">1</span><span class="p">));</span>
                            <span class="n">pVisited</span><span class="p">[</span><span class="n">nNext</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                        <span class="p">}</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
 
<span class="kt">int</span> <span class="nf">Change</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">,</span> <span class="kt">int</span> <span class="n">z</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">nTmp</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span><span class="n">y</span><span class="o">--</span><span class="p">)</span> <span class="p">{</span> <span class="n">nTmp</span> <span class="o">*=</span> <span class="mi">10</span><span class="p">;</span> <span class="p">}</span>
    <span class="n">x</span> <span class="o">-=</span> <span class="n">x</span> <span class="o">/</span> <span class="n">nTmp</span> <span class="o">%</span> <span class="mi">10</span> <span class="o">*</span> <span class="n">nTmp</span><span class="p">;</span>
    <span class="n">x</span> <span class="o">+=</span> <span class="n">z</span> <span class="o">*</span> <span class="n">nTmp</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">x</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="poj-3087">POJ 3087</h2>
<p>模拟整个过程即可，如果出现与初始情况相同的情形，就说明无解。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-cpp" data-lang="cpp"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
</span><span class="cp"></span> 
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
 
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">N</span><span class="p">,</span> <span class="n">C</span><span class="p">;</span>
    <span class="kt">bool</span> <span class="n">bFlag</span><span class="p">;</span>
    <span class="n">string</span> <span class="n">SA</span><span class="p">,</span> <span class="n">SB</span><span class="p">,</span> <span class="n">S</span><span class="p">,</span> <span class="n">Init</span><span class="p">;</span>
    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">N</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">C</span> <span class="o">&gt;&gt;</span> <span class="n">SA</span> <span class="o">&gt;&gt;</span> <span class="n">SB</span> <span class="o">&gt;&gt;</span> <span class="n">S</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">nCnt</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">Init</span> <span class="o">=</span> <span class="s">&#34;&#34;</span><span class="p">;</span> <span class="n">bFlag</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
        <span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">nCnt</span><span class="o">++</span><span class="p">;</span>
            <span class="n">string</span> <span class="n">ans</span> <span class="o">=</span> <span class="s">&#34;&#34;</span><span class="p">;</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">SA</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">ans</span> <span class="o">+=</span> <span class="n">SB</span><span class="p">[</span><span class="n">j</span><span class="p">];</span>
                <span class="n">ans</span> <span class="o">+=</span> <span class="n">SA</span><span class="p">[</span><span class="n">j</span><span class="p">];</span>
            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="n">Init</span> <span class="o">==</span> <span class="s">&#34;&#34;</span><span class="p">)</span> <span class="p">{</span> <span class="n">Init</span> <span class="o">=</span> <span class="n">ans</span><span class="p">;</span> <span class="p">}</span>
            <span class="n">SA</span> <span class="o">=</span> <span class="n">ans</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="n">C</span><span class="p">);</span>
            <span class="n">SB</span> <span class="o">=</span> <span class="n">ans</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="n">C</span><span class="p">,</span> <span class="n">C</span><span class="p">);</span>
            <span class="k">if</span><span class="p">(</span><span class="n">nCnt</span> <span class="o">!=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">ans</span> <span class="o">==</span> <span class="n">Init</span><span class="p">)</span> <span class="p">{</span> <span class="k">break</span><span class="p">;</span> <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="n">ans</span> <span class="o">==</span> <span class="n">S</span><span class="p">)</span> <span class="p">{</span> <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">i</span> <span class="o">&lt;&lt;</span> <span class="s">&#34; &#34;</span> <span class="o">&lt;&lt;</span> <span class="n">nCnt</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> <span class="n">bFlag</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span> <span class="k">break</span><span class="p">;</span> <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">bFlag</span><span class="p">)</span> <span class="p">{</span> <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">i</span> <span class="o">&lt;&lt;</span> <span class="s">&#34; -1&#34;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="poj-3414">POJ 3414</h2>
<p>bfs 水题。处理好倒水的过程即可。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span><span class="lnt">108
</span><span class="lnt">109
</span><span class="lnt">110
</span><span class="lnt">111
</span><span class="lnt">112
</span><span class="lnt">113
</span><span class="lnt">114
</span><span class="lnt">115
</span><span class="lnt">116
</span><span class="lnt">117
</span><span class="lnt">118
</span><span class="lnt">119
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-cpp" data-lang="cpp"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;memory.h&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;queue&gt;</span><span class="cp">
</span><span class="cp"></span> 
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
 
<span class="k">const</span> <span class="kt">int</span> <span class="n">MAX</span> <span class="o">=</span> <span class="mi">128</span><span class="p">;</span>
 
<span class="k">struct</span> <span class="nc">Pots</span>
<span class="p">{</span>
    <span class="n">Pots</span><span class="p">(</span><span class="kt">int</span> <span class="n">_A</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="kt">int</span> <span class="n">_B</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">A</span> <span class="o">=</span> <span class="n">_A</span><span class="p">;</span> <span class="n">B</span> <span class="o">=</span> <span class="n">_B</span><span class="p">;</span>
        <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">pOpt</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span> <span class="p">{</span> <span class="n">pOpt</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span> <span class="p">}</span>
    <span class="p">}</span>
     
    <span class="kt">int</span> <span class="n">A</span><span class="p">,</span> <span class="n">B</span><span class="p">;</span>
    <span class="n">queue</span><span class="o">&lt;</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">pOpt</span><span class="p">;</span>
<span class="p">};</span>
 
<span class="kt">int</span> <span class="n">A</span><span class="p">,</span> <span class="n">B</span><span class="p">,</span> <span class="n">C</span><span class="p">;</span>
<span class="kt">bool</span> <span class="n">pVisited</span><span class="p">[</span><span class="n">MAX</span><span class="p">][</span><span class="n">MAX</span><span class="p">];</span>
<span class="n">queue</span><span class="o">&lt;</span><span class="n">Pots</span><span class="o">&gt;</span> <span class="n">Q</span><span class="p">;</span>
 
<span class="n">Pots</span> <span class="nf">Opt</span><span class="p">(</span><span class="n">Pots</span> <span class="n">Now</span><span class="p">,</span> <span class="kt">int</span> <span class="n">k</span><span class="p">);</span>
<span class="n">Pots</span> <span class="nf">Fill</span><span class="p">(</span><span class="n">Pots</span> <span class="n">Now</span><span class="p">,</span> <span class="kt">int</span> <span class="n">x</span><span class="p">);</span>
<span class="n">Pots</span> <span class="nf">Drop</span><span class="p">(</span><span class="n">Pots</span> <span class="n">Now</span><span class="p">,</span> <span class="kt">int</span> <span class="n">x</span><span class="p">);</span>
<span class="n">Pots</span> <span class="nf">Pour</span><span class="p">(</span><span class="n">Pots</span> <span class="n">Now</span><span class="p">,</span> <span class="kt">int</span> <span class="n">x</span><span class="p">);</span>
 
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">bool</span> <span class="n">bFlag</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span><span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">A</span> <span class="o">&gt;&gt;</span> <span class="n">B</span> <span class="o">&gt;&gt;</span> <span class="n">C</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">bFlag</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
        <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">Q</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span> <span class="p">{</span> <span class="n">Q</span><span class="p">.</span><span class="n">empty</span><span class="p">();</span> <span class="p">}</span>
        <span class="n">memset</span><span class="p">(</span><span class="n">pVisited</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">pVisited</span><span class="p">));</span>
        <span class="n">Q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">Pots</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">));</span> <span class="n">pVisited</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
        <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">Q</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
        <span class="p">{</span>
            <span class="n">Pots</span> <span class="n">Now</span> <span class="o">=</span> <span class="n">Q</span><span class="p">.</span><span class="n">front</span><span class="p">();</span> <span class="n">Q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
            <span class="k">if</span><span class="p">(</span><span class="n">Now</span><span class="p">.</span><span class="n">A</span> <span class="o">==</span> <span class="n">C</span> <span class="o">||</span> <span class="n">Now</span><span class="p">.</span><span class="n">B</span> <span class="o">==</span> <span class="n">C</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">Now</span><span class="p">.</span><span class="n">pOpt</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
                <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">Now</span><span class="p">.</span><span class="n">pOpt</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
                <span class="p">{</span>
                    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">Now</span><span class="p">.</span><span class="n">pOpt</span><span class="p">.</span><span class="n">front</span><span class="p">()</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
                    <span class="n">Now</span><span class="p">.</span><span class="n">pOpt</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
                <span class="p">}</span>
                <span class="n">bFlag</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                <span class="k">break</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">6</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">Pots</span> <span class="n">Next</span> <span class="o">=</span> <span class="n">Opt</span><span class="p">(</span><span class="n">Now</span><span class="p">,</span> <span class="n">i</span><span class="p">);</span>
                <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">pVisited</span><span class="p">[</span><span class="n">Next</span><span class="p">.</span><span class="n">A</span><span class="p">][</span><span class="n">Next</span><span class="p">.</span><span class="n">B</span><span class="p">])</span>
                <span class="p">{</span>
                    <span class="n">Q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">Next</span><span class="p">);</span>
                    <span class="n">pVisited</span><span class="p">[</span><span class="n">Next</span><span class="p">.</span><span class="n">A</span><span class="p">][</span><span class="n">Next</span><span class="p">.</span><span class="n">B</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">bFlag</span><span class="p">)</span> <span class="p">{</span> <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;impossible&#34;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
 
<span class="n">Pots</span> <span class="nf">Opt</span><span class="p">(</span><span class="n">Pots</span> <span class="n">Now</span><span class="p">,</span> <span class="kt">int</span> <span class="n">k</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">switch</span><span class="p">(</span><span class="n">k</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">case</span> <span class="mi">0</span><span class="o">:</span>
            <span class="k">return</span> <span class="n">Fill</span><span class="p">(</span><span class="n">Now</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
        <span class="k">case</span> <span class="mi">1</span><span class="o">:</span>
            <span class="k">return</span> <span class="n">Fill</span><span class="p">(</span><span class="n">Now</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
        <span class="k">case</span> <span class="mi">2</span><span class="o">:</span>
            <span class="k">return</span> <span class="n">Drop</span><span class="p">(</span><span class="n">Now</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
        <span class="k">case</span> <span class="mi">3</span><span class="o">:</span>
            <span class="k">return</span> <span class="n">Drop</span><span class="p">(</span><span class="n">Now</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
        <span class="k">case</span> <span class="mi">4</span><span class="o">:</span>
            <span class="k">return</span> <span class="n">Pour</span><span class="p">(</span><span class="n">Now</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span>
        <span class="k">case</span> <span class="mi">5</span><span class="o">:</span>
            <span class="k">return</span> <span class="n">Pour</span><span class="p">(</span><span class="n">Now</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
    <span class="p">}</span>
<span class="p">}</span>
 
<span class="n">Pots</span> <span class="nf">Fill</span><span class="p">(</span><span class="n">Pots</span> <span class="n">Now</span><span class="p">,</span> <span class="kt">int</span> <span class="n">x</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span><span class="p">(</span><span class="n">x</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="n">Now</span><span class="p">.</span><span class="n">A</span> <span class="o">=</span> <span class="n">A</span><span class="p">;</span> <span class="n">Now</span><span class="p">.</span><span class="n">pOpt</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="s">&#34;FILL(1)&#34;</span><span class="p">);</span> <span class="p">}</span>
    <span class="k">else</span> <span class="p">{</span> <span class="n">Now</span><span class="p">.</span><span class="n">B</span> <span class="o">=</span> <span class="n">B</span><span class="p">;</span> <span class="n">Now</span><span class="p">.</span><span class="n">pOpt</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="s">&#34;FILL(2)&#34;</span><span class="p">);</span> <span class="p">}</span>
    <span class="k">return</span> <span class="n">Now</span><span class="p">;</span>
<span class="p">}</span>
 
<span class="n">Pots</span> <span class="nf">Drop</span><span class="p">(</span><span class="n">Pots</span> <span class="n">Now</span><span class="p">,</span> <span class="kt">int</span> <span class="n">x</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span><span class="p">(</span><span class="n">x</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="n">Now</span><span class="p">.</span><span class="n">A</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">Now</span><span class="p">.</span><span class="n">pOpt</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="s">&#34;DROP(1)&#34;</span><span class="p">);</span> <span class="p">}</span>
    <span class="k">else</span> <span class="p">{</span> <span class="n">Now</span><span class="p">.</span><span class="n">B</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">Now</span><span class="p">.</span><span class="n">pOpt</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="s">&#34;DROP(2)&#34;</span><span class="p">);</span> <span class="p">}</span>
    <span class="k">return</span> <span class="n">Now</span><span class="p">;</span>
<span class="p">}</span>
 
<span class="n">Pots</span> <span class="nf">Pour</span><span class="p">(</span><span class="n">Pots</span> <span class="n">Now</span><span class="p">,</span> <span class="kt">int</span> <span class="n">x</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span><span class="p">(</span><span class="n">x</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Now</span><span class="p">.</span><span class="n">B</span> <span class="o">+=</span> <span class="n">Now</span><span class="p">.</span><span class="n">A</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">Now</span><span class="p">.</span><span class="n">B</span> <span class="o">&gt;</span> <span class="n">B</span><span class="p">)</span> <span class="p">{</span> <span class="n">Now</span><span class="p">.</span><span class="n">A</span> <span class="o">=</span> <span class="n">Now</span><span class="p">.</span><span class="n">B</span> <span class="o">-</span> <span class="n">B</span><span class="p">;</span> <span class="n">Now</span><span class="p">.</span><span class="n">B</span> <span class="o">=</span> <span class="n">B</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">else</span> <span class="p">{</span> <span class="n">Now</span><span class="p">.</span><span class="n">A</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="p">}</span>
        <span class="n">Now</span><span class="p">.</span><span class="n">pOpt</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="s">&#34;POUR(1,2)&#34;</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">else</span>
    <span class="p">{</span>
        <span class="n">Now</span><span class="p">.</span><span class="n">A</span> <span class="o">+=</span> <span class="n">Now</span><span class="p">.</span><span class="n">B</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">Now</span><span class="p">.</span><span class="n">A</span> <span class="o">&gt;</span> <span class="n">A</span><span class="p">)</span> <span class="p">{</span> <span class="n">Now</span><span class="p">.</span><span class="n">B</span> <span class="o">=</span> <span class="n">Now</span><span class="p">.</span><span class="n">A</span> <span class="o">-</span> <span class="n">A</span><span class="p">;</span> <span class="n">Now</span><span class="p">.</span><span class="n">A</span> <span class="o">=</span> <span class="n">A</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">else</span> <span class="p">{</span> <span class="n">Now</span><span class="p">.</span><span class="n">B</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="p">}</span>
        <span class="n">Now</span><span class="p">.</span><span class="n">pOpt</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="s">&#34;POUR(2,1)&#34;</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">Now</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="fzu-2150">FZU 2150</h2>
<p>暴力枚举两个起点，然后 bfs。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span><span class="lnt">106
</span><span class="lnt">107
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-cpp" data-lang="cpp"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;memory.h&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;queue&gt;</span><span class="cp">
</span><span class="cp"></span> 
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
 
<span class="k">const</span> <span class="kt">int</span> <span class="n">MAX</span> <span class="o">=</span> <span class="mi">16</span><span class="p">;</span>
 
<span class="k">const</span> <span class="kt">int</span> <span class="n">dx</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="p">};</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">dy</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span> <span class="p">};</span>
 
<span class="k">struct</span> <span class="nc">Pos</span>
<span class="p">{</span>
    <span class="n">Pos</span><span class="p">(</span><span class="kt">int</span> <span class="n">_x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">_y</span><span class="p">,</span> <span class="kt">int</span> <span class="n">_ans</span><span class="p">)</span>
    <span class="p">{</span> <span class="n">x</span> <span class="o">=</span> <span class="n">_x</span><span class="p">;</span> <span class="n">y</span> <span class="o">=</span> <span class="n">_y</span><span class="p">;</span> <span class="n">ans</span> <span class="o">=</span> <span class="n">_ans</span><span class="p">;</span> <span class="p">}</span>
     
    <span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">ans</span><span class="p">;</span>
<span class="p">};</span>
 
<span class="kt">int</span> <span class="n">T</span><span class="p">,</span> <span class="n">N</span><span class="p">,</span> <span class="n">M</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">pMap</span><span class="p">[</span><span class="n">MAX</span><span class="p">][</span><span class="n">MAX</span><span class="p">];</span>
<span class="kt">bool</span> <span class="n">pVisited</span><span class="p">[</span><span class="n">MAX</span><span class="p">][</span><span class="n">MAX</span><span class="p">];</span>
<span class="n">queue</span><span class="o">&lt;</span><span class="n">Pos</span><span class="o">&gt;</span> <span class="n">Q</span><span class="p">;</span>
 
<span class="kt">bool</span> <span class="nf">Check</span><span class="p">();</span>
<span class="kt">int</span> <span class="nf">Bfs</span><span class="p">(</span><span class="n">Pos</span> <span class="n">A</span><span class="p">,</span> <span class="n">Pos</span> <span class="n">B</span><span class="p">);</span>
 
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">string</span> <span class="n">strTmp</span><span class="p">;</span>
    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">T</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">k</span> <span class="o">&lt;=</span> <span class="n">T</span><span class="p">;</span> <span class="n">k</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">N</span> <span class="o">&gt;&gt;</span> <span class="n">M</span><span class="p">;</span>
        <span class="kt">int</span> <span class="n">ans</span> <span class="o">=</span> <span class="mi">2147483647</span><span class="p">;</span>
        <span class="kt">bool</span> <span class="n">bFlag</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">strTmp</span><span class="p">;</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">M</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">strTmp</span><span class="p">[</span><span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;.&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="n">pMap</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="p">}</span>
                <span class="k">else</span> <span class="p">{</span> <span class="n">pMap</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">M</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">p</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">p</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">;</span> <span class="n">p</span><span class="o">++</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">q</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">q</span> <span class="o">&lt;=</span> <span class="n">M</span><span class="p">;</span> <span class="n">q</span><span class="o">++</span><span class="p">)</span>
                    <span class="p">{</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">pMap</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">||</span> <span class="n">pMap</span><span class="p">[</span><span class="n">p</span><span class="p">][</span><span class="n">q</span><span class="p">])</span> <span class="p">{</span> <span class="k">continue</span><span class="p">;</span> <span class="p">}</span>
                        <span class="kt">int</span> <span class="n">nTmp</span> <span class="o">=</span> <span class="n">Bfs</span><span class="p">(</span><span class="n">Pos</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="mi">0</span><span class="p">),</span> <span class="n">Pos</span><span class="p">(</span><span class="n">p</span><span class="p">,</span> <span class="n">q</span><span class="p">,</span> <span class="mi">0</span><span class="p">));</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">Check</span><span class="p">())</span> <span class="p">{</span> <span class="n">ans</span> <span class="o">=</span> <span class="n">min</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span> <span class="n">nTmp</span><span class="p">);</span> <span class="n">bFlag</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span> <span class="p">}</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;Case &#34;</span> <span class="o">&lt;&lt;</span> <span class="n">k</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;: &#34;</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">bFlag</span><span class="p">)</span> <span class="p">{</span> <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">ans</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">else</span> <span class="p">{</span> <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="o">-</span><span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
 
<span class="kt">int</span> <span class="nf">Bfs</span><span class="p">(</span><span class="n">Pos</span> <span class="n">A</span><span class="p">,</span> <span class="n">Pos</span> <span class="n">B</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">nRet</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">Q</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span> <span class="p">{</span> <span class="n">Q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span> <span class="p">}</span>
    <span class="n">memset</span><span class="p">(</span><span class="n">pVisited</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">pVisited</span><span class="p">));</span>
    <span class="n">Q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">A</span><span class="p">);</span> <span class="n">pVisited</span><span class="p">[</span><span class="n">A</span><span class="p">.</span><span class="n">x</span><span class="p">][</span><span class="n">A</span><span class="p">.</span><span class="n">y</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
    <span class="n">Q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">B</span><span class="p">);</span> <span class="n">pVisited</span><span class="p">[</span><span class="n">B</span><span class="p">.</span><span class="n">x</span><span class="p">][</span><span class="n">B</span><span class="p">.</span><span class="n">y</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">Q</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
    <span class="p">{</span>
        <span class="n">Pos</span> <span class="n">Now</span> <span class="o">=</span> <span class="n">Q</span><span class="p">.</span><span class="n">front</span><span class="p">();</span> <span class="n">Q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
        <span class="n">nRet</span> <span class="o">=</span> <span class="n">max</span><span class="p">(</span><span class="n">nRet</span><span class="p">,</span> <span class="n">Now</span><span class="p">.</span><span class="n">ans</span><span class="p">);</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Pos</span> <span class="n">Next</span> <span class="o">=</span> <span class="n">Now</span><span class="p">;</span> <span class="n">Next</span><span class="p">.</span><span class="n">ans</span><span class="o">++</span><span class="p">;</span>
            <span class="n">Next</span><span class="p">.</span><span class="n">x</span> <span class="o">+=</span> <span class="n">dx</span><span class="p">[</span><span class="n">i</span><span class="p">];</span> <span class="n">Next</span><span class="p">.</span><span class="n">y</span> <span class="o">+=</span> <span class="n">dy</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            <span class="k">if</span><span class="p">(</span><span class="n">Next</span><span class="p">.</span><span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">Next</span><span class="p">.</span><span class="n">x</span> <span class="o">&lt;=</span> <span class="n">N</span> <span class="o">&amp;&amp;</span>
                <span class="n">Next</span><span class="p">.</span><span class="n">y</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">Next</span><span class="p">.</span><span class="n">y</span> <span class="o">&lt;=</span> <span class="n">M</span> <span class="o">&amp;&amp;</span>
                <span class="o">!</span><span class="n">pVisited</span><span class="p">[</span><span class="n">Next</span><span class="p">.</span><span class="n">x</span><span class="p">][</span><span class="n">Next</span><span class="p">.</span><span class="n">y</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">pMap</span><span class="p">[</span><span class="n">Next</span><span class="p">.</span><span class="n">x</span><span class="p">][</span><span class="n">Next</span><span class="p">.</span><span class="n">y</span><span class="p">])</span>
            <span class="p">{</span>
                <span class="n">Q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">Next</span><span class="p">);</span>
                <span class="n">pVisited</span><span class="p">[</span><span class="n">Next</span><span class="p">.</span><span class="n">x</span><span class="p">][</span><span class="n">Next</span><span class="p">.</span><span class="n">y</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="n">nRet</span><span class="p">;</span>
<span class="p">}</span>
 
<span class="kt">bool</span> <span class="nf">Check</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">M</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">pMap</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">pVisited</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">])</span>
            <span class="p">{</span> <span class="k">return</span> <span class="nb">false</span><span class="p">;</span> <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="nb">true</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="uva-11624">UVa 11624</h2>
<p>注意可能有多个点起火，设定一个全局时间量，用来控制人以及火的运动顺序，先处理火，再处理人。然后就是 bfs 水题。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span><span class="lnt">86
</span><span class="lnt">87
</span><span class="lnt">88
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-cpp" data-lang="cpp"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;memory.h&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;queue&gt;</span><span class="cp">
</span><span class="cp"></span> 
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
 
<span class="k">const</span> <span class="kt">int</span> <span class="n">MAX</span> <span class="o">=</span> <span class="mi">1024</span><span class="p">;</span>
 
<span class="k">const</span> <span class="kt">int</span> <span class="n">dx</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="p">};</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">dy</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span> <span class="p">};</span>
 
<span class="k">struct</span> <span class="nc">Pos</span>
<span class="p">{</span>
    <span class="n">Pos</span><span class="p">(</span><span class="kt">int</span> <span class="n">_x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="kt">int</span> <span class="n">_y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="kt">int</span> <span class="n">_ans</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span> <span class="n">x</span> <span class="o">=</span> <span class="n">_x</span><span class="p">;</span> <span class="n">y</span> <span class="o">=</span> <span class="n">_y</span><span class="p">;</span> <span class="n">ans</span> <span class="o">=</span> <span class="n">_ans</span><span class="p">;</span> <span class="p">}</span>
 
    <span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">ans</span><span class="p">;</span>
<span class="p">};</span>
 
<span class="kt">int</span> <span class="n">T</span><span class="p">,</span> <span class="n">R</span><span class="p">,</span> <span class="n">C</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">pMap</span><span class="p">[</span><span class="n">MAX</span><span class="p">][</span><span class="n">MAX</span><span class="p">];</span>
<span class="kt">bool</span> <span class="n">pVJ</span><span class="p">[</span><span class="n">MAX</span><span class="p">][</span><span class="n">MAX</span><span class="p">],</span> <span class="n">pVF</span><span class="p">[</span><span class="n">MAX</span><span class="p">][</span><span class="n">MAX</span><span class="p">];</span>
<span class="n">queue</span><span class="o">&lt;</span><span class="n">Pos</span><span class="o">&gt;</span> <span class="n">J</span><span class="p">,</span> <span class="n">F</span><span class="p">;</span>
 
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">string</span> <span class="n">strTmp</span><span class="p">;</span>
    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">T</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">k</span> <span class="o">&lt;=</span> <span class="n">T</span><span class="p">;</span> <span class="n">k</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">R</span> <span class="o">&gt;&gt;</span> <span class="n">C</span><span class="p">;</span>
        <span class="kt">bool</span> <span class="n">bFlag</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
        <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">J</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span> <span class="p">{</span> <span class="n">J</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span> <span class="p">}</span>
        <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">F</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span> <span class="p">{</span> <span class="n">F</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span> <span class="p">}</span>
        <span class="n">memset</span><span class="p">(</span><span class="n">pVJ</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">pVJ</span><span class="p">));</span>
        <span class="n">memset</span><span class="p">(</span><span class="n">pVF</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">pVF</span><span class="p">));</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">R</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">strTmp</span><span class="p">;</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">C</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">strTmp</span><span class="p">[</span><span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;#&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="n">pMap</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="p">}</span>
                <span class="k">else</span> <span class="p">{</span> <span class="n">pMap</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="p">}</span>
                <span class="k">if</span><span class="p">(</span><span class="n">strTmp</span><span class="p">[</span><span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;J&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="n">J</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">Pos</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">));</span> <span class="n">pVJ</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span> <span class="p">}</span>
                <span class="k">if</span><span class="p">(</span><span class="n">strTmp</span><span class="p">[</span><span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;F&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="n">F</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">Pos</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">));</span> <span class="n">pVF</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span> <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="kt">int</span> <span class="n">nTime</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">J</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
        <span class="p">{</span>
            <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">F</span><span class="p">.</span><span class="n">empty</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="n">F</span><span class="p">.</span><span class="n">front</span><span class="p">().</span><span class="n">ans</span> <span class="o">&lt;=</span> <span class="n">nTime</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">Pos</span> <span class="n">FN</span> <span class="o">=</span> <span class="n">F</span><span class="p">.</span><span class="n">front</span><span class="p">();</span> <span class="n">F</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="n">Pos</span> <span class="n">Next</span> <span class="o">=</span> <span class="n">FN</span><span class="p">;</span> <span class="n">Next</span><span class="p">.</span><span class="n">ans</span><span class="o">++</span><span class="p">;</span>
                    <span class="n">Next</span><span class="p">.</span><span class="n">x</span> <span class="o">+=</span> <span class="n">dx</span><span class="p">[</span><span class="n">i</span><span class="p">];</span> <span class="n">Next</span><span class="p">.</span><span class="n">y</span> <span class="o">+=</span> <span class="n">dy</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">Next</span><span class="p">.</span><span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">Next</span><span class="p">.</span><span class="n">x</span> <span class="o">&lt;=</span> <span class="n">R</span> <span class="o">&amp;&amp;</span> <span class="n">Next</span><span class="p">.</span><span class="n">y</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">Next</span><span class="p">.</span><span class="n">y</span> <span class="o">&lt;=</span> <span class="n">C</span> <span class="o">&amp;&amp;</span>
                        <span class="o">!</span><span class="n">pMap</span><span class="p">[</span><span class="n">Next</span><span class="p">.</span><span class="n">x</span><span class="p">][</span><span class="n">Next</span><span class="p">.</span><span class="n">y</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">pVF</span><span class="p">[</span><span class="n">Next</span><span class="p">.</span><span class="n">x</span><span class="p">][</span><span class="n">Next</span><span class="p">.</span><span class="n">y</span><span class="p">])</span>
                    <span class="p">{</span>
                        <span class="n">F</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">Next</span><span class="p">);</span>
                        <span class="n">pVF</span><span class="p">[</span><span class="n">Next</span><span class="p">.</span><span class="n">x</span><span class="p">][</span><span class="n">Next</span><span class="p">.</span><span class="n">y</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">J</span><span class="p">.</span><span class="n">empty</span><span class="p">()</span> <span class="o">&amp;&amp;</span> <span class="n">J</span><span class="p">.</span><span class="n">front</span><span class="p">().</span><span class="n">ans</span>  <span class="o">&lt;=</span> <span class="n">nTime</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">Pos</span> <span class="n">JN</span> <span class="o">=</span> <span class="n">J</span><span class="p">.</span><span class="n">front</span><span class="p">();</span> <span class="n">J</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
                <span class="k">if</span><span class="p">(</span><span class="n">JN</span><span class="p">.</span><span class="n">x</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">||</span> <span class="n">JN</span><span class="p">.</span><span class="n">x</span> <span class="o">==</span> <span class="n">R</span> <span class="o">||</span> <span class="n">JN</span><span class="p">.</span><span class="n">y</span> <span class="o">==</span> <span class="mi">1</span> <span class="o">||</span> <span class="n">JN</span><span class="p">.</span><span class="n">y</span> <span class="o">==</span> <span class="n">C</span><span class="p">)</span> <span class="p">{</span> <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">JN</span><span class="p">.</span><span class="n">ans</span> <span class="o">+</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> <span class="n">bFlag</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span> <span class="k">break</span><span class="p">;</span> <span class="p">}</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="n">Pos</span> <span class="n">Next</span> <span class="o">=</span> <span class="n">JN</span><span class="p">;</span> <span class="n">Next</span><span class="p">.</span><span class="n">ans</span><span class="o">++</span><span class="p">;</span>
                    <span class="n">Next</span><span class="p">.</span><span class="n">x</span> <span class="o">+=</span> <span class="n">dx</span><span class="p">[</span><span class="n">i</span><span class="p">];</span> <span class="n">Next</span><span class="p">.</span><span class="n">y</span> <span class="o">+=</span> <span class="n">dy</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">Next</span><span class="p">.</span><span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">Next</span><span class="p">.</span><span class="n">x</span> <span class="o">&lt;=</span> <span class="n">R</span> <span class="o">&amp;&amp;</span> <span class="n">Next</span><span class="p">.</span><span class="n">y</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">Next</span><span class="p">.</span><span class="n">y</span> <span class="o">&lt;=</span> <span class="n">C</span> <span class="o">&amp;&amp;</span>
                        <span class="o">!</span><span class="n">pMap</span><span class="p">[</span><span class="n">Next</span><span class="p">.</span><span class="n">x</span><span class="p">][</span><span class="n">Next</span><span class="p">.</span><span class="n">y</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">pVF</span><span class="p">[</span><span class="n">Next</span><span class="p">.</span><span class="n">x</span><span class="p">][</span><span class="n">Next</span><span class="p">.</span><span class="n">y</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">pVJ</span><span class="p">[</span><span class="n">Next</span><span class="p">.</span><span class="n">x</span><span class="p">][</span><span class="n">Next</span><span class="p">.</span><span class="n">y</span><span class="p">])</span>
                    <span class="p">{</span>
                        <span class="n">J</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">Next</span><span class="p">);</span>
                        <span class="n">pVJ</span><span class="p">[</span><span class="n">Next</span><span class="p">.</span><span class="n">x</span><span class="p">][</span><span class="n">Next</span><span class="p">.</span><span class="n">y</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="n">bFlag</span><span class="p">)</span> <span class="p">{</span> <span class="k">break</span><span class="p">;</span> <span class="p">}</span>
            <span class="n">nTime</span><span class="o">++</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">bFlag</span><span class="p">)</span> <span class="p">{</span> <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;IMPOSSIBLE&#34;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="poj-3984">POJ 3984</h2>
<p>bfs 水题。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-cpp" data-lang="cpp"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;memory.h&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;queue&gt;</span><span class="cp">
</span><span class="cp"></span> 
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
 
<span class="k">const</span> <span class="kt">int</span> <span class="n">MAX</span> <span class="o">=</span> <span class="mi">8</span><span class="p">;</span>
 
<span class="k">const</span> <span class="kt">int</span> <span class="n">dx</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="p">};</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">dy</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span> <span class="p">};</span>
 
<span class="k">struct</span> <span class="nc">Pos</span>
<span class="p">{</span>
    <span class="n">Pos</span><span class="p">(</span><span class="kt">int</span> <span class="n">_x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="kt">int</span> <span class="n">_y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span> <span class="n">x</span> <span class="o">=</span> <span class="n">_x</span><span class="p">;</span> <span class="n">y</span> <span class="o">=</span> <span class="n">_y</span><span class="p">;</span> <span class="p">}</span>
    <span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">;</span>
<span class="p">};</span>
 
<span class="k">struct</span> <span class="nc">State</span>
<span class="p">{</span>
    <span class="n">State</span><span class="p">(</span><span class="kt">int</span> <span class="n">_x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="kt">int</span> <span class="n">_y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Now</span> <span class="o">=</span> <span class="n">Pos</span><span class="p">(</span><span class="n">_x</span><span class="p">,</span> <span class="n">_y</span><span class="p">);</span>
        <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">Ans</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span> <span class="p">{</span> <span class="n">Ans</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span> <span class="p">}</span>
    <span class="p">}</span>
     
    <span class="n">Pos</span> <span class="n">Now</span><span class="p">;</span>
    <span class="n">queue</span><span class="o">&lt;</span><span class="n">Pos</span><span class="o">&gt;</span> <span class="n">Ans</span><span class="p">;</span>
<span class="p">};</span>
 
<span class="kt">int</span> <span class="n">pMap</span><span class="p">[</span><span class="n">MAX</span><span class="p">][</span><span class="n">MAX</span><span class="p">];</span>
<span class="kt">bool</span> <span class="n">pVisited</span><span class="p">[</span><span class="n">MAX</span><span class="p">][</span><span class="n">MAX</span><span class="p">];</span>
<span class="n">queue</span><span class="o">&lt;</span><span class="n">State</span><span class="o">&gt;</span> <span class="n">Q</span><span class="p">;</span>
 
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span> <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">pMap</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">];</span> <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">Q</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span> <span class="p">{</span> <span class="n">Q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span> <span class="p">}</span>
    <span class="n">memset</span><span class="p">(</span><span class="n">pVisited</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">pVisited</span><span class="p">));</span>
    <span class="n">Q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">State</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">));</span> <span class="n">pVisited</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">Q</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
    <span class="p">{</span>
        <span class="n">State</span> <span class="n">Now</span> <span class="o">=</span> <span class="n">Q</span><span class="p">.</span><span class="n">front</span><span class="p">();</span> <span class="n">Q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
        <span class="k">if</span><span class="p">(</span><span class="n">Now</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="n">x</span> <span class="o">==</span> <span class="mi">5</span> <span class="o">&amp;&amp;</span> <span class="n">Now</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="n">y</span> <span class="o">==</span> <span class="mi">5</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">Now</span><span class="p">.</span><span class="n">Ans</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
            <span class="p">{</span>
                <span class="n">Pos</span> <span class="n">Cur</span> <span class="o">=</span> <span class="n">Now</span><span class="p">.</span><span class="n">Ans</span><span class="p">.</span><span class="n">front</span><span class="p">();</span>
                <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;(&#34;</span> <span class="o">&lt;&lt;</span> <span class="n">Cur</span><span class="p">.</span><span class="n">x</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;, &#34;</span> <span class="o">&lt;&lt;</span> <span class="n">Cur</span><span class="p">.</span><span class="n">y</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;)&#34;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
                <span class="n">Now</span><span class="p">.</span><span class="n">Ans</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
            <span class="p">}</span>
            <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;(4, 4)&#34;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">int</span> <span class="n">nx</span> <span class="o">=</span> <span class="n">Now</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="n">x</span> <span class="o">+</span> <span class="n">dx</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            <span class="kt">int</span> <span class="n">ny</span> <span class="o">=</span> <span class="n">Now</span><span class="p">.</span><span class="n">Now</span><span class="p">.</span><span class="n">y</span> <span class="o">+</span> <span class="n">dy</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            <span class="k">if</span><span class="p">(</span><span class="n">nx</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">nx</span> <span class="o">&lt;=</span> <span class="mi">5</span> <span class="o">&amp;&amp;</span> <span class="n">ny</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">ny</span> <span class="o">&lt;=</span> <span class="mi">5</span> <span class="o">&amp;&amp;</span>
                <span class="o">!</span><span class="n">pVisited</span><span class="p">[</span><span class="n">nx</span><span class="p">][</span><span class="n">ny</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">pMap</span><span class="p">[</span><span class="n">nx</span><span class="p">][</span><span class="n">ny</span><span class="p">])</span>
            <span class="p">{</span>
                <span class="n">State</span> <span class="n">Next</span> <span class="o">=</span> <span class="n">Now</span><span class="p">;</span>
                <span class="n">Next</span><span class="p">.</span><span class="n">Now</span> <span class="o">=</span> <span class="n">Pos</span><span class="p">(</span><span class="n">nx</span><span class="p">,</span> <span class="n">ny</span><span class="p">);</span>
                <span class="n">Next</span><span class="p">.</span><span class="n">Ans</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">Now</span><span class="p">.</span><span class="n">Now</span><span class="p">);</span>
                <span class="n">Q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">Next</span><span class="p">);</span>
                <span class="n">pVisited</span><span class="p">[</span><span class="n">nx</span><span class="p">][</span><span class="n">ny</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="hdu-1241">HDU 1241</h2>
<p>求连通块个数，直接 dfs 即可。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-cpp" data-lang="cpp"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;memory.h&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;queue&gt;</span><span class="cp">
</span><span class="cp"></span> 
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
 
<span class="k">const</span> <span class="kt">int</span> <span class="n">MAX</span> <span class="o">=</span> <span class="mi">128</span><span class="p">;</span>
 
<span class="k">const</span> <span class="kt">int</span> <span class="n">dx</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span> <span class="p">};</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">dy</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span> <span class="p">};</span>
 
<span class="kt">int</span> <span class="n">N</span><span class="p">,</span> <span class="n">M</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">pMap</span><span class="p">[</span><span class="n">MAX</span><span class="p">][</span><span class="n">MAX</span><span class="p">];</span>
<span class="kt">bool</span> <span class="n">pVisited</span><span class="p">[</span><span class="n">MAX</span><span class="p">][</span><span class="n">MAX</span><span class="p">];</span>
 
<span class="kt">void</span> <span class="nf">dfs</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">);</span>
 
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">string</span> <span class="n">strTmp</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span><span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">N</span> <span class="o">&gt;&gt;</span> <span class="n">M</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">N</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">M</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="k">break</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">strTmp</span><span class="p">;</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">M</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">strTmp</span><span class="p">[</span><span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;*&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="n">pMap</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="p">}</span>
                <span class="k">else</span> <span class="p">{</span> <span class="n">pMap</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="kt">int</span> <span class="n">ans</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="n">memset</span><span class="p">(</span><span class="n">pVisited</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">pVisited</span><span class="p">));</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">M</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">pMap</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">pVisited</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">])</span>
                <span class="p">{</span>
                    <span class="n">dfs</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">);</span>
                    <span class="n">ans</span><span class="o">++</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">ans</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
 
<span class="kt">void</span> <span class="nf">dfs</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">pVisited</span><span class="p">[</span><span class="n">x</span><span class="p">][</span><span class="n">y</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">8</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">nx</span> <span class="o">=</span> <span class="n">x</span> <span class="o">+</span> <span class="n">dx</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="kt">int</span> <span class="n">ny</span> <span class="o">=</span> <span class="n">y</span> <span class="o">+</span> <span class="n">dy</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
        <span class="k">if</span><span class="p">(</span><span class="n">nx</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">nx</span> <span class="o">&lt;=</span> <span class="n">N</span> <span class="o">&amp;&amp;</span> <span class="n">ny</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">ny</span> <span class="o">&lt;=</span> <span class="n">M</span> <span class="o">&amp;&amp;</span>
            <span class="o">!</span><span class="n">pMap</span><span class="p">[</span><span class="n">nx</span><span class="p">][</span><span class="n">ny</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">pVisited</span><span class="p">[</span><span class="n">nx</span><span class="p">][</span><span class="n">ny</span><span class="p">])</span>
        <span class="p">{</span> <span class="n">dfs</span><span class="p">(</span><span class="n">nx</span><span class="p">,</span> <span class="n">ny</span><span class="p">);</span> <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="hdu-1495">HDU 1495</h2>
<p>这道题目和 POJ 3414 非常的类似，但相较来说更简单，也是一道 bfs 水题。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">  1
</span><span class="lnt">  2
</span><span class="lnt">  3
</span><span class="lnt">  4
</span><span class="lnt">  5
</span><span class="lnt">  6
</span><span class="lnt">  7
</span><span class="lnt">  8
</span><span class="lnt">  9
</span><span class="lnt"> 10
</span><span class="lnt"> 11
</span><span class="lnt"> 12
</span><span class="lnt"> 13
</span><span class="lnt"> 14
</span><span class="lnt"> 15
</span><span class="lnt"> 16
</span><span class="lnt"> 17
</span><span class="lnt"> 18
</span><span class="lnt"> 19
</span><span class="lnt"> 20
</span><span class="lnt"> 21
</span><span class="lnt"> 22
</span><span class="lnt"> 23
</span><span class="lnt"> 24
</span><span class="lnt"> 25
</span><span class="lnt"> 26
</span><span class="lnt"> 27
</span><span class="lnt"> 28
</span><span class="lnt"> 29
</span><span class="lnt"> 30
</span><span class="lnt"> 31
</span><span class="lnt"> 32
</span><span class="lnt"> 33
</span><span class="lnt"> 34
</span><span class="lnt"> 35
</span><span class="lnt"> 36
</span><span class="lnt"> 37
</span><span class="lnt"> 38
</span><span class="lnt"> 39
</span><span class="lnt"> 40
</span><span class="lnt"> 41
</span><span class="lnt"> 42
</span><span class="lnt"> 43
</span><span class="lnt"> 44
</span><span class="lnt"> 45
</span><span class="lnt"> 46
</span><span class="lnt"> 47
</span><span class="lnt"> 48
</span><span class="lnt"> 49
</span><span class="lnt"> 50
</span><span class="lnt"> 51
</span><span class="lnt"> 52
</span><span class="lnt"> 53
</span><span class="lnt"> 54
</span><span class="lnt"> 55
</span><span class="lnt"> 56
</span><span class="lnt"> 57
</span><span class="lnt"> 58
</span><span class="lnt"> 59
</span><span class="lnt"> 60
</span><span class="lnt"> 61
</span><span class="lnt"> 62
</span><span class="lnt"> 63
</span><span class="lnt"> 64
</span><span class="lnt"> 65
</span><span class="lnt"> 66
</span><span class="lnt"> 67
</span><span class="lnt"> 68
</span><span class="lnt"> 69
</span><span class="lnt"> 70
</span><span class="lnt"> 71
</span><span class="lnt"> 72
</span><span class="lnt"> 73
</span><span class="lnt"> 74
</span><span class="lnt"> 75
</span><span class="lnt"> 76
</span><span class="lnt"> 77
</span><span class="lnt"> 78
</span><span class="lnt"> 79
</span><span class="lnt"> 80
</span><span class="lnt"> 81
</span><span class="lnt"> 82
</span><span class="lnt"> 83
</span><span class="lnt"> 84
</span><span class="lnt"> 85
</span><span class="lnt"> 86
</span><span class="lnt"> 87
</span><span class="lnt"> 88
</span><span class="lnt"> 89
</span><span class="lnt"> 90
</span><span class="lnt"> 91
</span><span class="lnt"> 92
</span><span class="lnt"> 93
</span><span class="lnt"> 94
</span><span class="lnt"> 95
</span><span class="lnt"> 96
</span><span class="lnt"> 97
</span><span class="lnt"> 98
</span><span class="lnt"> 99
</span><span class="lnt">100
</span><span class="lnt">101
</span><span class="lnt">102
</span><span class="lnt">103
</span><span class="lnt">104
</span><span class="lnt">105
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-cpp" data-lang="cpp"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;memory.h&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;queue&gt;</span><span class="cp">
</span><span class="cp"></span> 
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
 
<span class="k">const</span> <span class="kt">int</span> <span class="n">MAX</span> <span class="o">=</span> <span class="mi">128</span><span class="p">;</span>
 
<span class="k">struct</span> <span class="nc">Cola</span>
<span class="p">{</span>
    <span class="n">Cola</span><span class="p">(</span><span class="kt">int</span> <span class="n">_S</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="kt">int</span> <span class="n">_N</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="kt">int</span> <span class="n">_M</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="kt">int</span> <span class="n">_ans</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span> <span class="n">S</span> <span class="o">=</span> <span class="n">_S</span><span class="p">;</span> <span class="n">N</span> <span class="o">=</span> <span class="n">_N</span><span class="p">;</span> <span class="n">M</span> <span class="o">=</span> <span class="n">_M</span><span class="p">;</span> <span class="n">ans</span> <span class="o">=</span> <span class="n">_ans</span><span class="p">;</span> <span class="p">}</span>
 
    <span class="kt">int</span> <span class="n">S</span><span class="p">,</span> <span class="n">N</span><span class="p">,</span> <span class="n">M</span><span class="p">,</span> <span class="n">ans</span><span class="p">;</span>
<span class="p">};</span>
 
<span class="kt">int</span> <span class="n">S</span><span class="p">,</span> <span class="n">N</span><span class="p">,</span> <span class="n">M</span><span class="p">;</span>
<span class="kt">bool</span> <span class="n">pVisited</span><span class="p">[</span><span class="n">MAX</span><span class="p">][</span><span class="n">MAX</span><span class="p">][</span><span class="n">MAX</span><span class="p">];</span>
<span class="n">queue</span><span class="o">&lt;</span><span class="n">Cola</span><span class="o">&gt;</span> <span class="n">Q</span><span class="p">;</span>
 
<span class="n">Cola</span> <span class="nf">Opt</span><span class="p">(</span><span class="n">Cola</span> <span class="n">Now</span><span class="p">,</span> <span class="kt">int</span> <span class="n">k</span><span class="p">);</span>
<span class="kt">bool</span> <span class="nf">Check</span><span class="p">(</span><span class="n">Cola</span> <span class="n">Now</span><span class="p">);</span>
 
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="k">while</span><span class="p">(</span><span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">S</span> <span class="o">&gt;&gt;</span> <span class="n">N</span> <span class="o">&gt;&gt;</span> <span class="n">M</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">S</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">N</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">M</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="k">break</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">if</span><span class="p">(</span><span class="n">S</span> <span class="o">&amp;</span> <span class="mi">1</span><span class="p">)</span> <span class="p">{</span> <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;NO&#34;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="kt">bool</span> <span class="n">bFlag</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
            <span class="n">memset</span><span class="p">(</span><span class="n">pVisited</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">pVisited</span><span class="p">));</span>
            <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">Q</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span> <span class="p">{</span> <span class="n">Q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span> <span class="p">}</span>  <span class="c1">// 队列忘记清空
</span><span class="c1"></span>            <span class="n">Q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">Cola</span><span class="p">(</span><span class="n">S</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">));</span> <span class="n">pVisited</span><span class="p">[</span><span class="n">S</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
            <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">Q</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
            <span class="p">{</span>
                <span class="n">Cola</span> <span class="n">Now</span> <span class="o">=</span> <span class="n">Q</span><span class="p">.</span><span class="n">front</span><span class="p">();</span> <span class="n">Q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
                <span class="k">if</span><span class="p">(</span><span class="n">Check</span><span class="p">(</span><span class="n">Now</span><span class="p">))</span>
                <span class="p">{</span>
                    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">Now</span><span class="p">.</span><span class="n">ans</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
                    <span class="n">bFlag</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                    <span class="k">break</span><span class="p">;</span>
                <span class="p">}</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">6</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="n">Cola</span> <span class="n">Next</span> <span class="o">=</span> <span class="n">Opt</span><span class="p">(</span><span class="n">Now</span><span class="p">,</span> <span class="n">i</span><span class="p">);</span>
                    <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">pVisited</span><span class="p">[</span><span class="n">Next</span><span class="p">.</span><span class="n">S</span><span class="p">][</span><span class="n">Next</span><span class="p">.</span><span class="n">N</span><span class="p">][</span><span class="n">Next</span><span class="p">.</span><span class="n">M</span><span class="p">])</span>
                    <span class="p">{</span>
                        <span class="n">Q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">Cola</span><span class="p">(</span><span class="n">Next</span><span class="p">.</span><span class="n">S</span><span class="p">,</span> <span class="n">Next</span><span class="p">.</span><span class="n">N</span><span class="p">,</span> <span class="n">Next</span><span class="p">.</span><span class="n">M</span><span class="p">,</span> <span class="n">Next</span><span class="p">.</span><span class="n">ans</span><span class="p">));</span>
                        <span class="n">pVisited</span><span class="p">[</span><span class="n">Next</span><span class="p">.</span><span class="n">S</span><span class="p">][</span><span class="n">Next</span><span class="p">.</span><span class="n">N</span><span class="p">][</span><span class="n">Next</span><span class="p">.</span><span class="n">M</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">bFlag</span><span class="p">)</span> <span class="p">{</span> <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&#34;NO&#34;</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
 
<span class="n">Cola</span> <span class="nf">Opt</span><span class="p">(</span><span class="n">Cola</span> <span class="n">Now</span><span class="p">,</span> <span class="kt">int</span> <span class="n">k</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span><span class="p">(</span><span class="n">k</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Now</span><span class="p">.</span><span class="n">N</span> <span class="o">+=</span> <span class="n">Now</span><span class="p">.</span><span class="n">S</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">Now</span><span class="p">.</span><span class="n">N</span> <span class="o">&gt;</span> <span class="n">N</span><span class="p">)</span> <span class="p">{</span> <span class="n">Now</span><span class="p">.</span><span class="n">S</span> <span class="o">=</span> <span class="n">Now</span><span class="p">.</span><span class="n">N</span> <span class="o">-</span> <span class="n">N</span><span class="p">;</span> <span class="n">Now</span><span class="p">.</span><span class="n">N</span> <span class="o">=</span> <span class="n">N</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">else</span> <span class="p">{</span> <span class="n">Now</span><span class="p">.</span><span class="n">S</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">if</span><span class="p">(</span><span class="n">k</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Now</span><span class="p">.</span><span class="n">S</span> <span class="o">+=</span> <span class="n">Now</span><span class="p">.</span><span class="n">N</span><span class="p">;</span>
        <span class="n">Now</span><span class="p">.</span><span class="n">N</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">if</span><span class="p">(</span><span class="n">k</span> <span class="o">==</span> <span class="mi">2</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Now</span><span class="p">.</span><span class="n">M</span> <span class="o">+=</span> <span class="n">Now</span><span class="p">.</span><span class="n">S</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">Now</span><span class="p">.</span><span class="n">M</span> <span class="o">&gt;</span> <span class="n">M</span><span class="p">)</span> <span class="p">{</span> <span class="n">Now</span><span class="p">.</span><span class="n">S</span> <span class="o">=</span> <span class="n">Now</span><span class="p">.</span><span class="n">M</span> <span class="o">-</span> <span class="n">M</span><span class="p">;</span> <span class="n">Now</span><span class="p">.</span><span class="n">M</span> <span class="o">=</span> <span class="n">M</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">else</span> <span class="p">{</span> <span class="n">Now</span><span class="p">.</span><span class="n">S</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">if</span><span class="p">(</span><span class="n">k</span> <span class="o">==</span> <span class="mi">3</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Now</span><span class="p">.</span><span class="n">S</span> <span class="o">+=</span> <span class="n">Now</span><span class="p">.</span><span class="n">M</span><span class="p">;</span>
        <span class="n">Now</span><span class="p">.</span><span class="n">M</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">if</span><span class="p">(</span><span class="n">k</span> <span class="o">==</span> <span class="mi">4</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Now</span><span class="p">.</span><span class="n">N</span> <span class="o">+=</span> <span class="n">Now</span><span class="p">.</span><span class="n">M</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">Now</span><span class="p">.</span><span class="n">N</span> <span class="o">&gt;</span> <span class="n">N</span><span class="p">)</span> <span class="p">{</span> <span class="n">Now</span><span class="p">.</span><span class="n">M</span> <span class="o">=</span> <span class="n">Now</span><span class="p">.</span><span class="n">N</span> <span class="o">-</span> <span class="n">N</span><span class="p">;</span> <span class="n">Now</span><span class="p">.</span><span class="n">N</span> <span class="o">=</span> <span class="n">N</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">else</span> <span class="p">{</span> <span class="n">Now</span><span class="p">.</span><span class="n">M</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">if</span><span class="p">(</span><span class="n">k</span> <span class="o">==</span> <span class="mi">5</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Now</span><span class="p">.</span><span class="n">M</span> <span class="o">+=</span> <span class="n">Now</span><span class="p">.</span><span class="n">N</span><span class="p">;</span>
        <span class="k">if</span><span class="p">(</span><span class="n">Now</span><span class="p">.</span><span class="n">M</span> <span class="o">&gt;</span> <span class="n">M</span><span class="p">)</span> <span class="p">{</span> <span class="n">Now</span><span class="p">.</span><span class="n">N</span> <span class="o">=</span> <span class="n">Now</span><span class="p">.</span><span class="n">M</span> <span class="o">-</span> <span class="n">M</span><span class="p">;</span> <span class="n">Now</span><span class="p">.</span><span class="n">M</span> <span class="o">=</span> <span class="n">M</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">else</span> <span class="p">{</span> <span class="n">Now</span><span class="p">.</span><span class="n">N</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
    <span class="n">Now</span><span class="p">.</span><span class="n">ans</span><span class="o">++</span><span class="p">;</span>
    <span class="k">return</span> <span class="n">Now</span><span class="p">;</span>
<span class="p">}</span>
 
<span class="kt">bool</span> <span class="nf">Check</span><span class="p">(</span><span class="n">Cola</span> <span class="n">Now</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">Now</span><span class="p">.</span><span class="n">S</span><span class="p">,</span> <span class="n">y</span> <span class="o">=</span> <span class="n">Now</span><span class="p">.</span><span class="n">N</span><span class="p">,</span> <span class="n">z</span> <span class="o">=</span> <span class="n">Now</span><span class="p">.</span><span class="n">M</span><span class="p">,</span> <span class="n">p</span> <span class="o">=</span> <span class="n">S</span> <span class="o">/</span> <span class="mi">2</span><span class="p">;</span>
    <span class="k">return</span> <span class="p">(</span><span class="n">x</span> <span class="o">==</span> <span class="n">p</span> <span class="o">&amp;&amp;</span> <span class="n">y</span> <span class="o">==</span> <span class="n">p</span><span class="p">)</span> <span class="o">||</span> <span class="p">(</span><span class="n">x</span> <span class="o">==</span> <span class="n">p</span> <span class="o">&amp;&amp;</span> <span class="n">z</span> <span class="o">==</span> <span class="n">p</span><span class="p">)</span> <span class="o">||</span> <span class="p">(</span><span class="n">y</span> <span class="o">==</span> <span class="n">p</span> <span class="o">&amp;&amp;</span> <span class="n">z</span> <span class="o">==</span> <span class="n">p</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h2 id="hdu-2612">HDU 2612</h2>
<p>首先计算 $Y$ 和 $M$ 走到地图上每个点的最小时间，然后枚举每个点，计算 $Y$ 和 $M$ 走到该点时间和的最小值，最后结果乘以 11 分钟即可。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span><span class="lnt">79
</span><span class="lnt">80
</span><span class="lnt">81
</span><span class="lnt">82
</span><span class="lnt">83
</span><span class="lnt">84
</span><span class="lnt">85
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-cpp" data-lang="cpp"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;memory.h&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;string&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;queue&gt;</span><span class="cp">
</span><span class="cp"></span> 
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
 
<span class="k">const</span> <span class="kt">int</span> <span class="n">MAX</span> <span class="o">=</span> <span class="mi">256</span><span class="p">;</span>
 
<span class="k">const</span> <span class="kt">int</span> <span class="n">dx</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="p">};</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">dy</span><span class="p">[]</span> <span class="o">=</span> <span class="p">{</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span> <span class="p">};</span>
 
<span class="k">struct</span> <span class="nc">Pos</span>
<span class="p">{</span>
    <span class="n">Pos</span><span class="p">(</span><span class="kt">int</span> <span class="n">_x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="kt">int</span> <span class="n">_y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="kt">int</span> <span class="n">_s</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span> <span class="n">x</span> <span class="o">=</span> <span class="n">_x</span><span class="p">;</span> <span class="n">y</span> <span class="o">=</span> <span class="n">_y</span><span class="p">;</span> <span class="n">s</span> <span class="o">=</span> <span class="n">_s</span><span class="p">;</span> <span class="p">}</span>
     
    <span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">s</span><span class="p">;</span>
<span class="p">};</span>
 
<span class="n">Pos</span> <span class="n">SY</span><span class="p">,</span> <span class="n">SM</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">N</span><span class="p">,</span> <span class="n">M</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">pMap</span><span class="p">[</span><span class="n">MAX</span><span class="p">][</span><span class="n">MAX</span><span class="p">];</span>
<span class="kt">int</span> <span class="n">pAns</span><span class="p">[</span><span class="mi">2</span><span class="p">][</span><span class="n">MAX</span><span class="p">][</span><span class="n">MAX</span><span class="p">];</span>
<span class="kt">bool</span> <span class="n">pVisited</span><span class="p">[</span><span class="n">MAX</span><span class="p">][</span><span class="n">MAX</span><span class="p">];</span>
<span class="n">queue</span><span class="o">&lt;</span><span class="n">Pos</span><span class="o">&gt;</span> <span class="n">Q</span><span class="p">;</span>
 
<span class="kt">void</span> <span class="nf">Solve</span><span class="p">(</span><span class="n">Pos</span> <span class="n">S</span><span class="p">,</span> <span class="kt">int</span> <span class="n">k</span><span class="p">);</span>
 
<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="n">string</span> <span class="n">strTmp</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span><span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">N</span> <span class="o">&gt;&gt;</span> <span class="n">M</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">memset</span><span class="p">(</span><span class="n">pAns</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">pAns</span><span class="p">));</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">strTmp</span><span class="p">;</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">M</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">strTmp</span><span class="p">[</span><span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;#&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="n">pMap</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="p">}</span>
                <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">strTmp</span><span class="p">[</span><span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;@&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="n">pMap</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span> <span class="p">}</span>
                <span class="k">else</span> <span class="p">{</span> <span class="n">pMap</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="p">}</span>
                <span class="k">if</span><span class="p">(</span><span class="n">strTmp</span><span class="p">[</span><span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;Y&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="n">SY</span> <span class="o">=</span> <span class="n">Pos</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span> <span class="p">}</span>
                <span class="k">if</span><span class="p">(</span><span class="n">strTmp</span><span class="p">[</span><span class="n">j</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">==</span> <span class="sc">&#39;M&#39;</span><span class="p">)</span> <span class="p">{</span> <span class="n">SM</span> <span class="o">=</span> <span class="n">Pos</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span> <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="n">Solve</span><span class="p">(</span><span class="n">SY</span><span class="p">,</span> <span class="mi">0</span><span class="p">);</span> <span class="n">Solve</span><span class="p">(</span><span class="n">SM</span><span class="p">,</span> <span class="mi">1</span><span class="p">);</span>
        <span class="kt">int</span> <span class="n">ans</span> <span class="o">=</span> <span class="mi">2147483647</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">M</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">pMap</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="mi">2</span> <span class="o">&amp;&amp;</span> <span class="n">pAns</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">pAns</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
                <span class="p">{</span> <span class="n">ans</span> <span class="o">=</span> <span class="n">min</span><span class="p">(</span><span class="n">ans</span><span class="p">,</span> <span class="n">pAns</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">+</span> <span class="n">pAns</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]);</span> <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">ans</span> <span class="o">*</span> <span class="mi">11</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
 
<span class="kt">void</span> <span class="nf">Solve</span><span class="p">(</span><span class="n">Pos</span> <span class="n">S</span><span class="p">,</span> <span class="kt">int</span> <span class="n">k</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">Q</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span> <span class="p">{</span> <span class="n">Q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span> <span class="p">}</span>
    <span class="n">memset</span><span class="p">(</span><span class="n">pVisited</span><span class="p">,</span> <span class="nb">false</span><span class="p">,</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">pVisited</span><span class="p">));</span>
    <span class="n">Q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">S</span><span class="p">);</span> <span class="n">pVisited</span><span class="p">[</span><span class="n">S</span><span class="p">.</span><span class="n">x</span><span class="p">][</span><span class="n">S</span><span class="p">.</span><span class="n">y</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
    <span class="k">while</span><span class="p">(</span><span class="o">!</span><span class="n">Q</span><span class="p">.</span><span class="n">empty</span><span class="p">())</span>
    <span class="p">{</span>
        <span class="n">Pos</span> <span class="n">Now</span> <span class="o">=</span> <span class="n">Q</span><span class="p">.</span><span class="n">front</span><span class="p">();</span> <span class="n">Q</span><span class="p">.</span><span class="n">pop</span><span class="p">();</span>
        <span class="k">if</span><span class="p">(</span><span class="n">pAns</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">Now</span><span class="p">.</span><span class="n">x</span><span class="p">][</span><span class="n">Now</span><span class="p">.</span><span class="n">y</span><span class="p">]</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span>
        <span class="p">{</span> <span class="n">pAns</span><span class="p">[</span><span class="n">k</span><span class="p">][</span><span class="n">Now</span><span class="p">.</span><span class="n">x</span><span class="p">][</span><span class="n">Now</span><span class="p">.</span><span class="n">y</span><span class="p">]</span> <span class="o">=</span> <span class="n">Now</span><span class="p">.</span><span class="n">s</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">4</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">int</span> <span class="n">nx</span> <span class="o">=</span> <span class="n">Now</span><span class="p">.</span><span class="n">x</span> <span class="o">+</span> <span class="n">dx</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            <span class="kt">int</span> <span class="n">ny</span> <span class="o">=</span> <span class="n">Now</span><span class="p">.</span><span class="n">y</span> <span class="o">+</span> <span class="n">dy</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
            <span class="k">if</span><span class="p">(</span><span class="n">nx</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">nx</span> <span class="o">&lt;=</span> <span class="n">N</span> <span class="o">&amp;&amp;</span> <span class="n">ny</span> <span class="o">&gt;=</span> <span class="mi">1</span> <span class="o">&amp;&amp;</span> <span class="n">ny</span> <span class="o">&lt;=</span> <span class="n">M</span> <span class="o">&amp;&amp;</span>
                <span class="o">!</span><span class="n">pVisited</span><span class="p">[</span><span class="n">nx</span><span class="p">][</span><span class="n">ny</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="n">pMap</span><span class="p">[</span><span class="n">nx</span><span class="p">][</span><span class="n">ny</span><span class="p">]</span> <span class="o">!=</span> <span class="mi">1</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">Q</span><span class="p">.</span><span class="n">push</span><span class="p">(</span><span class="n">Pos</span><span class="p">(</span><span class="n">nx</span><span class="p">,</span> <span class="n">ny</span><span class="p">,</span> <span class="n">Now</span><span class="p">.</span><span class="n">s</span> <span class="o">+</span> <span class="mi">1</span><span class="p">));</span>
                <span class="n">pVisited</span><span class="p">[</span><span class="n">nx</span><span class="p">][</span><span class="n">ny</span><span class="p">]</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>刷完这个专题，感觉对 bfs 的理解更加深入透彻了。</p>
]]></description></item><item><title>2048 游戏制作过程（Java 描述）：第五节、界面美化</title><link>https://example.com/2015/05/2048-%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bjava-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E4%BA%94%E8%8A%82%E7%95%8C%E9%9D%A2%E7%BE%8E%E5%8C%96/</link><pubDate>Sun, 17 May 2015 11:07:00 +0800</pubDate><author>作者</author><guid>https://example.com/2015/05/2048-%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bjava-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E4%BA%94%E8%8A%82%E7%95%8C%E9%9D%A2%E7%BE%8E%E5%8C%96/</guid><description><![CDATA[<p>这一节，我们将介绍游戏界面的美化以及游戏数据的存储。</p>
<p>首先创建一个 color.xml 资源文件，用来保存每个数字对应的背景色和前景色。右击 res 文件夹，选择 New，单击 Android resource file，输入 color，单击 Next 即可。</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%94%e8%8a%82%e3%80%81%e7%95%8c%e9%9d%a2%e7%be%8e%e5%8c%96/game2048_5_01.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第五节、界面美化/game2048_5_01.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第五节、界面美化/game2048_5_01.png" data-sub-html="<h2>新建资源</h2>">
        
    </a><figcaption class="image-caption">新建资源</figcaption>
    </figure>
<p>修改代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-xml" data-lang="xml"><span class="cp">&lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;?&gt;</span>
<span class="nt">&lt;resources&gt;</span>
    <span class="nt">&lt;color</span> <span class="na">name=</span><span class="s">&#34;bg2&#34;</span><span class="nt">&gt;</span>#eee4da<span class="nt">&lt;/color&gt;</span>
    <span class="nt">&lt;color</span> <span class="na">name=</span><span class="s">&#34;text2&#34;</span><span class="nt">&gt;</span>#776e65<span class="nt">&lt;/color&gt;</span>
    <span class="nt">&lt;color</span> <span class="na">name=</span><span class="s">&#34;bg4&#34;</span><span class="nt">&gt;</span>#ede0c8<span class="nt">&lt;/color&gt;</span>
    <span class="nt">&lt;color</span> <span class="na">name=</span><span class="s">&#34;text4&#34;</span><span class="nt">&gt;</span>#776e65<span class="nt">&lt;/color&gt;</span>
    <span class="nt">&lt;color</span> <span class="na">name=</span><span class="s">&#34;bg8&#34;</span><span class="nt">&gt;</span>#f2b179<span class="nt">&lt;/color&gt;</span>
    <span class="nt">&lt;color</span> <span class="na">name=</span><span class="s">&#34;text8&#34;</span><span class="nt">&gt;</span>#f9f6f2<span class="nt">&lt;/color&gt;</span>
    <span class="nt">&lt;color</span> <span class="na">name=</span><span class="s">&#34;bg16&#34;</span><span class="nt">&gt;</span>#f59563<span class="nt">&lt;/color&gt;</span>
    <span class="nt">&lt;color</span> <span class="na">name=</span><span class="s">&#34;text16&#34;</span><span class="nt">&gt;</span>#f9f6f2<span class="nt">&lt;/color&gt;</span>
    <span class="nt">&lt;color</span> <span class="na">name=</span><span class="s">&#34;bg32&#34;</span><span class="nt">&gt;</span>#f67c5f<span class="nt">&lt;/color&gt;</span>
    <span class="nt">&lt;color</span> <span class="na">name=</span><span class="s">&#34;text32&#34;</span><span class="nt">&gt;</span>#f9f6f2<span class="nt">&lt;/color&gt;</span>
    <span class="nt">&lt;color</span> <span class="na">name=</span><span class="s">&#34;bg64&#34;</span><span class="nt">&gt;</span>#f65e3b<span class="nt">&lt;/color&gt;</span>
    <span class="nt">&lt;color</span> <span class="na">name=</span><span class="s">&#34;text64&#34;</span><span class="nt">&gt;</span>#f9f6f2<span class="nt">&lt;/color&gt;</span>
    <span class="nt">&lt;color</span> <span class="na">name=</span><span class="s">&#34;bg128&#34;</span><span class="nt">&gt;</span>#edcf72<span class="nt">&lt;/color&gt;</span>
    <span class="nt">&lt;color</span> <span class="na">name=</span><span class="s">&#34;text128&#34;</span><span class="nt">&gt;</span>#f9f6f2<span class="nt">&lt;/color&gt;</span>
    <span class="nt">&lt;color</span> <span class="na">name=</span><span class="s">&#34;bg256&#34;</span><span class="nt">&gt;</span>#edcc61<span class="nt">&lt;/color&gt;</span>
    <span class="nt">&lt;color</span> <span class="na">name=</span><span class="s">&#34;text256&#34;</span><span class="nt">&gt;</span>#f9f6f2<span class="nt">&lt;/color&gt;</span>
    <span class="nt">&lt;color</span> <span class="na">name=</span><span class="s">&#34;bg512&#34;</span><span class="nt">&gt;</span>#edc850<span class="nt">&lt;/color&gt;</span>
    <span class="nt">&lt;color</span> <span class="na">name=</span><span class="s">&#34;text512&#34;</span><span class="nt">&gt;</span>#f9f6f2<span class="nt">&lt;/color&gt;</span>
    <span class="nt">&lt;color</span> <span class="na">name=</span><span class="s">&#34;bg1024&#34;</span><span class="nt">&gt;</span>#edc53f<span class="nt">&lt;/color&gt;</span>
    <span class="nt">&lt;color</span> <span class="na">name=</span><span class="s">&#34;text1024&#34;</span><span class="nt">&gt;</span>#f9f6f2<span class="nt">&lt;/color&gt;</span>
    <span class="nt">&lt;color</span> <span class="na">name=</span><span class="s">&#34;bg2048&#34;</span><span class="nt">&gt;</span>#edc22e<span class="nt">&lt;/color&gt;</span>
    <span class="nt">&lt;color</span> <span class="na">name=</span><span class="s">&#34;text2048&#34;</span><span class="nt">&gt;</span>#f9f6f2<span class="nt">&lt;/color&gt;</span>
    <span class="nt">&lt;color</span> <span class="na">name=</span><span class="s">&#34;bgsuper&#34;</span><span class="nt">&gt;</span>#3c3a32<span class="nt">&lt;/color&gt;</span>
    <span class="nt">&lt;color</span> <span class="na">name=</span><span class="s">&#34;textsuper&#34;</span><span class="nt">&gt;</span>#f9f6f2<span class="nt">&lt;/color&gt;</span>
<span class="nt">&lt;/resources&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>其中 bg 表示背景色，text 表示前景色，切换到 Card 界面，在 setNumber 中添加如下代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">            <span class="k">switch</span><span class="o">(</span><span class="n">number</span><span class="o">)</span> <span class="o">{</span>
                <span class="k">case</span> <span class="n">0</span><span class="o">:</span>
                    <span class="n">tvNumber</span><span class="o">.</span><span class="na">setBackgroundColor</span><span class="o">(</span><span class="n">0x33FFFFFF</span><span class="o">);</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="k">case</span> <span class="n">2</span><span class="o">:</span>
                    <span class="n">tvNumber</span><span class="o">.</span><span class="na">setTextColor</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getColor</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">text2</span><span class="o">));</span>
                    <span class="n">tvNumber</span><span class="o">.</span><span class="na">setBackgroundColor</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getColor</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">bg2</span><span class="o">));</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="k">case</span> <span class="n">4</span><span class="o">:</span>
                    <span class="n">tvNumber</span><span class="o">.</span><span class="na">setTextColor</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getColor</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">text4</span><span class="o">));</span>
                    <span class="n">tvNumber</span><span class="o">.</span><span class="na">setBackgroundColor</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getColor</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">bg4</span><span class="o">));</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="k">case</span> <span class="n">8</span><span class="o">:</span>
                    <span class="n">tvNumber</span><span class="o">.</span><span class="na">setTextColor</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getColor</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">text8</span><span class="o">));</span>
                    <span class="n">tvNumber</span><span class="o">.</span><span class="na">setBackgroundColor</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getColor</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">bg8</span><span class="o">));</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="k">case</span> <span class="n">16</span><span class="o">:</span>
                    <span class="n">tvNumber</span><span class="o">.</span><span class="na">setTextColor</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getColor</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">text16</span><span class="o">));</span>
                    <span class="n">tvNumber</span><span class="o">.</span><span class="na">setBackgroundColor</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getColor</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">bg16</span><span class="o">));</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="k">case</span> <span class="n">32</span><span class="o">:</span>
                    <span class="n">tvNumber</span><span class="o">.</span><span class="na">setTextColor</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getColor</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">text32</span><span class="o">));</span>
                    <span class="n">tvNumber</span><span class="o">.</span><span class="na">setBackgroundColor</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getColor</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">bg32</span><span class="o">));</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="k">case</span> <span class="n">64</span><span class="o">:</span>
                    <span class="n">tvNumber</span><span class="o">.</span><span class="na">setTextColor</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getColor</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">text64</span><span class="o">));</span>
                    <span class="n">tvNumber</span><span class="o">.</span><span class="na">setBackgroundColor</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getColor</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">bg64</span><span class="o">));</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="k">case</span> <span class="n">128</span><span class="o">:</span>
                    <span class="n">tvNumber</span><span class="o">.</span><span class="na">setTextColor</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getColor</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">text128</span><span class="o">));</span>
                    <span class="n">tvNumber</span><span class="o">.</span><span class="na">setBackgroundColor</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getColor</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">bg128</span><span class="o">));</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="k">case</span> <span class="n">256</span><span class="o">:</span>
                    <span class="n">tvNumber</span><span class="o">.</span><span class="na">setTextColor</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getColor</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">text256</span><span class="o">));</span>
                    <span class="n">tvNumber</span><span class="o">.</span><span class="na">setBackgroundColor</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getColor</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">bg256</span><span class="o">));</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="k">case</span> <span class="n">512</span><span class="o">:</span>
                    <span class="n">tvNumber</span><span class="o">.</span><span class="na">setTextColor</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getColor</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">text512</span><span class="o">));</span>
                    <span class="n">tvNumber</span><span class="o">.</span><span class="na">setBackgroundColor</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getColor</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">bg512</span><span class="o">));</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="k">case</span> <span class="n">1024</span><span class="o">:</span>
                    <span class="n">tvNumber</span><span class="o">.</span><span class="na">setTextColor</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getColor</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">text1024</span><span class="o">));</span>
                    <span class="n">tvNumber</span><span class="o">.</span><span class="na">setBackgroundColor</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getColor</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">bg1024</span><span class="o">));</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="k">case</span> <span class="n">2048</span><span class="o">:</span>
                    <span class="n">tvNumber</span><span class="o">.</span><span class="na">setTextColor</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getColor</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">text2048</span><span class="o">));</span>
                    <span class="n">tvNumber</span><span class="o">.</span><span class="na">setBackgroundColor</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getColor</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">bg2048</span><span class="o">));</span>
                    <span class="k">break</span><span class="o">;</span>
                <span class="k">default</span><span class="o">:</span>
                    <span class="n">tvNumber</span><span class="o">.</span><span class="na">setTextColor</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getColor</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">textsuper</span><span class="o">));</span>
                    <span class="n">tvNumber</span><span class="o">.</span><span class="na">setBackgroundColor</span><span class="o">(</span><span class="n">getResources</span><span class="o">().</span><span class="na">getColor</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">color</span><span class="o">.</span><span class="na">bgsuper</span><span class="o">));</span>
                    <span class="k">break</span><span class="o">;</span>
            <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>运行结果如下：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%94%e8%8a%82%e3%80%81%e7%95%8c%e9%9d%a2%e7%be%8e%e5%8c%96/game2048_5_05.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第五节、界面美化/game2048_5_05.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第五节、界面美化/game2048_5_05.png" data-sub-html="<h2>阶段性效果</h2>">
        
    </a><figcaption class="image-caption">阶段性效果</figcaption>
    </figure>
<p>游戏局面基本已经完成。接下来，我们来处理一下主界面的布局，切换到activity_main.xml的代码模式，修改如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span><span class="lnt">75
</span><span class="lnt">76
</span><span class="lnt">77
</span><span class="lnt">78
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-xml" data-lang="xml"><span class="err">&lt;</span>?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;&gt;
<span class="nt">&lt;LinearLayout</span> <span class="na">xmlns:android=</span><span class="s">&#34;http://schemas.android.com/apk/res/android&#34;</span>
    <span class="na">android:orientation=</span><span class="s">&#34;vertical&#34;</span>
    <span class="na">android:layout_width=</span><span class="s">&#34;match_parent&#34;</span>
    <span class="na">android:layout_height=</span><span class="s">&#34;match_parent&#34;</span><span class="nt">&gt;</span>

    <span class="nt">&lt;LinearLayout</span>
        <span class="na">android:layout_width=</span><span class="s">&#34;wrap_content&#34;</span>
        <span class="na">android:layout_height=</span><span class="s">&#34;wrap_content&#34;</span>
        <span class="na">android:orientation=</span><span class="s">&#34;horizontal&#34;</span>
        <span class="na">android:paddingTop=</span><span class="s">&#34;8dp&#34;</span>
        <span class="na">android:paddingBottom=</span><span class="s">&#34;8dp&#34;</span>
        <span class="na">android:layout_gravity=</span><span class="s">&#34;right&#34;</span><span class="nt">&gt;</span>
    
        <span class="nt">&lt;LinearLayout</span>
            <span class="na">android:layout_width=</span><span class="s">&#34;wrap_content&#34;</span>
            <span class="na">android:layout_height=</span><span class="s">&#34;fill_parent&#34;</span>
            <span class="na">android:orientation=</span><span class="s">&#34;vertical&#34;</span>
            <span class="na">android:layout_marginLeft=</span><span class="s">&#34;16dp&#34;</span>
            <span class="na">android:layout_marginRight=</span><span class="s">&#34;8dp&#34;</span><span class="nt">&gt;</span>

            <span class="nt">&lt;TextView</span>
                <span class="na">android:layout_width=</span><span class="s">&#34;fill_parent&#34;</span>
                <span class="na">android:layout_height=</span><span class="s">&#34;wrap_content&#34;</span>
                <span class="na">android:text=</span><span class="s">&#34;@string/appname&#34;</span>
                <span class="na">android:textSize=</span><span class="s">&#34;84sp&#34;</span>
                <span class="na">android:textColor=</span><span class="s">&#34;#BBADA0&#34;</span>
                <span class="na">android:paddingTop=</span><span class="s">&#34;8dp&#34;</span>
                <span class="na">android:paddingBottom=</span><span class="s">&#34;8dp&#34;</span>
                <span class="na">android:paddingLeft=</span><span class="s">&#34;16dp&#34;</span>
                <span class="na">android:paddingRight=</span><span class="s">&#34;16dp&#34;</span>
                <span class="na">android:gravity=</span><span class="s">&#34;center&#34;</span> <span class="nt">/&gt;</span>

        <span class="nt">&lt;/LinearLayout&gt;</span>

        <span class="nt">&lt;LinearLayout</span>
            <span class="na">android:layout_width=</span><span class="s">&#34;wrap_content&#34;</span>
            <span class="na">android:layout_height=</span><span class="s">&#34;fill_parent&#34;</span>
            <span class="na">android:orientation=</span><span class="s">&#34;vertical&#34;</span>
            <span class="na">android:layout_marginLeft=</span><span class="s">&#34;16dp&#34;</span>
            <span class="na">android:layout_marginRight=</span><span class="s">&#34;8dp&#34;</span><span class="nt">&gt;</span>

            <span class="nt">&lt;TextView</span>
                <span class="na">android:layout_width=</span><span class="s">&#34;fill_parent&#34;</span>
                <span class="na">android:layout_height=</span><span class="s">&#34;wrap_content&#34;</span>
                <span class="na">android:text=</span><span class="s">&#34;@string/score&#34;</span>
                <span class="na">android:textSize=</span><span class="s">&#34;42sp&#34;</span>
                <span class="na">android:textColor=</span><span class="s">&#34;#BBADA0&#34;</span>
                <span class="na">android:paddingTop=</span><span class="s">&#34;8dp&#34;</span>
                <span class="na">android:paddingBottom=</span><span class="s">&#34;8dp&#34;</span>
                <span class="na">android:paddingLeft=</span><span class="s">&#34;16dp&#34;</span>
                <span class="na">android:paddingRight=</span><span class="s">&#34;16dp&#34;</span>
                <span class="na">android:gravity=</span><span class="s">&#34;center&#34;</span> <span class="nt">/&gt;</span>

            <span class="nt">&lt;TextView</span>
                <span class="na">android:id=</span><span class="s">&#34;@+id/tvScore&#34;</span>
                <span class="na">android:layout_width=</span><span class="s">&#34;fill_parent&#34;</span>
                <span class="na">android:layout_height=</span><span class="s">&#34;wrap_content&#34;</span>
                <span class="na">android:textSize=</span><span class="s">&#34;42sp&#34;</span>
                <span class="na">android:textColor=</span><span class="s">&#34;#BBADA0&#34;</span>
                <span class="na">android:paddingTop=</span><span class="s">&#34;8dp&#34;</span>
                <span class="na">android:paddingBottom=</span><span class="s">&#34;8dp&#34;</span>
                <span class="na">android:paddingLeft=</span><span class="s">&#34;16dp&#34;</span>
                <span class="na">android:paddingRight=</span><span class="s">&#34;16dp&#34;</span>
                <span class="na">android:gravity=</span><span class="s">&#34;center&#34;</span> <span class="nt">/&gt;</span>

        <span class="nt">&lt;/LinearLayout&gt;</span>

    <span class="nt">&lt;/LinearLayout&gt;</span>

    <span class="nt">&lt;GridLayout</span>
        <span class="na">android:id=</span><span class="s">&#34;@+id/gameView&#34;</span>
        <span class="na">android:layout_width=</span><span class="s">&#34;fill_parent&#34;</span>
        <span class="na">android:layout_height=</span><span class="s">&#34;0dp&#34;</span>
        <span class="na">android:layout_weight=</span><span class="s">&#34;1&#34;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;GridLayout&gt;</span>

<span class="nt">&lt;/LinearLayout&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>运行结果如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%94%e8%8a%82%e3%80%81%e7%95%8c%e9%9d%a2%e7%be%8e%e5%8c%96/game2048_5_10.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第五节、界面美化/game2048_5_10.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第五节、界面美化/game2048_5_10.png" data-sub-html="<h2>阶段性效果</h2>">
        
    </a><figcaption class="image-caption">阶段性效果</figcaption>
    </figure>
<p>下面，我们需要为 Best 标签添加一些操作，切换到 MainActivity 类，定义一个变量：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="n">score</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span>
    <span class="kd">private</span> <span class="n">TextView</span> <span class="n">tvScore</span><span class="o">;</span>
    <span class="kd">private</span> <span class="n">TextView</span> <span class="n">tvBest</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="n">MainActivity</span> <span class="n">mainActivity</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</code></pre></td></tr></table>
</div>
</div><p>为它添加初始化命令：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
        <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>

        <span class="n">tvScore</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextView</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">tvScore</span><span class="o">);</span>
        <span class="n">tvBest</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextView</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">tvBest</span><span class="o">);</span>

        <span class="n">mainActivity</span> <span class="o">=</span> <span class="k">this</span><span class="o">;</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>添加一个方法方便外部访问这个标签，同时定义一个 bestScore 变量用来保存最高分：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">showScore</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">tvScore</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">score</span> <span class="o">+</span> <span class="s">&#34;&#34;</span><span class="o">);</span>
        <span class="n">tvBest</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">bestScore</span> <span class="o">+</span> <span class="s">&#34;&#34;</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">addScore</span><span class="o">(</span><span class="kt">int</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">score</span> <span class="o">+=</span> <span class="n">s</span><span class="o">;</span>
        <span class="n">showScore</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getScore</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">score</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setBestScore</span><span class="o">(</span><span class="kt">int</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">bestScore</span> <span class="o">=</span> <span class="n">s</span><span class="o">;</span>
        <span class="n">showScore</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="kt">int</span> <span class="n">score</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kt">int</span> <span class="n">bestScore</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span>
    <span class="kd">private</span> <span class="n">TextView</span> <span class="n">tvScore</span><span class="o">;</span>
    <span class="kd">private</span> <span class="n">TextView</span> <span class="n">tvBest</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="n">MainActivity</span> <span class="n">mainActivity</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</code></pre></td></tr></table>
</div>
</div><p>切换到 GameView 中添加如下方法：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">updateBest</span><span class="o">()</span> <span class="o">{</span>
        <span class="kt">int</span> <span class="n">bestScore</span><span class="o">,</span> <span class="n">score</span><span class="o">;</span>
        <span class="n">SharedPreferences</span> <span class="n">sp</span> <span class="o">=</span> <span class="n">getContext</span><span class="o">().</span><span class="na">getSharedPreferences</span><span class="o">(</span><span class="s">&#34;game2048&#34;</span><span class="o">,</span> <span class="n">Context</span><span class="o">.</span><span class="na">MODE_PRIVATE</span><span class="o">);</span>
        <span class="n">SharedPreferences</span><span class="o">.</span><span class="na">Editoer</span> <span class="n">editor</span> <span class="o">=</span> <span class="n">sp</span><span class="o">.</span><span class="na">edit</span><span class="o">();</span>
        <span class="n">score</span> <span class="o">=</span> <span class="n">MainActivity</span><span class="o">.</span><span class="na">getMainActivity</span><span class="o">().</span><span class="na">getScore</span><span class="o">();</span>
        <span class="n">bestScore</span> <span class="o">=</span> <span class="n">sp</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">&#34;best&#34;</span><span class="o">,</span> <span class="n">0</span><span class="o">);</span>
        <span class="k">if</span> <span class="o">(</span><span class="n">bestScore</span> <span class="o">&lt;</span> <span class="n">score</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">editor</span><span class="o">.</span><span class="na">putInt</span><span class="o">(</span><span class="s">&#34;best&#34;</span><span class="o">,</span> <span class="n">score</span><span class="o">);</span>
            <span class="n">MainActivity</span><span class="o">.</span><span class="na">getMainActivity</span><span class="o">().</span><span class="na">setBestScore</span><span class="o">(</span><span class="n">score</span><span class="o">);</span>
            <span class="n">editor</span><span class="o">.</span><span class="na">commit</span><span class="o">();</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>在每一次加分后都调用该函数：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">MoveLeft</span><span class="o">()</span> <span class="o">{</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>   <span class="c1">// 行循环
</span><span class="c1"></span>            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>    <span class="c1">// 列循环
</span><span class="c1"></span>                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="n">j</span> <span class="o">+</span> <span class="n">1</span><span class="o">;</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">y</span><span class="o">++)</span> <span class="o">{</span>    <span class="c1">// 从当前位置往右扫描
</span><span class="c1"></span>                    <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="n">0</span><span class="o">)</span>  <span class="c1">// 当前值为 0
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 空位，左移
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">y</span> <span class="o">=</span> <span class="n">j</span> <span class="o">+</span> <span class="n">1</span><span class="o">;</span>  <span class="c1">// 避免 2 0 2 不合并的情况
</span><span class="c1"></span>                    <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">]))</span> <span class="o">{</span>    <span class="c1">// 相同
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">*</span> <span class="n">2</span><span class="o">);</span> <span class="c1">// 左移，合并
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">MainActivity</span><span class="o">.</span><span class="na">getMainActivity</span><span class="o">().</span><span class="na">addScore</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 加分
</span><span class="c1"></span>                        <span class="n">updateBest</span><span class="o">();</span>   <span class="c1">// 更新最高分
</span><span class="c1"></span>                        <span class="n">move</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>    <span class="c1">// 已操作
</span><span class="c1"></span>                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">if</span><span class="o">(</span><span class="n">move</span><span class="o">)</span> <span class="o">{</span>  <span class="c1">// 如果操作，添加新的卡片
</span><span class="c1"></span>            <span class="n">addRandomNumber</span><span class="o">();</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">MoveRight</span><span class="o">()</span> <span class="o">{</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>   <span class="c1">// 行循环
</span><span class="c1"></span>            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">3</span><span class="o">;</span> <span class="n">j</span> <span class="o">&gt;=</span> <span class="n">0</span><span class="o">;</span> <span class="n">j</span><span class="o">--)</span> <span class="o">{</span>    <span class="c1">// 列循环
</span><span class="c1"></span>                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="n">j</span> <span class="o">-</span> <span class="n">1</span><span class="o">;</span> <span class="n">y</span> <span class="o">&gt;=</span> <span class="n">0</span><span class="o">;</span> <span class="n">y</span><span class="o">--)</span> <span class="o">{</span>    <span class="c1">// 从当前位置往左扫描
</span><span class="c1"></span>                    <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="n">0</span><span class="o">)</span>  <span class="c1">// 当前值为 0
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 空位，右移
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">y</span> <span class="o">=</span> <span class="n">j</span> <span class="o">-</span> <span class="n">1</span><span class="o">;</span>  <span class="c1">// 避免 2 0 2 不合并的情况
</span><span class="c1"></span>                    <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">]))</span> <span class="o">{</span>    <span class="c1">// 相同
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">*</span> <span class="n">2</span><span class="o">);</span> <span class="c1">// 右移，合并
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">MainActivity</span><span class="o">.</span><span class="na">getMainActivity</span><span class="o">().</span><span class="na">addScore</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 加分
</span><span class="c1"></span>                        <span class="n">updateBest</span><span class="o">();</span>   <span class="c1">// 更新最高分
</span><span class="c1"></span>                        <span class="n">move</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>    <span class="c1">// 已操作
</span><span class="c1"></span>                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">if</span><span class="o">(</span><span class="n">move</span><span class="o">)</span> <span class="o">{</span>  <span class="c1">// 如果操作，添加新的卡片
</span><span class="c1"></span>            <span class="n">addRandomNumber</span><span class="o">();</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">MoveUp</span><span class="o">()</span> <span class="o">{</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>   <span class="c1">// 列循环
</span><span class="c1"></span>            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>    <span class="c1">// 行循环
</span><span class="c1"></span>                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="n">1</span><span class="o">;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">x</span><span class="o">++)</span> <span class="o">{</span>    <span class="c1">// 从当前位置往下扫描
</span><span class="c1"></span>                    <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="n">0</span><span class="o">)</span>  <span class="c1">// 当前值为 0
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 空位，上移
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">x</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="n">1</span><span class="o">;</span>  <span class="c1">// 避免 2 0 2 不合并的情况
</span><span class="c1"></span>                    <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">]))</span> <span class="o">{</span>    <span class="c1">// 相同
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">*</span> <span class="n">2</span><span class="o">);</span> <span class="c1">// 上移，合并
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">MainActivity</span><span class="o">.</span><span class="na">getMainActivity</span><span class="o">().</span><span class="na">addScore</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 加分
</span><span class="c1"></span>                        <span class="n">updateBest</span><span class="o">();</span>   <span class="c1">// 更新最高分
</span><span class="c1"></span>                        <span class="n">move</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>    <span class="c1">// 已操作
</span><span class="c1"></span>                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">if</span><span class="o">(</span><span class="n">move</span><span class="o">)</span> <span class="o">{</span>  <span class="c1">// 如果操作，添加新的卡片
</span><span class="c1"></span>            <span class="n">addRandomNumber</span><span class="o">();</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">MoveDown</span><span class="o">()</span> <span class="o">{</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>   <span class="c1">// 列循环
</span><span class="c1"></span>            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">3</span><span class="o">;</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span><span class="o">--)</span> <span class="o">{</span>    <span class="c1">// 行循环
</span><span class="c1"></span>                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">i</span> <span class="o">-</span> <span class="n">1</span><span class="o">;</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="n">0</span><span class="o">;</span> <span class="n">x</span><span class="o">--)</span> <span class="o">{</span>    <span class="c1">// 从当前位置往上扫描
</span><span class="c1"></span>                    <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="n">0</span><span class="o">)</span>  <span class="c1">// 当前值为 0
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 空位，下移
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">x</span> <span class="o">=</span> <span class="n">i</span> <span class="o">-</span> <span class="n">1</span><span class="o">;</span>  <span class="c1">// 避免 2 0 2 不合并的情况
</span><span class="c1"></span>                    <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">]))</span> <span class="o">{</span>    <span class="c1">// 相同
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">*</span> <span class="n">2</span><span class="o">);</span> <span class="c1">// 下移，合并
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">MainActivity</span><span class="o">.</span><span class="na">getMainActivity</span><span class="o">().</span><span class="na">addScore</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 加分
</span><span class="c1"></span>                        <span class="n">updateBest</span><span class="o">();</span>   <span class="c1">// 更新最高分
</span><span class="c1"></span>                        <span class="n">move</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>    <span class="c1">// 已操作
</span><span class="c1"></span>                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">if</span><span class="o">(</span><span class="n">move</span><span class="o">)</span> <span class="o">{</span>  <span class="c1">// 如果操作，添加新的卡片
</span><span class="c1"></span>            <span class="n">addRandomNumber</span><span class="o">();</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>最后，我们需要对最高分标签进行初始化，切换到 MainActivity 类，修改代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
        <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>

        <span class="n">tvScore</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextView</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">tvScore</span><span class="o">);</span>
        <span class="n">tvBest</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextView</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">tvBest</span><span class="o">);</span>

        <span class="n">SharedPreferences</span> <span class="n">sp</span> <span class="o">=</span> <span class="n">getSharedPreferences</span><span class="o">(</span><span class="s">&#34;game2048&#34;</span><span class="o">,</span> <span class="n">Contex</span><span class="o">.</span><span class="na">MODE_PRIVATE</span><span class="o">);</span>

        <span class="n">bestScore</span> <span class="o">=</span> <span class="n">sp</span><span class="o">.</span><span class="na">getInt</span><span class="o">(</span><span class="s">&#34;best&#34;</span><span class="o">,</span> <span class="n">0</span><span class="o">);</span>
        <span class="n">tvBest</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">bestScore</span> <span class="o">+</span> <span class="s">&#34;&#34;</span><span class="o">);</span>

        <span class="n">mainActivity</span> <span class="o">=</span> <span class="k">this</span><span class="o">;</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>运行结果如下：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%94%e8%8a%82%e3%80%81%e7%95%8c%e9%9d%a2%e7%be%8e%e5%8c%96/game2048_5_17.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第五节、界面美化/game2048_5_17.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第五节、界面美化/game2048_5_17.png" data-sub-html="<h2>运行效果</h2>">
        
    </a><figcaption class="image-caption">运行效果</figcaption>
    </figure>
<p>游戏至此已经完工。当然，我们可以为它添加更多的动画特效，留给读者自行操作。</p>
]]></description></item><item><title>2048 游戏制作过程（Java 描述）：第四节、游戏逻辑</title><link>https://example.com/2015/05/2048-%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bjava-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E5%9B%9B%E8%8A%82%E6%B8%B8%E6%88%8F%E9%80%BB%E8%BE%91/</link><pubDate>Fri, 15 May 2015 19:33:00 +0800</pubDate><author>作者</author><guid>https://example.com/2015/05/2048-%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bjava-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E5%9B%9B%E8%8A%82%E6%B8%B8%E6%88%8F%E9%80%BB%E8%BE%91/</guid><description><![CDATA[<p>上一节中，我们已经成功的将卡牌添加到了游戏中，但只是显示在了界面上，并没有保存下来。我们在 GameView 中定义一个二维数组用来保存游戏界面的卡牌。</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="n">Card</span><span class="o">[][]</span> <span class="n">cardMap</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Card</span><span class="o">[</span><span class="n">4</span><span class="o">][</span><span class="n">4</span><span class="o">];</span>  <span class="c1">// 记录游戏
</span></code></pre></td></tr></table>
</div>
</div><p>接下来，我们需要将初始化时候添加的卡片添加到 cardMap 数组中，如下图所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">addCards</span><span class="o">(</span><span class="kt">int</span> <span class="n">cardSize</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Card</span> <span class="n">card</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">card</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Card</span><span class="o">(</span><span class="n">getContext</span><span class="o">());</span>
                <span class="n">card</span><span class="o">.</span><span class="na">setNumber</span><span class="o">(</span><span class="n">2</span><span class="o">);</span>
                <span class="n">addView</span><span class="o">(</span><span class="n">card</span><span class="o">,</span> <span class="n">cardSzie</span><span class="o">,</span> <span class="n">cardSize</span><span class="o">);</span>
                <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">card</span><span class="o">;</span>   <span class="c1">// 添加卡片
</span><span class="c1"></span>            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>这样一来，我们就将游戏界面记录下来了。</p>
<p>但是上一节中，我们一下子就生成了 16 张卡片，这和平时游戏的时候不一致。而且我们只能生成卡片 2。为了改进它，我们可以定义一个函数 addRandomNumber，表示每次生成的数字（这里我们设置生成 2 和 4 的概率为 9:1）：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">addRandomNumber</span><span class="o">()</span> <span class="o">{</span>

        <span class="n">emptyPoints</span><span class="o">.</span><span class="na">clear</span><span class="o">();</span>

        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="n">0</span><span class="o">)</span> <span class="o">{</span>    <span class="c1">// 用 0 表示空点
</span><span class="c1"></span>                    <span class="n">emptyPoints</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="n">Point</span><span class="o">(</span><span class="n">i</span><span class="o">,</span> <span class="n">j</span><span class="o">));</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="n">Point</span> <span class="n">point</span> <span class="o">=</span> <span class="n">emptyPoints</span><span class="o">.</span><span class="na">remove</span><span class="o">((</span><span class="kt">int</span><span class="o">)(</span><span class="n">Math</span><span class="o">.</span><span class="na">random</span><span class="o">()</span> <span class="o">*</span> <span class="n">emptyPoints</span><span class="o">.</span><span class="na">size</span><span class="o">()));</span>    <span class="c1">// 随机获取空点
</span><span class="c1"></span>        <span class="n">cardMap</span><span class="o">[</span><span class="n">point</span><span class="o">.</span><span class="na">x</span><span class="o">][</span><span class="n">point</span><span class="o">.</span><span class="na">y</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">Math</span><span class="o">.</span><span class="na">random</span><span class="o">()</span> <span class="o">&gt;</span> <span class="n">0</span><span class="o">.</span><span class="na">1</span> <span class="o">?</span> <span class="n">2</span> <span class="o">:</span> <span class="n">4</span><span class="o">);</span>   <span class="c1">// 按 9:1 的概率生成 2 和 4
</span><span class="c1"></span>    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>这里用到了一个 emptyPoints 变量，我们需要定义如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="n">Card</span><span class="o">[][]</span> <span class="n">cardMap</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Card</span><span class="o">[</span><span class="n">4</span><span class="o">][</span><span class="n">4</span><span class="o">];</span>  <span class="c1">// 记录游戏
</span><span class="c1"></span>    <span class="kd">private</span> <span class="n">ListL</span><span class="o">&lt;</span><span class="n">Point</span><span class="o">&gt;</span> <span class="n">emptyPoints</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;&gt;();</span>   <span class="c1">// 空点列表
</span></code></pre></td></tr></table>
</div>
</div><p>除此之外，我们还看到在上面的程序中，我们使用 0 表示空点，但是我们并不希望 0 显示在我们的游戏中，因此修改 Card 类的 SetNumber 函数如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNumber</span><span class="o">(</span><span class="kt">int</span> <span class="n">number</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">number</span> <span class="o">=</span> <span class="n">number</span><span class="o">;</span>   <span class="c1">// 设置数字
</span><span class="c1"></span>
        <span class="k">if</span><span class="o">(</span><span class="n">number</span> <span class="o">&gt;</span> <span class="n">0</span><span class="o">)</span> <span class="o">{</span>
            <span class="n">tvNumber</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">number</span> <span class="o">+</span> <span class="s">&#34;&#34;</span><span class="o">);</span>  <span class="c1">// 设置 tvNumber 文本
</span><span class="c1"></span>        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span>
            <span class="n">tvNumber</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="s">&#34;&#34;</span><span class="o">);</span>  <span class="c1">// 空文本，不显示数字 0
</span><span class="c1"></span>        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>同时，我们需要修改 GameView 中的 addCards 函数，使得一开始都生成空点：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">addCards</span><span class="o">(</span><span class="kt">int</span> <span class="n">cardSize</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Card</span> <span class="n">card</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">card</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Card</span><span class="o">(</span><span class="n">getContext</span><span class="o">());</span>
                <span class="n">card</span><span class="o">.</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span>  <span class="c1">// 生成空点
</span><span class="c1"></span>                <span class="n">addView</span><span class="o">(</span><span class="n">card</span><span class="o">,</span> <span class="n">cardSzie</span><span class="o">,</span> <span class="n">cardSize</span><span class="o">);</span>
                <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">]</span> <span class="o">=</span> <span class="n">card</span><span class="o">;</span>   <span class="c1">// 添加卡片
</span><span class="c1"></span>            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>接下来，我们可以开始游戏了，首先定义一个 startGame 函数，同时在 onSizeChanged 事件中调用它，如下图所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onSizeChanged</span><span class="o">(</span><span class="kt">int</span> <span class="n">w</span><span class="o">,</span> <span class="kt">int</span> <span class="n">h</span><span class="o">,</span> <span class="kt">int</span> <span class="n">oldw</span><span class="o">,</span> <span class="kt">int</span> <span class="n">oldh</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">.</span><span class="na">onSizeChange</span><span class="o">(</span><span class="n">w</span><span class="o">,</span> <span class="n">h</span><span class="o">,</span> <span class="n">oldw</span><span class="o">,</span> <span class="n">oldh</span><span class="o">);</span>

        <span class="kt">int</span> <span class="n">cardSize</span> <span class="o">=</span> <span class="o">(</span><span class="n">Math</span><span class="o">.</span><span class="na">min</span><span class="o">(</span><span class="n">w</span><span class="o">,</span> <span class="n">h</span><span class="o">)</span> <span class="o">-</span><span class="n">10</span><span class="o">)</span> <span class="o">/</span> <span class="n">4</span><span class="o">;</span>    <span class="c1">// 计算卡牌尺寸
</span><span class="c1"></span>        <span class="n">addCards</span><span class="o">(</span><span class="n">cardSize</span><span class="o">);</span>

        <span class="n">startGame</span><span class="o">();</span>    <span class="c1">// 开始游戏
</span><span class="c1"></span>    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>同时，定义 startGame 函数如下图所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">startGame</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空游戏界面
</span><span class="c1"></span>            <span class="o">}</span>
        <span class="o">}</span>

        <span class="c1">// 初始化两张卡片
</span><span class="c1"></span>        <span class="n">addRandomNumber</span><span class="o">();</span>
        <span class="n">addRandomNumber</span><span class="o">();</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>运行查看结果，如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e5%9b%9b%e8%8a%82%e3%80%81%e6%b8%b8%e6%88%8f%e9%80%bb%e8%be%91/game2048_4_09.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第四节、游戏逻辑/game2048_4_09.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第四节、游戏逻辑/game2048_4_09.png" data-sub-html="<h2>阶段性效果</h2>">
        
    </a><figcaption class="image-caption">阶段性效果</figcaption>
    </figure>
<p>接下来，我们需要实现游戏的逻辑，也就是方块的合并。我们需要操作 MoveLeft 等四个函数。如下图所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">MoveLeft</span><span class="o">()</span> <span class="o">{</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>   <span class="c1">// 行循环
</span><span class="c1"></span>            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>    <span class="c1">// 列循环
</span><span class="c1"></span>                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="n">j</span> <span class="o">+</span> <span class="n">1</span><span class="o">;</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">y</span><span class="o">++)</span> <span class="o">{</span>    <span class="c1">// 从当前位置往右扫描
</span><span class="c1"></span>                    <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="n">0</span><span class="o">)</span>  <span class="c1">// 当前值为 0
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 空位，左移
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">y</span> <span class="o">=</span> <span class="n">j</span> <span class="o">+</span> <span class="n">1</span><span class="o">;</span>  <span class="c1">// 避免 2 0 2 不合并的情况
</span><span class="c1"></span>                    <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">]))</span> <span class="o">{</span>    <span class="c1">// 相同
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">*</span> <span class="n">2</span><span class="o">);</span> <span class="c1">// 左移，合并
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>接下来的三个方向的移动只需要对上面的代码进行稍微修改即可，MoveRight 如下图所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">MoveRight</span><span class="o">()</span> <span class="o">{</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>   <span class="c1">// 行循环
</span><span class="c1"></span>            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">3</span><span class="o">;</span> <span class="n">j</span> <span class="o">&gt;=</span> <span class="n">0</span><span class="o">;</span> <span class="n">j</span><span class="o">--)</span> <span class="o">{</span>    <span class="c1">// 列循环
</span><span class="c1"></span>                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="n">j</span> <span class="o">-</span> <span class="n">1</span><span class="o">;</span> <span class="n">y</span> <span class="o">&gt;=</span> <span class="n">0</span><span class="o">;</span> <span class="n">y</span><span class="o">--)</span> <span class="o">{</span>    <span class="c1">// 从当前位置往左扫描
</span><span class="c1"></span>                    <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="n">0</span><span class="o">)</span>  <span class="c1">// 当前值为 0
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 空位，右移
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">y</span> <span class="o">=</span> <span class="n">j</span> <span class="o">-</span> <span class="n">1</span><span class="o">;</span>  <span class="c1">// 避免 2 0 2 不合并的情况
</span><span class="c1"></span>                    <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">]))</span> <span class="o">{</span>    <span class="c1">// 相同
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">*</span> <span class="n">2</span><span class="o">);</span> <span class="c1">// 右移，合并
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>MoveUp 函数如下图所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">MoveUp</span><span class="o">()</span> <span class="o">{</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>   <span class="c1">// 列循环
</span><span class="c1"></span>            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>    <span class="c1">// 行循环
</span><span class="c1"></span>                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="n">1</span><span class="o">;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">x</span><span class="o">++)</span> <span class="o">{</span>    <span class="c1">// 从当前位置往下扫描
</span><span class="c1"></span>                    <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="n">0</span><span class="o">)</span>  <span class="c1">// 当前值为 0
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 空位，上移
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">x</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="n">1</span><span class="o">;</span>  <span class="c1">// 避免 2 0 2 不合并的情况
</span><span class="c1"></span>                    <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">]))</span> <span class="o">{</span>    <span class="c1">// 相同
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">*</span> <span class="n">2</span><span class="o">);</span> <span class="c1">// 上移，合并
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>MoveDown 函数如下图所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">MoveDown</span><span class="o">()</span> <span class="o">{</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>   <span class="c1">// 列循环
</span><span class="c1"></span>            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">3</span><span class="o">;</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span><span class="o">--)</span> <span class="o">{</span>    <span class="c1">// 行循环
</span><span class="c1"></span>                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">i</span> <span class="o">-</span> <span class="n">1</span><span class="o">;</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="n">0</span><span class="o">;</span> <span class="n">x</span><span class="o">--)</span> <span class="o">{</span>    <span class="c1">// 从当前位置往上扫描
</span><span class="c1"></span>                    <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="n">0</span><span class="o">)</span>  <span class="c1">// 当前值为 0
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 空位，下移
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">x</span> <span class="o">=</span> <span class="n">i</span> <span class="o">-</span> <span class="n">1</span><span class="o">;</span>  <span class="c1">// 避免 2 0 2 不合并的情况
</span><span class="c1"></span>                    <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">]))</span> <span class="o">{</span>    <span class="c1">// 相同
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">*</span> <span class="n">2</span><span class="o">);</span> <span class="c1">// 下移，合并
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>至此，我们的移动功能已基本完成，测试如下：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e5%9b%9b%e8%8a%82%e3%80%81%e6%b8%b8%e6%88%8f%e9%80%bb%e8%be%91/game2048_4_14.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第四节、游戏逻辑/game2048_4_14.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第四节、游戏逻辑/game2048_4_14.png" data-sub-html="<h2>阶段性效果</h2>">
        
    </a><figcaption class="image-caption">阶段性效果</figcaption>
    </figure>
<p>最后，我们来完成积分的模块，每次操作得分都等于合并方块的数字之和。切换到 MainActivy 类，添加以下代码以获取 tvScore 这个标签：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainActivity</span> <span class="kd">extends</span> <span class="n">ActionBarActivity</span> <span class="o">{</span>

    <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
        <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>

        <span class="n">tvScore</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextView</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">tvScore</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="n">TextView</span> <span class="n">tvScore</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>接下去，为了能够在外界操作 MainActivy 中的 tvScore，我们修改代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainActivity</span> <span class="kd">extends</span> <span class="n">ActionBarActivity</span> <span class="o">{</span>

    <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
        <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>

        <span class="n">tvScore</span> <span class="o">=</span> <span class="o">(</span><span class="n">TextView</span><span class="o">)</span><span class="n">findViewById</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">id</span><span class="o">.</span><span class="na">tvScore</span><span class="o">);</span>

        <span class="n">mainActivity</span> <span class="o">=</span> <span class="k">this</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="n">MainActivity</span> <span class="nf">getMainActivity</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">mainActivity</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="n">TextView</span> <span class="n">tvScore</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="n">MainActivity</span> <span class="n">mainActivity</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>最后添加计分变量以及相关的操作函数：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">clearScore</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">score</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span>
        <span class="n">showScore</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">showScore</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">tvScore</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">score</span> <span class="o">+</span> <span class="s">&#34;&#34;</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">addScore</span><span class="o">(</span><span class="kt">int</span> <span class="n">s</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">score</span> <span class="o">+=</span> <span class="n">s</span><span class="o">;</span>
        <span class="n">showScore</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="kt">int</span> <span class="n">score</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span>
    <span class="kd">private</span> <span class="n">TextView</span> <span class="n">tvScore</span><span class="o">;</span>
    <span class="kd">private</span> <span class="kd">static</span> <span class="n">MainActivity</span> <span class="n">mainActivity</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
</code></pre></td></tr></table>
</div>
</div><p>接下去，切换到 GameView 中，将下面的代码添加到四个移动操作的相应位置：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">MoveLeft</span><span class="o">()</span> <span class="o">{</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>   <span class="c1">// 行循环
</span><span class="c1"></span>            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>    <span class="c1">// 列循环
</span><span class="c1"></span>                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="n">j</span> <span class="o">+</span> <span class="n">1</span><span class="o">;</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">y</span><span class="o">++)</span> <span class="o">{</span>    <span class="c1">// 从当前位置往右扫描
</span><span class="c1"></span>                    <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="n">0</span><span class="o">)</span>  <span class="c1">// 当前值为 0
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 空位，左移
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">y</span> <span class="o">=</span> <span class="n">j</span> <span class="o">+</span> <span class="n">1</span><span class="o">;</span>  <span class="c1">// 避免 2 0 2 不合并的情况
</span><span class="c1"></span>                    <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">]))</span> <span class="o">{</span>    <span class="c1">// 相同
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">*</span> <span class="n">2</span><span class="o">);</span> <span class="c1">// 左移，合并
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">MainActivity</span><span class="o">.</span><span class="na">getMainActivity</span><span class="o">().</span><span class="na">addScore</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 加分
</span><span class="c1"></span>                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">MoveRight</span><span class="o">()</span> <span class="o">{</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>   <span class="c1">// 行循环
</span><span class="c1"></span>            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">3</span><span class="o">;</span> <span class="n">j</span> <span class="o">&gt;=</span> <span class="n">0</span><span class="o">;</span> <span class="n">j</span><span class="o">--)</span> <span class="o">{</span>    <span class="c1">// 列循环
</span><span class="c1"></span>                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="n">j</span> <span class="o">-</span> <span class="n">1</span><span class="o">;</span> <span class="n">y</span> <span class="o">&gt;=</span> <span class="n">0</span><span class="o">;</span> <span class="n">y</span><span class="o">--)</span> <span class="o">{</span>    <span class="c1">// 从当前位置往左扫描
</span><span class="c1"></span>                    <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="n">0</span><span class="o">)</span>  <span class="c1">// 当前值为 0
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 空位，右移
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">y</span> <span class="o">=</span> <span class="n">j</span> <span class="o">-</span> <span class="n">1</span><span class="o">;</span>  <span class="c1">// 避免 2 0 2 不合并的情况
</span><span class="c1"></span>                    <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">]))</span> <span class="o">{</span>    <span class="c1">// 相同
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">*</span> <span class="n">2</span><span class="o">);</span> <span class="c1">// 右移，合并
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">MainActivity</span><span class="o">.</span><span class="na">getMainActivity</span><span class="o">().</span><span class="na">addScore</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 加分
</span><span class="c1"></span>                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">MoveUp</span><span class="o">()</span> <span class="o">{</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>   <span class="c1">// 列循环
</span><span class="c1"></span>            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>    <span class="c1">// 行循环
</span><span class="c1"></span>                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="n">1</span><span class="o">;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">x</span><span class="o">++)</span> <span class="o">{</span>    <span class="c1">// 从当前位置往下扫描
</span><span class="c1"></span>                    <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="n">0</span><span class="o">)</span>  <span class="c1">// 当前值为 0
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 空位，上移
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">x</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="n">1</span><span class="o">;</span>  <span class="c1">// 避免 2 0 2 不合并的情况
</span><span class="c1"></span>                    <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">]))</span> <span class="o">{</span>    <span class="c1">// 相同
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">*</span> <span class="n">2</span><span class="o">);</span> <span class="c1">// 上移，合并
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">MainActivity</span><span class="o">.</span><span class="na">getMainActivity</span><span class="o">().</span><span class="na">addScore</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 加分
</span><span class="c1"></span>                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">MoveDown</span><span class="o">()</span> <span class="o">{</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>   <span class="c1">// 列循环
</span><span class="c1"></span>            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">3</span><span class="o">;</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span><span class="o">--)</span> <span class="o">{</span>    <span class="c1">// 行循环
</span><span class="c1"></span>                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">i</span> <span class="o">-</span> <span class="n">1</span><span class="o">;</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="n">0</span><span class="o">;</span> <span class="n">x</span><span class="o">--)</span> <span class="o">{</span>    <span class="c1">// 从当前位置往上扫描
</span><span class="c1"></span>                    <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="n">0</span><span class="o">)</span>  <span class="c1">// 当前值为 0
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 空位，下移
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">x</span> <span class="o">=</span> <span class="n">i</span> <span class="o">-</span> <span class="n">1</span><span class="o">;</span>  <span class="c1">// 避免 2 0 2 不合并的情况
</span><span class="c1"></span>                    <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">]))</span> <span class="o">{</span>    <span class="c1">// 相同
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">*</span> <span class="n">2</span><span class="o">);</span> <span class="c1">// 下移，合并
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">MainActivity</span><span class="o">.</span><span class="na">getMainActivity</span><span class="o">().</span><span class="na">addScore</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 加分
</span><span class="c1"></span>                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>接下来，我们需要在开始的时候清空分数：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">startGame</span><span class="o">()</span> <span class="o">{</span>

        <span class="n">MainActivity</span><span class="o">.</span><span class="na">getMainActivity</span><span class="o">().</span><span class="na">clearScore</span><span class="o">();</span>    <span class="c1">// 清零
</span><span class="c1"></span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空游戏界面
</span><span class="c1"></span>            <span class="o">}</span>
        <span class="o">}</span>

        <span class="c1">// 初始化两张卡片
</span><span class="c1"></span>        <span class="n">addRandomNumber</span><span class="o">();</span>
        <span class="n">addRandomNumber</span><span class="o">();</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>运行测试：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e5%9b%9b%e8%8a%82%e3%80%81%e6%b8%b8%e6%88%8f%e9%80%bb%e8%be%91/game2048_4_20.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第四节、游戏逻辑/game2048_4_20.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第四节、游戏逻辑/game2048_4_20.png" data-sub-html="<h2>阶段性效果</h2>">
        
    </a><figcaption class="image-caption">阶段性效果</figcaption>
    </figure>
<p>接下去，我们需要在每次操作后都添加新的卡片：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">MoveLeft</span><span class="o">()</span> <span class="o">{</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>   <span class="c1">// 行循环
</span><span class="c1"></span>            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>    <span class="c1">// 列循环
</span><span class="c1"></span>                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="n">j</span> <span class="o">+</span> <span class="n">1</span><span class="o">;</span> <span class="n">y</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">y</span><span class="o">++)</span> <span class="o">{</span>    <span class="c1">// 从当前位置往右扫描
</span><span class="c1"></span>                    <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="n">0</span><span class="o">)</span>  <span class="c1">// 当前值为 0
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 空位，左移
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">y</span> <span class="o">=</span> <span class="n">j</span> <span class="o">+</span> <span class="n">1</span><span class="o">;</span>  <span class="c1">// 避免 2 0 2 不合并的情况
</span><span class="c1"></span>                    <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">]))</span> <span class="o">{</span>    <span class="c1">// 相同
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">*</span> <span class="n">2</span><span class="o">);</span> <span class="c1">// 左移，合并
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">MainActivity</span><span class="o">.</span><span class="na">getMainActivity</span><span class="o">().</span><span class="na">addScore</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 加分
</span><span class="c1"></span>                        <span class="n">move</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>    <span class="c1">// 已操作
</span><span class="c1"></span>                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">if</span><span class="o">(</span><span class="n">move</span><span class="o">)</span> <span class="o">{</span>  <span class="c1">// 如果操作，添加新的卡片
</span><span class="c1"></span>            <span class="n">addRandomNumber</span><span class="o">();</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">MoveRight</span><span class="o">()</span> <span class="o">{</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>   <span class="c1">// 行循环
</span><span class="c1"></span>            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">3</span><span class="o">;</span> <span class="n">j</span> <span class="o">&gt;=</span> <span class="n">0</span><span class="o">;</span> <span class="n">j</span><span class="o">--)</span> <span class="o">{</span>    <span class="c1">// 列循环
</span><span class="c1"></span>                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="n">j</span> <span class="o">-</span> <span class="n">1</span><span class="o">;</span> <span class="n">y</span> <span class="o">&gt;=</span> <span class="n">0</span><span class="o">;</span> <span class="n">y</span><span class="o">--)</span> <span class="o">{</span>    <span class="c1">// 从当前位置往左扫描
</span><span class="c1"></span>                    <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="n">0</span><span class="o">)</span>  <span class="c1">// 当前值为 0
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 空位，右移
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">y</span> <span class="o">=</span> <span class="n">j</span> <span class="o">-</span> <span class="n">1</span><span class="o">;</span>  <span class="c1">// 避免 2 0 2 不合并的情况
</span><span class="c1"></span>                    <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">]))</span> <span class="o">{</span>    <span class="c1">// 相同
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">*</span> <span class="n">2</span><span class="o">);</span> <span class="c1">// 右移，合并
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">y</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">MainActivity</span><span class="o">.</span><span class="na">getMainActivity</span><span class="o">().</span><span class="na">addScore</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 加分
</span><span class="c1"></span>                        <span class="n">move</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>    <span class="c1">// 已操作
</span><span class="c1"></span>                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">if</span><span class="o">(</span><span class="n">move</span><span class="o">)</span> <span class="o">{</span>  <span class="c1">// 如果操作，添加新的卡片
</span><span class="c1"></span>            <span class="n">addRandomNumber</span><span class="o">();</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">MoveUp</span><span class="o">()</span> <span class="o">{</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>   <span class="c1">// 列循环
</span><span class="c1"></span>            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>    <span class="c1">// 行循环
</span><span class="c1"></span>                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="n">1</span><span class="o">;</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">x</span><span class="o">++)</span> <span class="o">{</span>    <span class="c1">// 从当前位置往下扫描
</span><span class="c1"></span>                    <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="n">0</span><span class="o">)</span>  <span class="c1">// 当前值为 0
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 空位，上移
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">x</span> <span class="o">=</span> <span class="n">i</span> <span class="o">+</span> <span class="n">1</span><span class="o">;</span>  <span class="c1">// 避免 2 0 2 不合并的情况
</span><span class="c1"></span>                    <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">]))</span> <span class="o">{</span>    <span class="c1">// 相同
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">*</span> <span class="n">2</span><span class="o">);</span> <span class="c1">// 上移，合并
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">MainActivity</span><span class="o">.</span><span class="na">getMainActivity</span><span class="o">().</span><span class="na">addScore</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 加分
</span><span class="c1"></span>                        <span class="n">move</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>    <span class="c1">// 已操作
</span><span class="c1"></span>                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">if</span><span class="o">(</span><span class="n">move</span><span class="o">)</span> <span class="o">{</span>  <span class="c1">// 如果操作，添加新的卡片
</span><span class="c1"></span>            <span class="n">addRandomNumber</span><span class="o">();</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">MoveDown</span><span class="o">()</span> <span class="o">{</span>
         <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>   <span class="c1">// 列循环
</span><span class="c1"></span>            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">3</span><span class="o">;</span> <span class="n">i</span> <span class="o">&gt;=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span><span class="o">--)</span> <span class="o">{</span>    <span class="c1">// 行循环
</span><span class="c1"></span>                <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="n">i</span> <span class="o">-</span> <span class="n">1</span><span class="o">;</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="n">0</span><span class="o">;</span> <span class="n">x</span><span class="o">--)</span> <span class="o">{</span>    <span class="c1">// 从当前位置往上扫描
</span><span class="c1"></span>                    <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="n">0</span><span class="o">)</span>  <span class="c1">// 当前值为 0
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 空位，下移
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">x</span> <span class="o">=</span> <span class="n">i</span> <span class="o">-</span> <span class="n">1</span><span class="o">;</span>  <span class="c1">// 避免 2 0 2 不合并的情况
</span><span class="c1"></span>                    <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">]))</span> <span class="o">{</span>    <span class="c1">// 相同
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">*</span> <span class="n">2</span><span class="o">);</span> <span class="c1">// 下移，合并
</span><span class="c1"></span>                        <span class="n">cardMap</span><span class="o">[</span><span class="n">x</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span> <span class="c1">// 清空
</span><span class="c1"></span>                        <span class="n">MainActivity</span><span class="o">.</span><span class="na">getMainActivity</span><span class="o">().</span><span class="na">addScore</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">());</span> <span class="c1">// 加分
</span><span class="c1"></span>                        <span class="n">move</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>    <span class="c1">// 已操作
</span><span class="c1"></span>                    <span class="o">}</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">if</span><span class="o">(</span><span class="n">move</span><span class="o">)</span> <span class="o">{</span>  <span class="c1">// 如果操作，添加新的卡片
</span><span class="c1"></span>            <span class="n">addRandomNumber</span><span class="o">();</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>其它三种情况请读者自行根据上述代码进行修改。测试结果如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e5%9b%9b%e8%8a%82%e3%80%81%e6%b8%b8%e6%88%8f%e9%80%bb%e8%be%91/game2048_4_22.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第四节、游戏逻辑/game2048_4_22.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第四节、游戏逻辑/game2048_4_22.png" data-sub-html="<h2>阶段性效果</h2>">
        
    </a><figcaption class="image-caption">阶段性效果</figcaption>
    </figure>
<p>最后，我们还需要判断游戏是否结束。游戏结束的条件是没有空位并且无法继续合并。定义一个函数 checkGame，checkGame 函数实现如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">checkGame</span><span class="o">()</span> <span class="o">{</span>

        <span class="kt">boolean</span> <span class="n">complete</span> <span class="o">=</span> <span class="kc">true</span><span class="o">;</span>    <span class="c1">// 默认游戏结束
</span><span class="c1"></span><span class="nl">
</span><span class="nl">        ALL:</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span> <span class="o">{</span>
                <span class="k">if</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">getNumber</span><span class="o">()</span> <span class="o">&lt;=</span> <span class="n">0</span> <span class="o">||</span>
                    <span class="o">(</span><span class="n">i</span> <span class="o">&gt;</span> <span class="n">0</span> <span class="o">&amp;&amp;</span> <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span> <span class="o">-</span> <span class="n">1</span><span class="o">][</span><span class="n">j</span><span class="o">]))</span> <span class="o">||</span>
                    <span class="o">(</span><span class="n">i</span> <span class="o">&lt;</span> <span class="n">3</span> <span class="o">&amp;&amp;</span> <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span> <span class="o">+</span> <span class="n">1</span><span class="o">][</span><span class="n">j</span><span class="o">]))</span> <span class="o">||</span>
                    <span class="o">(</span><span class="n">j</span> <span class="o">&gt;</span> <span class="n">0</span> <span class="o">&amp;&amp;</span> <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span> <span class="o">-</span> <span class="n">1</span><span class="o">]))</span> <span class="o">||</span>
                    <span class="o">(</span><span class="n">j</span> <span class="o">&lt;</span> <span class="n">3</span> <span class="o">&amp;&amp;</span> <span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span><span class="o">].</span><span class="na">equals</span><span class="o">(</span><span class="n">cardMap</span><span class="o">[</span><span class="n">i</span><span class="o">][</span><span class="n">j</span> <span class="o">+</span> <span class="n">1</span><span class="o">])))</span> <span class="o">{</span>
                    <span class="n">complete</span> <span class="o">=</span> <span class="kc">false</span><span class="o">;</span>   <span class="c1">// 游戏未结束
</span><span class="c1"></span>                    <span class="k">break</span> <span class="n">ALL</span><span class="o">;</span>
                <span class="o">}</span>
            <span class="o">}</span>
        <span class="o">}</span>

        <span class="k">if</span><span class="o">(</span><span class="n">complete</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">new</span> <span class="n">AlertDialog</span><span class="o">.</span><span class="na">Builder</span><span class="o">(</span><span class="n">getContext</span><span class="o">()).</span><span class="na">setTitle</span><span class="o">(</span><span class="s">&#34;2048&#34;</span><span class="o">).</span><span class="na">setMessage</span><span class="o">(</span><span class="s">&#34;游戏结束&#34;</span><span class="o">).</span><span class="na">setPositiveButton</span><span class="o">(</span><span class="s">&#34;重新开始&#34;</span><span class="o">,</span>
                <span class="k">new</span> <span class="n">DialogInterface</span><span class="o">.</span><span class="na">OnClickListener</span><span class="o">()</span> <span class="o">{</span>
                <span class="nd">@Override</span>
                <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onClick</span><span class="o">(</span><span class="n">DialogInterface</span> <span class="n">dialog</span><span class="o">,</span> <span class="kt">int</span> <span class="n">which</span><span class="o">)</span> <span class="o">{</span>
                    <span class="n">startGame</span><span class="o">();</span>    <span class="c1">// 重新开始
</span><span class="c1"></span>                <span class="o">}</span>
            <span class="o">}).</span><span class="na">show</span><span class="o">();</span>
        <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>至此，游戏的基本框架都已经全部完成，我们将在下一节中介绍分数的保存以及界面的美化。</p>
]]></description></item><item><title>2048 游戏制作过程（Java 描述）：第三节、创建界面</title><link>https://example.com/2015/05/2048-%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bjava-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E4%B8%89%E8%8A%82%E5%88%9B%E5%BB%BA%E7%95%8C%E9%9D%A2/</link><pubDate>Thu, 14 May 2015 20:03:00 +0800</pubDate><author>作者</author><guid>https://example.com/2015/05/2048-%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bjava-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E4%B8%89%E8%8A%82%E5%88%9B%E5%BB%BA%E7%95%8C%E9%9D%A2/</guid><description><![CDATA[<p>首先，我们要使得我们的程序能够判断用户的手势，一共为上、下、左、右四种。在 GameView 类中添加如下代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">initGameView</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">setOnTouchListener</span><span class="o">(</span><span class="k">new</span> <span class="n">View</span><span class="o">.</span><span class="na">OnTouchListener</span><span class="o">()</span> <span class="o">{</span>
            <span class="nd">@Override</span>
            <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onTouch</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">,</span> <span class="n">MotionEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>

                <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">});</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>接下来，我们来分析一下如何进行手势判断。首先，用户的手势输入应该有两个数据，一个是按下的屏幕位置，一个是放开的屏幕位置。那么我们只需要计算横向和竖向坐标差的绝对值，绝对值较大的一个方向则是用户需求的方向。至于横向中的左右和竖向中的上下，我们可以通过按下和放开的位置的大小进行比较得出。</p>
<p>有了上面的分析，我们开始写代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">initGameView</span><span class="o">()</span> <span class="o">{</span>
        <span class="n">setOnTouchListener</span><span class="o">(</span><span class="k">new</span> <span class="n">View</span><span class="o">.</span><span class="na">OnTouchListener</span><span class="o">()</span> <span class="o">{</span>

            <span class="kd">private</span> <span class="kt">float</span> <span class="n">startX</span><span class="o">,</span> <span class="n">startY</span><span class="o">;</span>   <span class="c1">// 起始位置
</span><span class="c1"></span>            <span class="kd">private</span> <span class="kt">float</span> <span class="n">endX</span><span class="o">,</span> <span class="n">endY</span><span class="o">;</span>   <span class="c1">// 终了位置
</span><span class="c1"></span>            <span class="kd">private</span> <span class="kt">float</span> <span class="n">offsetX</span><span class="o">,</span> <span class="n">offsetY</span><span class="o">;</span> <span class="c1">// 偏移量
</span><span class="c1"></span>            <span class="nd">@Override</span>
            <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">onTouch</span><span class="o">(</span><span class="n">View</span> <span class="n">v</span><span class="o">,</span> <span class="n">MotionEvent</span> <span class="n">event</span><span class="o">)</span> <span class="o">{</span>
                
                <span class="k">switch</span><span class="o">(</span><span class="n">event</span><span class="o">.</span><span class="na">getAction</span><span class="o">())</span> <span class="o">{</span>
                    <span class="k">case</span> <span class="n">MotionEvent</span><span class="o">.</span><span class="na">ACTION_DOWN</span><span class="o">:</span>
                        <span class="n">startX</span> <span class="o">=</span> <span class="n">event</span><span class="o">.</span><span class="na">getX</span><span class="o">();</span>
                        <span class="n">startY</span> <span class="o">=</span> <span class="n">event</span><span class="o">.</span><span class="na">getY</span><span class="o">();</span>
                        <span class="k">break</span><span class="o">;</span>
                    <span class="k">case</span> <span class="n">MotionEvent</span><span class="o">.</span><span class="na">ACTION_UP</span><span class="o">:</span>
                        <span class="n">endX</span> <span class="o">=</span> <span class="n">event</span><span class="o">.</span><span class="na">getX</span><span class="o">();</span>
                        <span class="n">endY</span> <span class="o">=</span> <span class="n">event</span><span class="o">.</span><span class="na">getY</span><span class="o">();</span>

                        <span class="n">offsetX</span> <span class="o">=</span> <span class="n">endX</span> <span class="o">-</span> <span class="n">startX</span><span class="o">;</span>
                        <span class="n">offsetY</span> <span class="o">=</span> <span class="n">endY</span> <span class="o">-</span> <span class="n">startY</span><span class="o">;</span>

                        <span class="k">if</span><span class="o">(</span><span class="n">Math</span><span class="o">.</span><span class="na">abs</span><span class="o">(</span><span class="n">offsetX</span><span class="o">)</span> <span class="o">&gt;</span> <span class="n">Math</span><span class="o">.</span><span class="na">abs</span><span class="o">(</span><span class="n">offsetY</span><span class="o">))</span> <span class="o">{</span> <span class="c1">// 水平
</span><span class="c1"></span>                            <span class="k">if</span><span class="o">(</span><span class="n">offsetX</span> <span class="o">&lt;</span> <span class="o">-</span><span class="n">5</span><span class="o">)</span> <span class="o">{</span>
                                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Left&#34;</span><span class="o">);</span>
                            <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">offsetX</span> <span class="o">&gt;</span> <span class="n">5</span><span class="o">)</span> <span class="o">{</span>
                                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Right&#34;</span><span class="o">);</span>
                            <span class="o">}</span>
                        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span> <span class="c1">// 垂直
</span><span class="c1"></span>                            <span class="k">if</span><span class="o">(</span><span class="n">offsetX</span> <span class="o">&lt;</span> <span class="o">-</span><span class="n">5</span><span class="o">)</span> <span class="o">{</span>
                                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Up&#34;</span><span class="o">);</span>
                            <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">offsetX</span> <span class="o">&gt;</span> <span class="n">5</span><span class="o">)</span> <span class="o">{</span>
                                <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&#34;Down&#34;</span><span class="o">);</span>
                            <span class="o">}</span>
                        <span class="o">}</span>
                <span class="o">}</span>
                <span class="k">return</span> <span class="kc">false</span><span class="o">;</span>
            <span class="o">}</span>
        <span class="o">});</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>运行程序，进入调试界面，如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%89%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e7%95%8c%e9%9d%a2/game2048_3_03.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第三节、创建界面/game2048_3_03.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第三节、创建界面/game2048_3_03.png" data-sub-html="<h2>阶段性效果</h2>">
        
    </a><figcaption class="image-caption">阶段性效果</figcaption>
    </figure>
<p>在窗口中用鼠标左滑，查看 Android Studio 中右下角 Logcat 窗口中的输出信息如下：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%89%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e7%95%8c%e9%9d%a2/game2048_3_04.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第三节、创建界面/game2048_3_04.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第三节、创建界面/game2048_3_04.png" data-sub-html="<h2>方向判断</h2>">
        
    </a><figcaption class="image-caption">方向判断</figcaption>
    </figure>
<p>说明我们的触摸检测已经成功了，接下来我们将四条输出语句换成四个函数。如下图所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">                        <span class="k">if</span><span class="o">(</span><span class="n">Math</span><span class="o">.</span><span class="na">abs</span><span class="o">(</span><span class="n">offsetX</span><span class="o">)</span> <span class="o">&gt;</span> <span class="n">Math</span><span class="o">.</span><span class="na">abs</span><span class="o">(</span><span class="n">offsetY</span><span class="o">))</span> <span class="o">{</span> <span class="c1">// 水平
</span><span class="c1"></span>                            <span class="k">if</span><span class="o">(</span><span class="n">offsetX</span> <span class="o">&lt;</span> <span class="o">-</span><span class="n">5</span><span class="o">)</span> <span class="o">{</span>
                                <span class="n">MoveLeft</span><span class="o">();</span>
                            <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">offsetX</span> <span class="o">&gt;</span> <span class="n">5</span><span class="o">)</span> <span class="o">{</span>
                                <span class="n">MoveRight</span><span class="o">();</span>
                            <span class="o">}</span>
                        <span class="o">}</span> <span class="k">else</span> <span class="o">{</span> <span class="c1">// 垂直
</span><span class="c1"></span>                            <span class="k">if</span><span class="o">(</span><span class="n">offsetX</span> <span class="o">&lt;</span> <span class="o">-</span><span class="n">5</span><span class="o">)</span> <span class="o">{</span>
                                <span class="n">MoveUp</span><span class="o">();</span>
                            <span class="o">}</span> <span class="k">else</span> <span class="k">if</span><span class="o">(</span><span class="n">offsetX</span> <span class="o">&gt;</span> <span class="n">5</span><span class="o">)</span> <span class="o">{</span>
                                <span class="n">MoveDown</span><span class="o">();</span>
                            <span class="o">}</span>
                        <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>除此之外，我们还需要定义这四个函数，代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">MoveLeft</span><span class="o">()</span> <span class="o">{</span>
        
    <span class="o">}</span>

    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">MoveRight</span><span class="o">()</span> <span class="o">{</span>
        
    <span class="o">}</span>

    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">MoveUp</span><span class="o">()</span> <span class="o">{</span>
        
    <span class="o">}</span>

    <span class="kd">private</span> <span class="kt">void</span> <span class="n">MoveDown</span><span class="o">)</span> <span class="o">{</span>
        
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>至于其中的处理方法，我们将在后续的章节中介绍。至此，我们的 GameView 框架基本能完成了。</p>
<p>接下来，我们使用上一节中的方法，创建一个 Card 类（用来显示游戏中的小方块以及其上的数字），并且让它继承自 FrameLayout，同时添加构造函数。如下图所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">com.ivy.end.game2048</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">android.content.Context</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">android.widget.FrameLayout</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Card</span> <span class="kd">extends</span> <span class="n">FrameLayout</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="nf">Card</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span> <span class="n">context</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>此外，我们还需要创建几个私有成员变量，保存每张卡片上面的数字以及其它的一些信息：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">com.ivy.end.game2048</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">android.content.Context</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">android.widget.FrameLayout</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Card</span> <span class="kd">extends</span> <span class="n">FrameLayout</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="nf">Card</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span> <span class="n">context</span><span class="o">;</span>

        <span class="n">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span>   <span class="c1">// 初始化数字为 0
</span><span class="c1"></span>    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getNumber</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">number</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNumber</span><span class="o">(</span><span class="kt">int</span> <span class="n">number</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">number</span> <span class="o">=</span> <span class="n">number</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="kt">int</span> <span class="n">number</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>接下来，我们还需要定义一个变量，用来显示文字，这里我们选用 TextView，代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">com.ivy.end.game2048</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">android.content.Context</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">android.widget.FrameLayout</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">android.widget.TextView</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Card</span> <span class="kd">extends</span> <span class="n">FrameLayout</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="nf">Card</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span> <span class="n">context</span><span class="o">;</span>

        <span class="c1">// 初始化 tvNumber
</span><span class="c1"></span>        <span class="n">tvNumber</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TextView</span><span class="o">(</span><span class="n">getContext</span><span class="o">());</span>
        <span class="n">tvNumber</span><span class="o">.</span><span class="na">setTextSize</span><span class="o">(</span><span class="n">32</span><span class="o">);</span>

        <span class="c1">// 添加 tvNumber
</span><span class="c1"></span>        <span class="n">LayoutParams</span> <span class="n">lp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LayoutParams</span><span class="o">(-</span><span class="n">1</span><span class="o">,</span> <span class="o">-</span><span class="n">1</span><span class="o">);</span>
        <span class="n">addView</span><span class="o">(</span><span class="n">tvNumber</span><span class="o">,</span> <span class="n">lp</span><span class="o">);</span>

        <span class="n">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span>   <span class="c1">// 初始化数字为 0
</span><span class="c1"></span>    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getNumber</span><span class="o">()</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">number</span><span class="o">;</span>  <span class="c1">// 返回数字
</span><span class="c1"></span>    <span class="o">}</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">setNumber</span><span class="o">(</span><span class="kt">int</span> <span class="n">number</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">this</span><span class="o">.</span><span class="na">number</span> <span class="o">=</span> <span class="n">number</span><span class="o">;</span>   <span class="c1">// 设置数字
</span><span class="c1"></span>
        <span class="n">tvNumber</span><span class="o">.</span><span class="na">setText</span><span class="o">(</span><span class="n">number</span> <span class="o">+</span> <span class="s">&#34;&#34;</span><span class="o">);</span>  <span class="c1">// 设置 tvNumber 文本
</span><span class="c1"></span>    <span class="o">}</span>

    <span class="kd">private</span> <span class="kt">int</span> <span class="n">number</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="c1">// 保存数字
</span><span class="c1"></span>    <span class="kd">private</span> <span class="n">TextView</span> <span class="n">tvNumber</span><span class="o">;</span>  <span class="c1">// 显示数字
</span><span class="c1"></span><span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>接下去我们需要添加一些函数用来判断两个 Card 的值是否相等，以方便后期的折叠操作：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">equals</span><span class="o">(</span><span class="n">Card</span> <span class="n">o</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="n">getNumber</span><span class="o">()</span> <span class="o">==</span> <span class="n">o</span><span class="o">.</span><span class="na">getNumber</span><span class="o">();</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>至此，我们游戏的基本元素已经基本完成，接下来我们需要进行组装。首先，我们需要获得卡片的宽高，这是由于不同手机分辨率不同，为了适配各类型的手机。在 GameView 中添加如下代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onSizeChanged</span><span class="o">(</span><span class="kt">int</span> <span class="n">w</span><span class="o">,</span> <span class="kt">int</span> <span class="n">h</span><span class="o">,</span> <span class="kt">int</span> <span class="n">oldw</span><span class="o">,</span> <span class="kt">int</span> <span class="n">oldh</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">.</span><span class="na">onSizeChange</span><span class="o">(</span><span class="n">w</span><span class="o">,</span> <span class="n">h</span><span class="o">,</span> <span class="n">oldw</span><span class="o">,</span> <span class="n">oldh</span><span class="o">);</span>

        <span class="kt">int</span> <span class="n">cardSize</span> <span class="o">=</span> <span class="o">(</span><span class="n">Math</span><span class="o">.</span><span class="na">min</span><span class="o">(</span><span class="n">w</span><span class="o">,</span> <span class="n">h</span><span class="o">)</span> <span class="o">-</span><span class="n">10</span><span class="o">)</span> <span class="o">/</span> <span class="n">4</span><span class="o">;</span>    <span class="c1">// 计算卡牌尺寸
</span><span class="c1"></span>        <span class="n">addCards</span><span class="o">(</span><span class="n">cardSize</span><span class="o">);</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>除此之外，我们还需要添加一个 addCards 函数，将卡片添加进来：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">addCards</span><span class="o">(</span><span class="kt">int</span> <span class="n">cardSize</span><span class="o">)</span> <span class="o">{</span>
        <span class="n">Card</span> <span class="n">card</span><span class="o">;</span>
        <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
        <span class="o">{</span>
            <span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="n">0</span><span class="o">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">4</span><span class="o">;</span> <span class="n">j</span><span class="o">++)</span>
            <span class="o">{</span>
                <span class="n">card</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Card</span><span class="o">(</span><span class="n">getContext</span><span class="o">());</span>
                <span class="n">card</span><span class="o">.</span><span class="na">setNumber</span><span class="o">(</span><span class="n">2</span><span class="o">);</span>
                <span class="n">addView</span><span class="o">(</span><span class="n">card</span><span class="o">,</span> <span class="n">cardSzie</span><span class="o">,</span> <span class="n">cardSize</span><span class="o">);</span>
            <span class="o">}</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>接着，我们需要将这个 GameView 调整为每行四列，在 initGameView 中添加如下代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">initGameView</span><span class="o">()</span> <span class="o">{</span>
        
        <span class="n">setCOlumnCount</span><span class="o">(</span><span class="n">4</span><span class="o">);</span>  <span class="c1">// 设置列数
</span></code></pre></td></tr></table>
</div>
</div><p>此时，我们可以运行来看一下效果：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%89%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e7%95%8c%e9%9d%a2/game2048_3_14.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第三节、创建界面/game2048_3_14.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第三节、创建界面/game2048_3_14.png" data-sub-html="<h2>阶段性效果</h2>">
        
    </a><figcaption class="image-caption">阶段性效果</figcaption>
    </figure>
<p>至此，我们已经完成了加入卡片的功能，接下来，我们需要使得卡牌居中放置，切换到 Card 类，修改构造函数代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Card</span> <span class="kd">extends</span> <span class="n">FrameLayout</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="nf">Card</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span> <span class="n">context</span><span class="o">;</span>

        <span class="c1">// 初始化 tvNumber
</span><span class="c1"></span>        <span class="n">tvNumber</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TextView</span><span class="o">(</span><span class="n">getContext</span><span class="o">());</span>
        <span class="n">tvNumber</span><span class="o">.</span><span class="na">setTextSize</span><span class="o">(</span><span class="n">32</span><span class="o">);</span>
        <span class="n">tvNumber</span><span class="o">.</span><span class="na">setGravity</span><span class="o">(</span><span class="n">Gravity</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>    <span class="c1">// 居中
</span><span class="c1"></span>
        <span class="c1">// 添加 tvNumber
</span><span class="c1"></span>        <span class="n">LayoutParams</span> <span class="n">lp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LayoutParams</span><span class="o">(-</span><span class="n">1</span><span class="o">,</span> <span class="o">-</span><span class="n">1</span><span class="o">);</span>
        <span class="n">addView</span><span class="o">(</span><span class="n">tvNumber</span><span class="o">,</span> <span class="n">lp</span><span class="o">);</span>

        <span class="n">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span>   <span class="c1">// 初始化数字为 0
</span><span class="c1"></span>    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>再测试一下，结果如下：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%89%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e7%95%8c%e9%9d%a2/game2048_3_16.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第三节、创建界面/game2048_3_16.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第三节、创建界面/game2048_3_16.png" data-sub-html="<h2>阶段性效果</h2>">
        
    </a><figcaption class="image-caption">阶段性效果</figcaption>
    </figure>
<p>接下来，我们需要添加背景，首先在 GameView 的 initGameView 中添加如下代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">initGameView</span><span class="o">()</span> <span class="o">{</span>
        
        <span class="n">setCOlumnCount</span><span class="o">(</span><span class="n">4</span><span class="o">);</span>  <span class="c1">// 设置列数
</span><span class="c1"></span>
        <span class="n">setBackgroundColor</span><span class="o">(</span><span class="n">0xFFBBADA0</span><span class="o">);</span> <span class="c1">// 设置背景
</span></code></pre></td></tr></table>
</div>
</div><p>然后，我们为卡片设置背景，切换到 Card 的构造函数，添加如下代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Card</span> <span class="kd">extends</span> <span class="n">FrameLayout</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="nf">Card</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span> <span class="n">context</span><span class="o">;</span>

        <span class="c1">// 初始化 tvNumber
</span><span class="c1"></span>        <span class="n">tvNumber</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TextView</span><span class="o">(</span><span class="n">getContext</span><span class="o">());</span>
        <span class="n">tvNumber</span><span class="o">.</span><span class="na">setTextSize</span><span class="o">(</span><span class="n">32</span><span class="o">);</span>
        <span class="n">tvNumber</span><span class="o">.</span><span class="na">setBackgroundColor</span><span class="o">(</span><span class="n">0x33FFFFFF</span><span class="o">);</span> <span class="c1">// 设置背景
</span><span class="c1"></span>        <span class="n">tvNumber</span><span class="o">.</span><span class="na">setGravity</span><span class="o">(</span><span class="n">Gravity</span><span class="o">.</span><span class="na">CENTER</span><span class="o">);</span>    <span class="c1">// 居中
</span><span class="c1"></span>
        <span class="c1">// 添加 tvNumber
</span><span class="c1"></span>        <span class="n">LayoutParams</span> <span class="n">lp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LayoutParams</span><span class="o">(-</span><span class="n">1</span><span class="o">,</span> <span class="o">-</span><span class="n">1</span><span class="o">);</span>
        <span class="n">addView</span><span class="o">(</span><span class="n">tvNumber</span><span class="o">,</span> <span class="n">lp</span><span class="o">);</span>

        <span class="n">setNumber</span><span class="o">(</span><span class="n">0</span><span class="o">);</span>   <span class="c1">// 初始化数字为 0
</span><span class="c1"></span>    <span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>运行结果如下：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%89%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e7%95%8c%e9%9d%a2/game2048_3_19.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第三节、创建界面/game2048_3_19.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第三节、创建界面/game2048_3_19.png" data-sub-html="<h2>阶段性效果</h2>">
        
    </a><figcaption class="image-caption">阶段性效果</figcaption>
    </figure>
<p>显示效果如上图，我们发现卡牌直接没有空格，看起来非常的紧凑，我们可以在 Card 类中这样修改代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java">        <span class="c1">// 添加 tvNumber
</span><span class="c1"></span>        <span class="n">LayoutParams</span> <span class="n">lp</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LayoutParams</span><span class="o">(-</span><span class="n">1</span><span class="o">,</span> <span class="o">-</span><span class="n">1</span><span class="o">);</span>
        <span class="n">lp</span><span class="o">.</span><span class="na">setMargins</span><span class="o">(</span><span class="n">10</span><span class="o">,</span> <span class="n">10</span><span class="o">,</span> <span class="n">0</span><span class="o">,</span> <span class="n">0</span><span class="o">);</span>    <span class="c1">// 设置偏移量
</span><span class="c1"></span>        <span class="n">addView</span><span class="o">(</span><span class="n">tvNumber</span><span class="o">,</span> <span class="n">lp</span><span class="o">);</span>
</code></pre></td></tr></table>
</div>
</div><p>再次运行程序，如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%89%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e7%95%8c%e9%9d%a2/game2048_3_21.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第三节、创建界面/game2048_3_21.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第三节、创建界面/game2048_3_21.png" data-sub-html="<h2>阶段性效果</h2>">
        
    </a><figcaption class="image-caption">阶段性效果</figcaption>
    </figure>
<p>在下一节中，我们将介绍游戏的内部逻辑。</p>
]]></description></item><item><title>2048 游戏制作过程（Java 描述）：第二节、基本设置</title><link>https://example.com/2015/05/2048-%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bjava-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E4%BA%8C%E8%8A%82%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/</link><pubDate>Thu, 14 May 2015 17:10:00 +0800</pubDate><author>作者</author><guid>https://example.com/2015/05/2048-%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bjava-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E4%BA%8C%E8%8A%82%E5%9F%BA%E6%9C%AC%E8%AE%BE%E7%BD%AE/</guid><description><![CDATA[<p>首先，我们需要修改一下应用的图标。准备一个 png 格式的图标文件。如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%8c%e8%8a%82%e3%80%81%e5%9f%ba%e6%9c%ac%e8%ae%be%e7%bd%ae/game2048_2_01.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第二节、基本设置/game2048_2_01.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第二节、基本设置/game2048_2_01.png" data-sub-html="<h2>App 图标</h2>">
        
    </a><figcaption class="image-caption">App 图标</figcaption>
    </figure>
<p>接下来，找到上一节中保存项目的位置，依次展开文件夹中的 2048/Game2048/app/src/main/res 目录，如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%8c%e8%8a%82%e3%80%81%e5%9f%ba%e6%9c%ac%e8%ae%be%e7%bd%ae/game2048_2_02.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第二节、基本设置/game2048_2_02.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第二节、基本设置/game2048_2_02.png" data-sub-html="<h2>App 图标</h2>">
        
    </a><figcaption class="image-caption">App 图标</figcaption>
    </figure>
<p>分别将刚才制作完成的图标文件更改名字为 ic_launcher.png，并且修改尺寸为 144×144、96×96、72×72、48×48，分别放入 drawable-xxhdip、drawable-xhdpi、drawable-hdpi、drawble-mdpi 文件夹覆盖其中的图标文件。需要用到这么多尺寸的图片，是由于 Android 应用程序需要兼容不同的客户端而引起的。接下来我们打开 Genymotion，并且运行我们的应用，可以发现图标已经被修改：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%8c%e8%8a%82%e3%80%81%e5%9f%ba%e6%9c%ac%e8%ae%be%e7%bd%ae/game2048_2_03.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第二节、基本设置/game2048_2_03.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第二节、基本设置/game2048_2_03.png" data-sub-html="<h2>App 图标</h2>">
        
    </a><figcaption class="image-caption">App 图标</figcaption>
    </figure>
<p>接下来，我们修改游戏显示的名称，我们希望只显示数字“2048”，切换到 Android Studio 界面，在左侧找到 values/strings.xml，双击打开该文件，将其中的 app_name 属性修改为 2048 即可，如下图所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-xml" data-lang="xml">    <span class="cp">&lt;?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34; ?&gt;</span>
    <span class="nt">&lt;resources&gt;</span>

        <span class="nt">&lt;string</span> <span class="na">name=</span><span class="s">&#34;app_name&#34;</span><span class="nt">&gt;</span>2048<span class="nt">&lt;/string&gt;</span>
        <span class="nt">&lt;string</span> <span class="na">name=</span><span class="s">&#34;hello_world&#34;</span><span class="nt">&gt;</span>Hello world!<span class="nt">&lt;/string&gt;</span>
        <span class="nt">&lt;string</span> <span class="na">name=</span><span class="s">&#34;action_settings&#34;</span><span class="nt">&gt;</span>Settings<span class="nt">&lt;/string&gt;</span>
    
    <span class="nt">&lt;/resources&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>我们再次运行程序，即可发现应用名称已经被修改为“2048”，如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%8c%e8%8a%82%e3%80%81%e5%9f%ba%e6%9c%ac%e8%ae%be%e7%bd%ae/game2048_2_03.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第二节、基本设置/game2048_2_03.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第二节、基本设置/game2048_2_03.png" data-sub-html="<h2>App 名称</h2>">
        
    </a><figcaption class="image-caption">App 名称</figcaption>
    </figure>
<p>至此，我们已经完成了对该应用最基本的配置，接下来，我们需要创建最基本的游戏界面。</p>
<p>首先，打开 res/layout/activity_main.xml 文件，将右下角的 Design/Text 选项卡切换到 Text 界面，并且输入以下代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-xml" data-lang="xml"><span class="err">&lt;</span>?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;&gt;
<span class="nt">&lt;LinearLayout</span> <span class="na">xmlns:android=</span><span class="s">&#34;http://schemas.android.com/apk/res/android&#34;</span>
    <span class="na">android:orientation=</span><span class="s">&#34;vertical&#34;</span>
    <span class="na">android:layout_width=</span><span class="s">&#34;match_parent&#34;</span>
    <span class="na">android:layout_height=</span><span class="s">&#34;match_parent&#34;</span><span class="nt">&gt;</span>
    
    <span class="nt">&lt;LinearLayout</span>
        <span class="na">android:layout_width=</span><span class="s">&#34;match_parent&#34;</span>
        <span class="na">android:layout_height=</span><span class="s">&#34;match_parent&#34;</span>
        <span class="na">android:orientation=</span><span class="s">&#34;horizontal&#34;</span><span class="nt">&gt;</span>

        <span class="nt">&lt;TextView</span>
            <span class="na">android:layout_width=</span><span class="s">&#34;wrap_content&#34;</span>
            <span class="na">android:layout_height=</span><span class="s">&#34;wrap_content&#34;</span>
            <span class="na">android:text=</span><span class="s">&#34;Score&#34;</span> <span class="nt">/&gt;</span>

        <span class="nt">&lt;TextView</span>
            <span class="na">android:id=</span><span class="s">&#34;@+id/tvScore&#34;</span>
            <span class="na">android:layout_width=</span><span class="s">&#34;wrap_content&#34;</span>
            <span class="na">android:layout_height=</span><span class="s">&#34;wrap_content&#34;</span> <span class="nt">/&gt;</span>
        
    <span class="nt">&lt;/LinearLayout&gt;</span>

    <span class="nt">&lt;GridLayout</span>
        <span class="na">android:id=</span><span class="s">&#34;@+id/gameView&#34;</span>
        <span class="na">android:layout_width=</span><span class="s">&#34;fill_parent&#34;</span>
        <span class="na">android:layout_height=</span><span class="s">&#34;0dp&#34;</span>
        <span class="na">android:layout_weight=</span><span class="s">&#34;1&#34;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;GridLayout&gt;</span>

<span class="nt">&lt;/LinearLayout&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>我们看到在 andorid:text=&ldquo;Score&rdquo; 这段代码被深黄色包裹了起来，说明有一些修改建议，单击到上面，按下 Alt + Enter，在弹出的对话框中选择 Extract string resource，弹出下图的对话框，在 Resource Name 中输入 score，单击 OK，如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%8c%e8%8a%82%e3%80%81%e5%9f%ba%e6%9c%ac%e8%ae%be%e7%bd%ae/game2048_2_07.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第二节、基本设置/game2048_2_07.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第二节、基本设置/game2048_2_07.png" data-sub-html="<h2>新建字符串</h2>">
        
    </a><figcaption class="image-caption">新建字符串</figcaption>
    </figure>
<p>切换到 Design 界面，可以看到，刚才定义的 Score 标签已经显示了出来，如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%8c%e8%8a%82%e3%80%81%e5%9f%ba%e6%9c%ac%e8%ae%be%e7%bd%ae/game2048_2_08.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第二节、基本设置/game2048_2_08.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第二节、基本设置/game2048_2_08.png" data-sub-html="<h2>Score 标签</h2>">
        
    </a><figcaption class="image-caption">Score 标签</figcaption>
    </figure>
<p>接下来，我们需要新建一个 GameView 类来保存游戏的布局，并使得它继承自 GridLayout。</p>
<p>首先，我们将 res 文件夹下的 layout 文件夹删除，因为我们需要自己绘制游戏界面，因此不需要用到 xml 布局文件。接下来我们需要创建一个新的类，用来显示当前的游戏界面。右击 com.ivy.end.game2048 文件夹，选择 New，单击 Java Class，输入类名 GameView，让 GameView 类继承自 GridLayout 类，并且定义它的构造函数，如下图所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">com.ivy.end.game2048</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">...</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">GameView</span> <span class="kd">extends</span> <span class="n">GridLayout</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="nf">GameView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nf">GameView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">AttributeSet</span> <span class="n">attrs</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">attrs</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nf">GameView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">AttributeSet</span> <span class="n">attrs</span><span class="o">,</span> <span class="kt">int</span> <span class="n">defStyle</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">attrs</span><span class="o">,</span> <span class="n">defStyle</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>接下来，我们需要定义一个初始化函数 initGameView，并且使得通过这三个构造函数进入类中都执行初始化函数，修改代码如下图所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">com.ivy.end.game2048</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">...</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">GameView</span> <span class="kd">extends</span> <span class="n">GridLayout</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="nf">GameView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nf">GameView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">AttributeSet</span> <span class="n">attrs</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">attrs</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="nf">GameView</span><span class="o">(</span><span class="n">Context</span> <span class="n">context</span><span class="o">,</span> <span class="n">AttributeSet</span> <span class="n">attrs</span><span class="o">,</span> <span class="kt">int</span> <span class="n">defStyle</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">attrs</span><span class="o">,</span> <span class="n">defStyle</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">initGameView</span><span class="o">()</span> <span class="o">{</span>

    <span class="o">}</span>
<span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>接下来，我们需要将这个类绑定到刚才的 GridLayout 上，切换到 activity_main.xml 文件的 Text 窗口，将 GridLayout 部分代码修改如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-xml" data-lang="xml">    <span class="nt">&lt;com.ivy.end.game2048.GameView</span>
        <span class="na">android:id=</span><span class="s">&#34;@+id/gameView&#34;</span>
        <span class="na">android:layout_width=</span><span class="s">&#34;fill_parent&#34;</span>
        <span class="na">android:layout_height=</span><span class="s">&#34;0dp&#34;</span>
        <span class="na">android:layout_weight=</span><span class="s">&#34;1&#34;</span><span class="nt">&gt;</span>
    <span class="nt">&lt;/com.ivy.end.game2048.GameView&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>至此，我们的布局代码基本完成。运行以后的界面如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%8c%e8%8a%82%e3%80%81%e5%9f%ba%e6%9c%ac%e8%ae%be%e7%bd%ae/game2048_2_12.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第二节、基本设置/game2048_2_12.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第二节、基本设置/game2048_2_12.png" data-sub-html="<h2>运行效果</h2>">
        
    </a><figcaption class="image-caption">运行效果</figcaption>
    </figure>
<p>下一节我们将介绍GameView的具体实现。</p>
]]></description></item><item><title>2048 游戏制作过程（Java 描述）：第一节、创建项目</title><link>https://example.com/2015/05/2048-%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bjava-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E4%B8%80%E8%8A%82%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE/</link><pubDate>Fri, 08 May 2015 21:42:00 +0800</pubDate><author>作者</author><guid>https://example.com/2015/05/2048-%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bjava-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E4%B8%80%E8%8A%82%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE/</guid><description><![CDATA[<p>自从关于扫雷游戏制作过程的文章发布后，有同学让我写一些关于移动开发的文章，并且建议以雷电这款游戏为例。然而考虑到该项目对于初学者来说代码量较大，所以暂且不涉及这部分，转而使用较为简单的 2048 游戏作为例子，可能对于初学者来说更容易上手，并且也更容易自己动手实现出来。</p>
<p>本项目已根据文章进度托管在 GitHub 上：<a href="https://github.com/Ivy-End/2048" target="_blank" rel="noopener noreffer">2048</a>，读者可以自行查看。</p>
<p>由于没有 Mac，因此只能介绍关于 Android 平台相关的开发知识。然而进行 Android 开发之前，需要搭建 Android 开发环境，这一步比较有难度的，主要是各个软件的配置较为麻烦，使得很多初学者望而却步。目前主流的 IDE 有 Eclipse 以及 Android Studio，本文将以 Android Studio 作为集成开发环境，对 2048 游戏的开发过程进行详细的介绍。</p>
<p>然而 Android Studio 的配置并不如 Visual Studio 一样简单，下面将简单介绍一下 Android Studio 集成开发环境的部署，具体的细节步骤读者可以查阅相关资料。</p>
<ol>
<li>安装 JDK，根据自己的操作系统选择合适的 JDK 版本，我们常用的是 Windows x64 版本；</li>
<li>安装 Andorid Studio；</li>
<li>启动 Android Studio，配置 Gradle，该部分较为繁琐，需要自行下载对应版本的 Gradle 包，读者可以参考相关资料；</li>
<li>（可选）安装 Genymotion，也可以使用 Android Studio 默认的模拟器，但是速度较慢。</li>
</ol>
<p>至此，假设读者已经配置完成了 Android 开发环境并且能够正常运行了。接下来，我们进行 2048 游戏项目的创建。首先打开 Android Studio，弹出如下图所示的界面：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%80%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae/game2048_1_01.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_01.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_01.png" data-sub-html="<h2>Android Studio</h2>">
        
    </a><figcaption class="image-caption">Android Studio</figcaption>
    </figure>
<p>单击 Start a new Android Studio project 创建一个新的 Android Studio 项目，弹出如下界面：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%80%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae/game2048_1_02.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_02.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_02.png" data-sub-html="<h2>Android Studio 创建项目</h2>">
        
    </a><figcaption class="image-caption">Android Studio 创建项目</figcaption>
    </figure>
<p>这里需要填写三个内容：</p>
<ul>
<li>Application name，项目名称，这里我们填写&quot;Game2048&quot;；</li>
<li>Company Domain，开发者信息，常小数点分割每一个部分，读者可以修改这部分的内容为自己的信息；</li>
<li>Project location，项目地址，选择一个用以保存项目文件的位置。</li>
</ul>
<p>单击 Next，进入下一步：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%80%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae/game2048_1_03.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_03.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_03.png" data-sub-html="<h2>Android Studio 创建项目</h2>">
        
    </a><figcaption class="image-caption">Android Studio 创建项目</figcaption>
    </figure>
<p>这里需要我们选择该项目的使用平台，我们选择默认的 Phone and Tablet，其中的 Minimum SDK 表示所兼容的最低 API 版本，我们保持默认。单击 Next，进入下一步：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%80%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae/game2048_1_04.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_04.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_04.png" data-sub-html="<h2>Android Studio 创建项目</h2>">
        
    </a><figcaption class="image-caption">Android Studio 创建项目</figcaption>
    </figure>
<p>接下来需要选择应用的初始界面，由于我们的界面需要自己开发，所以这里不需要进行修改，直接默认即可。单击 Next，进入下一步：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%80%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae/game2048_1_05.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_05.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_05.png" data-sub-html="<h2>Android Studio 创建项目</h2>">
        
    </a><figcaption class="image-caption">Android Studio 创建项目</figcaption>
    </figure>
<p>这里需要我们对上一步默认选择的 Activity 进行一些属性的填写，保持默认，单击 Finish，完成项目的创建，稍作等待后，项目已经新建完成：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%80%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae/game2048_1_06.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_06.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_06.png" data-sub-html="<h2>Android Studio 项目创建完毕</h2>">
        
    </a><figcaption class="image-caption">Android Studio 项目创建完毕</figcaption>
    </figure>
<p>我们首先打开 Genymotion，界面如下：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%80%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae/game2048_1_07.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_07.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_07.png" data-sub-html="<h2>Genymotion</h2>">
        
    </a><figcaption class="image-caption">Genymotion</figcaption>
    </figure>
<p>单击 Start 按钮，启动 Android 模拟器，界面如下：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%80%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae/game2048_1_08.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_08.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_08.png" data-sub-html="<h2>Genymotion Android 模拟器</h2>">
        
    </a><figcaption class="image-caption">Genymotion Android 模拟器</figcaption>
    </figure>
<p>若一开始打开时显示为横屏模式，只需要单击右侧的旋转屏幕按钮即可切换到竖屏模式。</p>
<p>接下来，我们切换到 Android Studio 中，选择 Run 菜单项中的 Run &lsquo;app&rsquo;，也可以直接按工具栏中的快捷按钮，弹出如下的对话框：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%80%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae/game2048_1_09.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_09.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_09.png" data-sub-html="<h2>运行 Android App</h2>">
        
    </a><figcaption class="image-caption">运行 Android App</figcaption>
    </figure>
<p>如果我们的 Genymotion 模拟器打开的话，Android Studio 会自动选择它作为默认的调试设备，这里我们直接单击 OK 即可，接着解锁模拟器中的 Android 系统，稍作等待，可以看到运行的 Android 应用：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%80%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae/game2048_1_10.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_10.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_10.png" data-sub-html="<h2>运行 Android App</h2>">
        
    </a><figcaption class="image-caption">运行 Android App</figcaption>
    </figure>
<p>接下来，我们需要将它的标题栏去掉。切换到 Android Studio 界面，双击打开左侧的 app/manifests 文件夹下的 AndroidManifests.xml 文件，修改高亮行代码如下图所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-xml" data-lang="xml"><span class="err">&lt;</span>?xml version=&#34;1.0&#34; encoding=&#34;utf-8&#34;&gt;
<span class="nt">&lt;manifest</span> <span class="na">xmlns:android=</span><span class="s">&#34;http://schemas.android.com/apk/res/android&#34;</span>
    <span class="na">package=</span><span class="s">&#34;com.ivy.end.game2048&#34;</span> <span class="nt">&gt;</span>

    <span class="nt">&lt;application</span>
        <span class="na">android:allowBackup=</span><span class="s">&#34;true&#34;</span>
        <span class="na">android:icon=</span><span class="s">&#34;@drawable/ic_launcher&#34;</span>
        <span class="na">android:label=</span><span class="s">&#34;Game2048&#34;</span>
        <span class="na">android:theme=</span><span class="s">&#34;@style/Theme.Appcompat.Light.NoActionBar&#34;</span> <span class="nt">&gt;</span>
        <span class="nt">&lt;activity</span>
            <span class="na">android:name=</span><span class="s">&#34;.MainActivity&#34;</span>
            <span class="na">android:label=</span><span class="s">&#34;Game2048&#34;</span><span class="nt">&gt;</span>
            <span class="nt">&lt;intent-filter&gt;</span>
                <span class="nt">&lt;action</span> <span class="na">android:name=</span><span class="s">&#34;android.intent.action.MAIN&#34;</span> <span class="nt">/&gt;</span>

                <span class="nt">&lt;category</span> <span class="na">android:name=</span><span class="s">&#34;android:intent:category.LAUNCHER&#34;</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;/intent-filter&gt;</span>
        <span class="nt">&lt;/activity&gt;</span>
    <span class="nt">&lt;/application&gt;</span>
<span class="nt">&lt;/manifest&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>接下来找到左侧的 app/res/menu 文件夹下的 menu_main.xml，右击 Delete 将其删除，在弹出的对话框中勾选 Safe delete (with usage search) 以及 Search  in comments and strings 这两个复选框，如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%80%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae/game2048_1_12.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_12.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_12.png" data-sub-html="<h2>删除文件</h2>">
        
    </a><figcaption class="image-caption">删除文件</figcaption>
    </figure>
<p>程序显示找到了引用项目，因为我们在主界面中调用了这个菜单，否则不会显示这个菜单。我们单击 Delete Anyway：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%80%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae/game2048_1_13.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_13.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_13.png" data-sub-html="<h2>删除文件</h2>">
        
    </a><figcaption class="image-caption">删除文件</figcaption>
    </figure>
<p>接下来，双击打开 app/java/com.ivy.end.game2048 文件夹（并非 com.ivy.end.game2048(androidTest)）下的 MainActiviy 文件，将其中多余的代码（即刚才检测到调用了菜单的部分）全部删除，最终结果如下图所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-java" data-lang="java"><span class="kn">package</span> <span class="nn">com.ivy.end.game2048</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">...</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainActivity</span> <span class="kd">extends</span> <span class="n">ActionBarActivity</span> <span class="o">{</span>

    <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">(</span><span class="n">Bundle</span> <span class="n">savedInstanceState</span><span class="o">)</span> <span class="o">{</span>
        <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">(</span><span class="n">savedInstanceState</span><span class="o">);</span>
        <span class="n">setContentView</span><span class="o">(</span><span class="n">R</span><span class="o">.</span><span class="na">layout</span><span class="o">.</span><span class="na">activity_main</span><span class="o">);</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></td></tr></table>
</div>
</div><p>此时，再次运行程序，即可看到这样的效果：</p>
<figure><a class="lightgallery" href="/images/2015/2048%20%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88Java%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%80%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae/game2048_1_15.png" title="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_15.png" data-thumbnail="/images/2015/2048 游戏制作过程（Java 描述）：第一节、创建项目/game2048_1_15.png" data-sub-html="<h2>运行效果</h2>">
        
    </a><figcaption class="image-caption">运行效果</figcaption>
    </figure>
<p>下一节将介绍修改 App 的应用图标以及名称，并且进行最基本的界面布局。</p>
]]></description></item><item><title>扫雷游戏制作过程（CSharp 描述）：第八节、整体完善</title><link>https://example.com/2015/05/%E6%89%AB%E9%9B%B7%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bcsharp-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E5%85%AB%E8%8A%82%E6%95%B4%E4%BD%93%E5%AE%8C%E5%96%84/</link><pubDate>Sat, 02 May 2015 11:12:00 +0800</pubDate><author>作者</author><guid>https://example.com/2015/05/%E6%89%AB%E9%9B%B7%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bcsharp-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E5%85%AB%E8%8A%82%E6%95%B4%E4%BD%93%E5%AE%8C%E5%96%84/</guid><description><![CDATA[<p>这一节我们将介绍结束游戏的方法，以及一些整体方面的完善。首先考虑失败的情况，它会将所有的地雷都显示出来。我们新建一个 GameLost 函数：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">    <span class="k">private</span> <span class="k">void</span> <span class="n">GameLost</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span><span class="p">&lt;=</span> <span class="n">nWidth</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
        <span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">j</span><span class="p">&lt;=</span> <span class="n">nHeight</span><span class="p">;</span> <span class="n">j</span><span class="p">++)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="p">-</span><span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span> <span class="p">||</span> <span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">))</span>   <span class="c1">// 未点开或者标记为问号的雷
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>   <span class="c1">// 点开该地雷
</span><span class="c1"></span>                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>在游戏结束的地方调用 GameLost 函数，因为我们上一节中讲述的游戏结束都是失败的情况：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">                        <span class="k">if</span><span class="p">(</span><span class="n">nFlagCnt</span> <span class="p">==</span> <span class="n">nSysCnt</span> <span class="p">||</span> <span class="n">nFlagCnt</span> <span class="p">+</span> <span class="n">nDoubtCnt</span> <span class="p">==</span> <span class="n">nSysCnt</span><span class="p">)</span> <span class="c1">// 打开九宫格
</span><span class="c1"></span>                        <span class="p">{</span>
                            <span class="kt">bool</span> <span class="n">bFlag</span> <span class="p">=</span> <span class="n">OpenMine</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">);</span>
                            <span class="k">if</span><span class="p">(!</span><span class="n">bFlag</span><span class="p">)</span>  <span class="c1">// 周围有地雷
</span><span class="c1"></span>                            <span class="p">{</span>
                                <span class="c1">// 结束游戏
</span><span class="c1"></span>                                <span class="n">GameLost</span><span class="p">();</span>
                            <span class="p">}</span>
                        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">                <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">!=</span> <span class="p">-</span><span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="n">dfs</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">);</span>
                <span class="p">}</span>
                <span class="k">else</span>
                <span class="p">{</span>
                    <span class="c1">// 地雷，游戏结束
</span><span class="c1"></span>                    <span class="n">GameLost</span><span class="p">();</span>
                <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>我们发现游戏结束的时候，虽然所有的格子都打开了，但是并没有显示出地雷的图标，我们将地雷的图标调整为 20×20，并且按照上一节的方法将它将入到 Resources.resx 文件中。同时修改 PaintGame 函数点开部分的代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">                    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">1</span><span class="p">)</span> <span class="c1">// 点开
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="c1">// 绘制背景
</span><span class="c1"></span>                        <span class="k">if</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">==</span> <span class="n">i</span> <span class="p">&amp;&amp;</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span> <span class="p">==</span> <span class="n">j</span><span class="p">)</span>
                        <span class="p">{</span>
                            <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">FromArgb</span><span class="p">(</span><span class="m">100</span><span class="p">,</span> <span class="n">Color</span><span class="p">.</span><span class="n">LightGray</span><span class="p">)),</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>
                        <span class="p">}</span>
                        <span class="k">else</span>
                        <span class="p">{</span>
                        <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">LightGray</span><span class="p">,</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>
                        <span class="p">}</span>
                        <span class="c1">// 绘制数字
</span><span class="c1"></span>                        <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">!=</span> <span class="m">0</span><span class="p">)</span>
                        <span class="p">{</span>
                            <span class="n">Brush</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">Blue</span><span class="p">);</span>   <span class="c1">// 定义钢笔
</span><span class="c1"></span>                            <span class="c1">// 各个地雷数目的颜色
</span><span class="c1"></span>                            <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">2</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">Green</span><span class="p">);</span> <span class="p">}</span>
                            <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">Red</span><span class="p">);</span> <span class="p">}</span>
                            <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">4</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">DarkBlue</span><span class="p">);</span> <span class="p">}</span>
                            <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">5</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">DarkRed</span><span class="p">);</span> <span class="p">}</span>
                            <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">6</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">DarkSeaGreen</span><span class="p">);</span> <span class="p">}</span>
                            <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">7</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">Black</span><span class="p">);</span> <span class="p">}</span>
                            <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">8</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">DarkGray</span><span class="p">);</span> <span class="p">}</span>
                            <span class="n">SizeF</span> <span class="n">Size</span> <span class="p">=</span> <span class="n">g</span><span class="p">.</span><span class="n">MeasureString</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">].</span><span class="n">ToString</span><span class="p">(),</span> <span class="k">new</span> <span class="n">Font</span><span class="p">(</span><span class="s">&#34;Consolas&#34;</span><span class="p">,</span> <span class="m">16</span><span class="p">));</span>
                            <span class="n">g</span><span class="p">.</span><span class="n">DrawString</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">].</span><span class="n">ToString</span><span class="p">(),</span> <span class="k">new</span> <span class="n">Font</span><span class="p">(</span><span class="s">&#34;Consolas&#34;</span><span class="p">,</span> <span class="m">16</span><span class="p">),</span> <span class="n">DrawBrush</span><span class="p">,</span> <span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span> <span class="p">+</span> <span class="p">(</span><span class="m">32</span> <span class="p">-</span> <span class="n">Size</span><span class="p">.</span><span class="n">Width</span><span class="p">)</span> <span class="p">/</span> <span class="m">2</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span> <span class="p">+</span> <span class="p">(</span><span class="m">32</span> <span class="p">-</span> <span class="n">Size</span><span class="p">.</span><span class="n">Height</span><span class="p">)</span> <span class="p">/</span> <span class="m">2</span><span class="p">);</span>
                        <span class="p">}</span>
                        <span class="c1">// 绘制地雷
</span><span class="c1"></span>                        <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="p">-</span><span class="m">1</span><span class="p">)</span>
                        <span class="p">{</span>
                            <span class="n">g</span><span class="p">.</span><span class="n">DrawImage</span><span class="p">(</span><span class="n">Properties</span><span class="p">.</span><span class="n">Resources</span><span class="p">.</span><span class="n">Mine</span><span class="p">,</span> <span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span> <span class="p">+</span> <span class="m">4</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span> <span class="p">+</span> <span class="m">2</span><span class="p">);</span>   <span class="c1">// 绘制地雷
</span><span class="c1"></span>                        <span class="p">}</span>
                    <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>此时，我们再次测试的时候，就会看到地雷的图标了：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e5%85%ab%e8%8a%82%e3%80%81%e6%95%b4%e4%bd%93%e5%ae%8c%e5%96%84/mineSweeper_8_05.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第八节、整体完善/mineSweeper_8_05.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第八节、整体完善/mineSweeper_8_05.png" data-sub-html="<h2>阶段性效果</h2>">
        
    </a><figcaption class="image-caption">阶段性效果</figcaption>
    </figure>
<p>然而，我们发现有一个问题，当我们单击数字的时候，会把所有的地雷都显示出来，也就是游戏结束。我们修改左击的事件：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">bMouseLeft</span><span class="p">)</span>   <span class="c1">// 左键被按下
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">!=</span> <span class="p">-</span><span class="m">1</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>
                    <span class="p">{</span>
                        <span class="n">dfs</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">);</span>
                    <span class="p">}</span>
                <span class="p">}</span>
                <span class="k">else</span>
                <span class="p">{</span>
                    <span class="c1">// 地雷，游戏结束
</span><span class="c1"></span>                    <span class="n">GameLost</span><span class="p">();</span>
                <span class="p">}</span>
            <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>这时候，刚才的问题就得到了修复。但是我们却又发现了一个问题——游戏结束的时候，还是可以继续单击雷区，打开区域。为此，我们增加一个变量检测游戏是否结束，如果结束，则任何按键都视为无效。首先定义一个变量：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="kt">bool</span> <span class="n">bGame</span><span class="p">;</span> <span class="c1">// 游戏是否结束
</span></code></pre></td></tr></table>
</div>
</div><p>我们在游戏开始的时候对它进行初始化，在 New Game 菜单事件处理函数的末尾修改代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">            <span class="n">Label_Mine</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="n">nMineCnt</span><span class="p">.</span><span class="n">ToString</span><span class="p">();</span>  <span class="c1">// 显示地雷数目
</span><span class="c1"></span>            <span class="n">Label_Timer</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="s">&#34;0&#34;</span><span class="p">;</span> <span class="c1">// 计时器清零
</span><span class="c1"></span>            <span class="n">Timer_Main</span><span class="p">.</span><span class="n">Enable</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>  <span class="c1">// 启动计时器计时
</span><span class="c1"></span>            <span class="n">bGame</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>  <span class="c1">// 游戏暂未结束
</span></code></pre></td></tr></table>
</div>
</div><p>将 GameLost 函数修改如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">    <span class="k">private</span> <span class="k">void</span> <span class="n">GameLost</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span><span class="p">&lt;=</span> <span class="n">nWidth</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
        <span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">j</span><span class="p">&lt;=</span> <span class="n">nHeight</span><span class="p">;</span> <span class="n">j</span><span class="p">++)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="p">-</span><span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span> <span class="p">||</span> <span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">))</span>   <span class="c1">// 未点开或者标记为问号的雷
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>   <span class="c1">// 点开该地雷
</span><span class="c1"></span>                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="n">bGame</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
    <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>同时修改 MouseUp 事件，将开头代码修改如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Form_Main_MouseUp</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">MouseEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">==</span> <span class="m">0</span> <span class="p">&amp;&amp;</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span> <span class="p">==</span> <span class="m">0</span> <span class="p">||</span> <span class="n">bGame</span><span class="p">)</span>  <span class="c1">// 不在地雷区域或游戏结束
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">return</span><span class="p">;</span>     <span class="c1">// 不做任何处理
</span><span class="c1"></span>            <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>至此，这个问题已经得到了修复。我们可以运行查看结果。</p>
<p>但是，我们现在还有一个判断游戏胜利的函数没有写，我们在每次打开地雷区域的时候判断游戏者是否胜利，首先定义一个 GameWin 函数如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">GameWin</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="kt">int</span> <span class="n">nCnt</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>   <span class="c1">// 用户标记红旗数目、问号数目、以及无标记未点开区域总数
</span><span class="c1"></span>            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;=</span> <span class="n">nWidth</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
            <span class="p">{</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">j</span> <span class="p">&lt;=</span> <span class="n">nHeight</span><span class="p">;</span> <span class="n">j</span><span class="p">++)</span>
                <span class="p">{</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span> <span class="p">||</span> <span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">2</span> <span class="p">||</span> <span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">)</span> <span class="c1">// 对应标记未点开区域、红旗区域、问号区域
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">nCnt</span><span class="p">++;</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="n">nCnt</span> <span class="p">==</span> <span class="n">nMineCnt</span><span class="p">)</span> <span class="c1">// 胜利条件
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="n">Timer_Main</span><span class="p">.</span><span class="n">Enabled</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span> <span class="c1">// 关闭计时器
</span><span class="c1"></span>                <span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="n">String</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&#34;游戏胜利，耗时：{0} 秒&#34;</span><span class="p">,</span> <span class="n">Label_Timer</span><span class="p">.</span><span class="n">Text</span><span class="p">),</span> <span class="s">&#34;提示&#34;</span><span class="p">,</span> <span class="n">MessageBoxButtons</span><span class="p">.</span><span class="n">OK</span><span class="p">);</span>
                <span class="c1">// 更新记录
</span><span class="c1"></span>                <span class="k">if</span> <span class="p">(</span><span class="n">nWidth</span> <span class="p">==</span> <span class="m">10</span> <span class="p">&amp;&amp;</span> <span class="n">nHeight</span> <span class="p">==</span> <span class="m">10</span> <span class="p">&amp;&amp;</span> <span class="n">nMineCnt</span> <span class="p">==</span> <span class="m">10</span><span class="p">)</span> <span class="c1">// 初级
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="k">if</span> <span class="p">(</span><span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Beginner</span> <span class="p">&gt;</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToInt32</span><span class="p">(</span><span class="n">Label_Timer</span><span class="p">.</span><span class="n">Text</span><span class="p">))</span>   <span class="c1">// 更新记录
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Beginner</span> <span class="p">=</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToInt32</span><span class="p">(</span><span class="n">Label_Timer</span><span class="p">.</span><span class="n">Text</span><span class="p">)</span>
                        <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Beginner</span><span class="p">.</span><span class="n">Save</span><span class="p">();</span>
                    <span class="p">}</span>
                <span class="p">}</span>
                <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">nWidth</span> <span class="p">==</span> <span class="m">16</span> <span class="p">&amp;&amp;</span> <span class="n">nHeight</span> <span class="p">==</span> <span class="m">16</span> <span class="p">&amp;&amp;</span> <span class="n">nMineCnt</span> <span class="p">==</span> <span class="m">40</span><span class="p">)</span> <span class="c1">// 中级
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="k">if</span> <span class="p">(</span><span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Intermediate</span> <span class="p">&gt;</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToInt32</span><span class="p">(</span><span class="n">Label_Timer</span><span class="p">.</span><span class="n">Text</span><span class="p">))</span>   <span class="c1">// 更新记录
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Intermediate</span> <span class="p">=</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToInt32</span><span class="p">(</span><span class="n">Label_Timer</span><span class="p">.</span><span class="n">Text</span><span class="p">)</span>
                        <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Intermediate</span><span class="p">.</span><span class="n">Save</span><span class="p">();</span>
                    <span class="p">}</span>
                <span class="p">}</span>
                <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">nWidth</span> <span class="p">==</span> <span class="m">30</span> <span class="p">&amp;&amp;</span> <span class="n">nHeight</span> <span class="p">==</span> <span class="m">16</span> <span class="p">&amp;&amp;</span> <span class="n">nMineCnt</span> <span class="p">==</span> <span class="m">40</span><span class="p">)</span> <span class="c1">// 高级
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="k">if</span> <span class="p">(</span><span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Expert</span> <span class="p">&gt;</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToInt32</span><span class="p">(</span><span class="n">Label_Timer</span><span class="p">.</span><span class="n">Text</span><span class="p">))</span>   <span class="c1">// 更新记录
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Expert</span> <span class="p">=</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToInt32</span><span class="p">(</span><span class="n">Label_Timer</span><span class="p">.</span><span class="n">Text</span><span class="p">)</span>
                        <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Expert</span><span class="p">.</span><span class="n">Save</span><span class="p">();</span>
                    <span class="p">}</span>
                <span class="p">}</span>
                <span class="n">bGame</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>然后，在MouseUp最后调用该函数：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">            <span class="n">GameWin</span><span class="p">();</span>
            <span class="k">this</span><span class="p">.</span><span class="n">Refresh</span><span class="p">();</span>
            <span class="n">bMouseLeft</span> <span class="p">=</span> <span class="n">bMouseRight</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>此时，我们的游戏基本完成了，但是有时会有这样的问题，左右双击区域的时候，不会显示到数字边界上，我们在 OpenMine 的时候调用一下 dfs 函数即可，将 OpenMine 函数修改如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="n">tool</span> <span class="n">OpenMine</span><span class="p">(</span><span class="kt">int</span> <span class="n">sx</span><span class="p">,</span> <span class="kt">int</span> <span class="n">sy</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">bool</span> <span class="n">bFlag</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>  <span class="c1">// 默认周围无雷
</span><span class="c1"></span>            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="m">8</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
            <span class="p">{</span>
                <span class="c1">// 获取偏移量
</span><span class="c1"></span>                <span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">+</span> <span class="n">dx</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="kt">int</span> <span class="n">y</span> <span class="p">=</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span> <span class="p">+</span> <span class="n">dy</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>  <span class="c1">// 问号
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="n">pState</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>   <span class="c1">// 打开
</span><span class="c1"></span>                    <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">==</span> <span class="p">-</span><span class="m">1</span><span class="p">)</span>   <span class="c1">// 有地雷
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">dfs</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">);</span>
                    <span class="p">}</span>
                    <span class="k">else</span>    <span class="c1">// 有地雷
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">bFlag</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
                        <span class="k">break</span><span class="p">;</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">return</span> <span class="n">bFlag</span><span class="p">;</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>至此，我们的扫雷游戏基本完成了，接下来还需要处理的一个功能是音效，首先搜索音效资源：Bomb、Tick。然后按照之前的方法，将它们添加到 Resources.resx 文件中。</p>
<p>定义两个变量用来播放这两个音效，并且在构造函数中进行初始化，如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="n">System</span><span class="p">.</span><span class="n">Media</span><span class="p">.</span><span class="n">SoundPlayer</span> <span class="n">soundTick</span><span class="p">;</span> <span class="c1">// 计时
</span><span class="c1"></span>        <span class="n">System</span><span class="p">.</span><span class="n">Media</span><span class="p">.</span><span class="n">SoundPlayer</span> <span class="n">soundBomb</span><span class="p">;</span> <span class="c1">// 爆炸
</span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">public</span> <span class="n">Form_Main</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">InitializeComponent</span><span class="p">();</span>

            <span class="k">this</span><span class="p">.</span><span class="n">DoubleBuffered</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span> <span class="c1">// 开启双缓冲
</span><span class="c1"></span>
            <span class="c1">// 初始化游戏参数
</span><span class="c1"></span>            <span class="n">nWidth</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Width</span><span class="p">;</span>
            <span class="n">nHeight</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Height</span><span class="p">;</span>
            <span class="n">nMineCnt</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">MineCnt</span><span class="p">;</span>

            <span class="c1">// 初始化
</span><span class="c1"></span>            <span class="n">bMark</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Mark</span><span class="p">;</span>
            <span class="n">bAudio</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Audio</span><span class="p">;</span>
            <span class="n">markMToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="n">bMark</span><span class="p">;</span>
            <span class="n">audioMToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="n">bAudio</span><span class="p">;</span>

            <span class="c1">// 初始化音频
</span><span class="c1"></span>            <span class="n">soundTick</span> <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">Media</span><span class="p">.</span><span class="n">SoundPlayer</span><span class="p">(</span><span class="n">Properties</span><span class="p">.</span><span class="n">Resources</span><span class="p">.</span><span class="n">Tick</span><span class="p">);</span>
            <span class="n">soundBomb</span> <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">Media</span><span class="p">.</span><span class="n">SoundPlayer</span><span class="p">(</span><span class="n">Properties</span><span class="p">.</span><span class="n">Resources</span><span class="p">.</span><span class="n">Bomb</span><span class="p">);</span>

            <span class="n">UpdateSize</span><span class="p">();</span>
            <span class="n">SelectLevel</span><span class="p">();</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>接下来分别在计时器的事件以及 GameLost 函数中添加如下代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">    <span class="k">private</span> <span class="k">void</span> <span class="n">Timer_Main_Tick</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">bAudio</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">soundTick</span><span class="p">.</span><span class="n">Play</span><span class="p">();</span>   <span class="c1">// 播放
</span><span class="c1"></span>        <span class="p">}</span>
        <span class="n">Label_Timer</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">Convert</span><span class="p">.</span><span class="n">ToInt32</span><span class="p">(</span><span class="n">Label_Timer</span><span class="p">.</span><span class="n">Text</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">);</span> <span class="c1">// 自增 1 秒
</span><span class="c1"></span>    <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">    <span class="k">private</span> <span class="k">void</span> <span class="n">GameLost</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span><span class="p">&lt;=</span> <span class="n">nWidth</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
        <span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">j</span><span class="p">&lt;=</span> <span class="n">nHeight</span><span class="p">;</span> <span class="n">j</span><span class="p">++)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="p">-</span><span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span> <span class="p">||</span> <span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">))</span>   <span class="c1">// 未点开或者标记为问号的雷
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>   <span class="c1">// 点开该地雷
</span><span class="c1"></span>                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">if</span><span class="p">(</span><span class="n">bAudio</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">soundBomb</span><span class="p">.</span><span class="n">Play</span><span class="p">();</span>
        <span class="p">}</span>
        <span class="n">bGame</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
    <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>此外，我们还需要将音效的初始默认值设置为 False，只需要将 Setting 文件中的默认值改为 False 即可。此外，我们还需要在 GameLost 的时候停止计时器：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">    <span class="k">private</span> <span class="k">void</span> <span class="n">GameLost</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span><span class="p">&lt;=</span> <span class="n">nWidth</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
        <span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">j</span><span class="p">&lt;=</span> <span class="n">nHeight</span><span class="p">;</span> <span class="n">j</span><span class="p">++)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="p">-</span><span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span> <span class="p">||</span> <span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">))</span>   <span class="c1">// 未点开或者标记为问号的雷
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>   <span class="c1">// 点开该地雷
</span><span class="c1"></span>                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">if</span><span class="p">(</span><span class="n">bAudio</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">soundBomb</span><span class="p">.</span><span class="n">Play</span><span class="p">();</span>
        <span class="p">}</span>
        <span class="n">Timer_Main</span><span class="p">.</span><span class="n">Enabled</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span> <span class="c1">// 停用计时器
</span><span class="c1"></span>        <span class="n">bGame</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
    <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>至此，我们的一个扫雷游戏就制作完成了，效果如下：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e5%85%ab%e8%8a%82%e3%80%81%e6%95%b4%e4%bd%93%e5%ae%8c%e5%96%84/mineSweeper_8_20.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第八节、整体完善/mineSweeper_8_20.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第八节、整体完善/mineSweeper_8_20.png" data-sub-html="<h2>运行效果</h2>">
        
    </a><figcaption class="image-caption">运行效果</figcaption>
    </figure>
<p>但有时我们会发现雷区还没有被完全打开，就已经弹出了游戏结束的对话框，为此，我们只需要在 MouseUp 事件中将刷新和判断游戏胜利的语句换一下次序即可：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">            <span class="k">this</span><span class="p">.</span><span class="n">Refresh</span><span class="p">();</span>
            <span class="n">GameWin</span><span class="p">();</span>
            <span class="n">bMouseLeft</span> <span class="p">=</span> <span class="n">bMouseRight</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><p>测试的时候，我们发现，单击 Rank 对话框中的 Reset 按钮，虽然数据库恢复了默认值，但是显示的值却没有马上恢复默认值，为此，双击 Rank 窗口中的 Reset 按钮，修改它的事件如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Button_Reset_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="c1">// 将标签设置为默认值
</span><span class="c1"></span>            <span class="n">Label_Beginer</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="n">String</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&#34;Beginner:        {0}&#34;</span><span class="p">,</span> <span class="m">999</span><span class="p">);</span>
            <span class="n">Label_Intermeidate</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="n">String</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&#34;Intermediate:        {0}&#34;</span><span class="p">,</span> <span class="m">999</span><span class="p">);</span>
            <span class="n">Label_Expert</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="n">String</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&#34;Expert:        {0}&#34;</span><span class="p">,</span> <span class="m">999</span><span class="p">);</span>

            <span class="c1">// 将所有记录设置为 999 即完成初始化
</span><span class="c1"></span>            <span class="n">Propoerties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Beginner</span> <span class="p">=</span> <span class="m">999</span><span class="p">;</span>
            <span class="n">Propoerties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Intermediate</span> <span class="p">=</span> <span class="m">999</span><span class="p">;</span>
            <span class="n">Propoerties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Export</span> <span class="p">=</span> <span class="m">999</span><span class="p">;</span>
            <span class="n">Propoerties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Save</span><span class="p">();</span>    <span class="c1">// 保存设置
</span><span class="c1"></span>        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>至此，一个较为完善的扫雷游戏就完成了，我将它托管在了 GitHub 上：<a href="https://github.com/Ivy-End/Minesweeper" target="_blank" rel="noopener noreffer">Minesweeper</a>。</p>
]]></description></item><item><title>扫雷游戏制作过程（CSharp 描述）：第七节、内部实现（续）</title><link>https://example.com/2015/05/%E6%89%AB%E9%9B%B7%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bcsharp-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E4%B8%83%E8%8A%82%E5%86%85%E9%83%A8%E5%AE%9E%E7%8E%B0%E7%BB%AD/</link><pubDate>Fri, 01 May 2015 22:23:00 +0800</pubDate><author>作者</author><guid>https://example.com/2015/05/%E6%89%AB%E9%9B%B7%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bcsharp-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E4%B8%83%E8%8A%82%E5%86%85%E9%83%A8%E5%AE%9E%E7%8E%B0%E7%BB%AD/</guid><description><![CDATA[<p>这一节我们主要讲解扫雷时鼠标单击的事件。我们首先介绍左键单击的事件，分为两种情况——遇到地雷，游戏结束；不是地雷，自动点开相邻的非地雷区域，并且显示对应地雷区域周围地雷的数目。</p>
<p>我们首先需要为 Form_Main 添加 MouseDown 以及 MouseUp 事件，分别用来监测鼠标按下以及弹起的事件信息。再定义两个全局变量，用来标识鼠标左键以及右键是否被按下，代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="kt">bool</span> <span class="n">bMouseLeft</span><span class="p">;</span>    <span class="c1">// 鼠标左键是否被按下
</span><span class="c1"></span>        <span class="kt">bool</span> <span class="n">bMouseRight</span><span class="p">;</span>   <span class="c1">// 鼠标右键是否被按下
</span></code></pre></td></tr></table>
</div>
</div><p>在 MouseDown 事件中输入下面的代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Form_Main_MouseDown</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">MouseEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">Button</span> <span class="p">==</span> <span class="n">MouseButtons</span><span class="p">.</span><span class="n">Left</span><span class="p">)</span>   <span class="c1">// 鼠标左键被按下
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="n">bMouseLeft</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">Button</span> <span class="p">==</span> <span class="n">MouseButtons</span><span class="p">.</span><span class="n">Right</span><span class="p">)</span>  <span class="c1">// 鼠标右键被按下
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="n">bMouseRight</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>在 MouseUp 事件中，我们需要获取鼠标弹起前按下的鼠标按键的状态信息，代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Form_Main_MouseUp</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">MouseEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">bMouseLeft</span> <span class="p">&amp;&amp;</span> <span class="n">BMouseRight</span><span class="p">)</span>   <span class="c1">// 左右键同时按下
</span><span class="c1"></span>            <span class="p">{</span>

            <span class="p">}</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">bMouseLeft</span><span class="p">)</span>   <span class="c1">// 左键被按下
</span><span class="c1"></span>            <span class="p">{</span>
                
            <span class="p">}</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">bMouseRight</span><span class="p">)</span>  <span class="c1">// 右键被按下
</span><span class="c1"></span>            <span class="p">{</span>
                
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>我们首先处理鼠标左键按下的情况，这里分为两种情况，在前文中已经介绍过。但是在处理之前，我们需要获取游戏者单击的是哪个雷区，因此我们需要加入一些用以判断当前鼠标所属区域的代码。但是回顾一下，我们上一节中在 MouseMove 事件中已经获得了当前鼠标所属的区域，并且保存在了全局变量中，因此，我们直接调用即可：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Form_Main_MouseUp</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">MouseEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">==</span> <span class="m">0</span> <span class="p">&amp;&amp;</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>  <span class="c1">// 不在地雷区域
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">return</span><span class="p">;</span>     <span class="c1">// 不做任何处理
</span><span class="c1"></span>            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="n">bMouseLeft</span> <span class="p">&amp;&amp;</span> <span class="n">BMouseRight</span><span class="p">)</span>   <span class="c1">// 左右键同时按下
</span><span class="c1"></span>            <span class="p">{</span>
                
            <span class="p">}</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">bMouseLeft</span><span class="p">)</span>   <span class="c1">// 左键被按下
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">!=</span> <span class="p">-</span><span class="m">1</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="c1">// 非地雷，自动打开周围非地雷区域
</span><span class="c1"></span>                <span class="p">}</span>
                <span class="k">else</span>
                <span class="p">{</span>
                    <span class="c1">// 地雷，游戏结束
</span><span class="c1"></span>                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">bMouseRight</span><span class="p">)</span>  <span class="c1">// 右键被按下
</span><span class="c1"></span>            <span class="p">{</span>
                
            <span class="p">}</span>
            <span class="n">bMouseLeft</span> <span class="p">=</span> <span class="n">bMouseRight</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>我们首先来处理非地雷的情况。也就是说我们需要寻找所有相邻的非地雷区域，这里我们才有深度优先搜索（Depth First Search），首先定义一个函数如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">dfs</span><span class="p">(</span><span class="kt">int</span> <span class="n">sx</span><span class="p">,</span> <span class="kt">int</span> <span class="n">sy</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">pState</span><span class="p">[</span><span class="n">sx</span><span class="p">,</span> <span class="n">sy</span><span class="p">]</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="c1">// 访问该点
</span><span class="c1"></span>            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="m">4</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
            <span class="p">{</span>
                <span class="c1">// 获取相邻点的坐标
</span><span class="c1"></span>                <span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="n">sx</span> <span class="p">+</span> <span class="n">px</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="kt">int</span> <span class="n">y</span> <span class="p">=</span> <span class="n">sy</span> <span class="p">+</span> <span class="n">py</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="k">if</span><span class="p">(</span><span class="n">x</span> <span class="p">&gt;=</span> <span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="n">x</span> <span class="p">&lt;=</span> <span class="n">nWidth</span> <span class="p">&amp;&amp;</span> <span class="n">y</span> <span class="p">&gt;=</span> <span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="n">y</span> <span class="p">&lt;=</span> <span class="n">nHeight</span> <span class="p">&amp;&amp;</span>
                    <span class="n">pMine</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">!=</span> <span class="p">-</span><span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="n">pMine</span><span class="p">[</span><span class="n">sx</span><span class="p">,</span> <span class="n">sy</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span> <span class="p">&amp;&amp;</span>
                    <span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span> <span class="p">||</span> <span class="n">pState</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">))</span> <span class="c1">// 不是地雷，处于地雷区域，且未点开，或者标记为问号
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="n">dfs</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">);</span>  <span class="c1">// 访问该点
</span><span class="c1"></span>                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>在 MouseUp 函数中调用，并且刷新绘图区域：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">bMouseLeft</span><span class="p">)</span>   <span class="c1">// 左键被按下
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">!=</span> <span class="p">-</span><span class="m">1</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="n">dfs</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">);</span>
                <span class="p">}</span>
                <span class="k">else</span>
                <span class="p">{</span>
                    <span class="c1">// 地雷，游戏结束
</span><span class="c1"></span>                <span class="p">}</span>
            <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>此时，我们运行程序，单击雷区，与上一节结束时的程序没有什么区别，因为我们还没有更新绘图函数，用下面的代码更新 PaintGame 函数主循环中的代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="c1">/// &lt;summary&gt;
</span><span class="c1"></span>        <span class="c1">/// 绘制游戏区
</span><span class="c1"></span>        <span class="c1">/// &lt;/summary&gt;
</span><span class="c1"></span>        <span class="k">private</span> <span class="k">void</span> <span class="n">PaintGame</span><span class="p">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">g</span><span class="p">.</span><span class="n">Clear</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">White</span><span class="p">);</span>   <span class="c1">// 清空绘图区
</span><span class="c1"></span>            <span class="c1">// 我们需要使雷区在用户显示的区域上下左右保持 6px 的偏移量，使得整体看起来更加协调
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">nOffsetX</span> <span class="p">=</span> <span class="m">6</span><span class="p">;</span>   <span class="c1">// X 方向偏移量
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">nOffsetY</span> <span class="p">=</span> <span class="m">6</span> <span class="p">+</span> <span class="n">MenuStrip_Main</span><span class="p">.</span><span class="n">Height</span><span class="p">;</span>   <span class="c1">// Y 方向偏移量
</span><span class="c1"></span>            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;=</span> <span class="n">nWidth</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>   <span class="c1">// 绘制行
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">j</span> <span class="p">&lt;=</span> <span class="n">nHeight</span><span class="p">;</span> <span class="n">j</span><span class="p">++)</span>  <span class="c1">// 绘制列
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="c1">// 第一个参数为笔刷，这里采用内置笔刷 SandyBrown
</span><span class="c1"></span>                    <span class="c1">// 第二个参数为方块的参数，这里采用左上角坐标以及长宽的形式给出
</span><span class="c1"></span>                    <span class="c1">// 34 表示每个雷区的大小，再加上偏移量就是我们当前雷区的起始位置，由于要空出 1px 的间隔，因此还需要加 1
</span><span class="c1"></span>                    <span class="c1">// 由此可以得到每个方块在雷区中的位置，然后利用循环绘制出来
</span><span class="c1"></span>
                    <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="c1">// 未点开
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="p">==</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">&amp;&amp;</span> <span class="n">j</span> <span class="p">==</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">)</span>  <span class="c1">// 是否为高亮点
</span><span class="c1"></span>                        <span class="p">{</span>
                            <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">FromArgb</span><span class="p">(</span><span class="m">100</span><span class="p">,</span> <span class="n">Color</span><span class="p">.</span><span class="n">SandyBrown</span><span class="p">)),</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>
                        <span class="p">}</span>
                        <span class="k">else</span> 
                        <span class="p">{</span>
                            <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">SandyBrown</span><span class="p">,</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>   <span class="c1">// 绘制雷区方块
</span><span class="c1"></span>                        <span class="p">}</span>
                    <span class="p">}</span>
                    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">1</span><span class="p">)</span> <span class="c1">// 点开
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">!=</span> <span class="p">-</span><span class="m">1</span><span class="p">)</span>   <span class="c1">// 非地雷
</span><span class="c1"></span>                        <span class="p">{</span>
                            <span class="c1">// 绘制背景
</span><span class="c1"></span>                            <span class="k">if</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">==</span> <span class="n">i</span> <span class="p">&amp;&amp;</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span> <span class="p">==</span> <span class="n">j</span><span class="p">)</span>
                            <span class="p">{</span>
                                <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">FromArgb</span><span class="p">(</span><span class="m">100</span><span class="p">,</span> <span class="n">Color</span><span class="p">.</span><span class="n">LightGray</span><span class="p">)),</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>
                            <span class="p">}</span>
                            <span class="k">else</span>
                            <span class="p">{</span>
                            <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">LightGray</span><span class="p">,</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>
                            <span class="p">}</span>
                            <span class="c1">// 绘制数字
</span><span class="c1"></span>                            <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">!=</span> <span class="m">0</span><span class="p">)</span>
                            <span class="p">{</span>
                                <span class="n">Brush</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">Blue</span><span class="p">);</span>   <span class="c1">// 定义钢笔
</span><span class="c1"></span>                                <span class="c1">// 各个地雷数目的颜色
</span><span class="c1"></span>                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">2</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">Green</span><span class="p">);</span> <span class="p">}</span>
                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">Red</span><span class="p">);</span> <span class="p">}</span>
                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">4</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">DarkBlue</span><span class="p">);</span> <span class="p">}</span>
                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">5</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">DarkRed</span><span class="p">);</span> <span class="p">}</span>
                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">6</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">DarkSeaGreen</span><span class="p">);</span> <span class="p">}</span>
                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">7</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">Black</span><span class="p">);</span> <span class="p">}</span>
                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">8</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">DarkGray</span><span class="p">);</span> <span class="p">}</span>
                                <span class="n">SizeF</span> <span class="n">Size</span> <span class="p">=</span> <span class="n">g</span><span class="p">.</span><span class="n">MeasureString</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">].</span><span class="n">ToString</span><span class="p">(),</span> <span class="k">new</span> <span class="n">Font</span><span class="p">(</span><span class="s">&#34;Consolas&#34;</span><span class="p">,</span> <span class="m">16</span><span class="p">));</span>
                                <span class="n">g</span><span class="p">.</span><span class="n">DrawString</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">].</span><span class="n">ToString</span><span class="p">(),</span> <span class="k">new</span> <span class="n">Font</span><span class="p">(</span><span class="s">&#34;Consolas&#34;</span><span class="p">,</span> <span class="m">16</span><span class="p">),</span> <span class="n">DrawBrush</span><span class="p">,</span> <span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span> <span class="p">+</span> <span class="p">(</span><span class="m">32</span> <span class="p">-</span> <span class="n">Size</span><span class="p">.</span><span class="n">Width</span><span class="p">)</span> <span class="p">/</span> <span class="m">2</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span> <span class="p">+</span> <span class="p">(</span><span class="m">32</span> <span class="p">-</span> <span class="n">Size</span><span class="p">.</span><span class="n">Height</span><span class="p">)</span> <span class="p">/</span> <span class="m">2</span><span class="p">);</span>
                            <span class="p">}</span>
                        <span class="p">}</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>此时，我们再次运行程序，单击某个格子，如果不是地雷，那么就可以看到下面的情况：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%83%e8%8a%82%e3%80%81%e5%86%85%e9%83%a8%e5%ae%9e%e7%8e%b0%ef%bc%88%e7%bb%ad%ef%bc%89/mineSweeper_7_08.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第七节、内部实现（续）/mineSweeper_7_08.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第七节、内部实现（续）/mineSweeper_7_08.png" data-sub-html="<h2>阶段性效果</h2>">
        
    </a><figcaption class="image-caption">阶段性效果</figcaption>
    </figure>
<p>接下来，我们先不处理游戏失败的情况，先来考虑右击事件，它主要用于更改标记，我们在右击函数中加入下面的代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">bMouseRight</span><span class="p">)</span>  <span class="c1">// 右键被按下
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">bMark</span><span class="p">)</span>   <span class="c1">// 可以使用标记
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="c1">// 未点开
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">=</span> <span class="m">2</span><span class="p">;</span> <span class="c1">// 红旗
</span><span class="c1"></span>                    <span class="p">}</span>
                    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">==</span> <span class="m">2</span><span class="p">)</span> <span class="c1">// 红旗
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">=</span> <span class="m">3</span><span class="p">;</span> <span class="c1">// 问号
</span><span class="c1"></span>                    <span class="p">}</span>
                    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">)</span> <span class="c1">// 问号
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="c1">// 未点开
</span><span class="c1"></span>                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">this</span><span class="p">.</span><span class="n">Refresh</span><span class="p">();</span> 
            <span class="n">bMouseLeft</span> <span class="p">=</span> <span class="n">bMouseRight</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>同样，我们现在运行程序还是不会有什么效果。我们需要更新PaintGame函数。再次之前，我们需要将我们的图标信息代入到工程中来，在导入之前我们需要将它们大尺寸分别修改为 24×24 和 20×20，以达到更好的显示效果。</p>
<p>在右侧解决方案资源管理器中找到 Resources.resx 文件，双击打开资源管理界面，将两张图片选中后拖动过去即可完成图片的导入。同时修改 PaintGame 函数的未点开功能部分如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="c1">/// &lt;summary&gt;
</span><span class="c1"></span>        <span class="c1">/// 绘制游戏区
</span><span class="c1"></span>        <span class="c1">/// &lt;/summary&gt;
</span><span class="c1"></span>        <span class="k">private</span> <span class="k">void</span> <span class="n">PaintGame</span><span class="p">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">g</span><span class="p">.</span><span class="n">Clear</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">White</span><span class="p">);</span>   <span class="c1">// 清空绘图区
</span><span class="c1"></span>            <span class="c1">// 我们需要使雷区在用户显示的区域上下左右保持 6px 的偏移量，使得整体看起来更加协调
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">nOffsetX</span> <span class="p">=</span> <span class="m">6</span><span class="p">;</span>   <span class="c1">// X 方向偏移量
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">nOffsetY</span> <span class="p">=</span> <span class="m">6</span> <span class="p">+</span> <span class="n">MenuStrip_Main</span><span class="p">.</span><span class="n">Height</span><span class="p">;</span>   <span class="c1">// Y 方向偏移量
</span><span class="c1"></span>            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;=</span> <span class="n">nWidth</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>   <span class="c1">// 绘制行
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">j</span> <span class="p">&lt;=</span> <span class="n">nHeight</span><span class="p">;</span> <span class="n">j</span><span class="p">++)</span>  <span class="c1">// 绘制列
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="c1">// 第一个参数为笔刷，这里采用内置笔刷 SandyBrown
</span><span class="c1"></span>                    <span class="c1">// 第二个参数为方块的参数，这里采用左上角坐标以及长宽的形式给出
</span><span class="c1"></span>                    <span class="c1">// 34 表示每个雷区的大小，再加上偏移量就是我们当前雷区的起始位置，由于要空出 1px 的间隔，因此还需要加 1
</span><span class="c1"></span>                    <span class="c1">// 由此可以得到每个方块在雷区中的位置，然后利用循环绘制出来
</span><span class="c1"></span>
                    <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="c1">// 未点开
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="c1">// 绘制背景
</span><span class="c1"></span>                        <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="p">==</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">&amp;&amp;</span> <span class="n">j</span> <span class="p">==</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">)</span>  <span class="c1">// 是否为高亮点
</span><span class="c1"></span>                        <span class="p">{</span>
                            <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">FromArgb</span><span class="p">(</span><span class="m">100</span><span class="p">,</span> <span class="n">Color</span><span class="p">.</span><span class="n">SandyBrown</span><span class="p">)),</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>
                        <span class="p">}</span>
                        <span class="k">else</span> 
                        <span class="p">{</span>
                            <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">SandyBrown</span><span class="p">,</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>   <span class="c1">// 绘制雷区方块
</span><span class="c1"></span>                        <span class="p">}</span>
                        <span class="c1">// 绘制标记
</span><span class="c1"></span>                        <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">2</span><span class="p">)</span>
                        <span class="p">{</span>
                            <span class="n">g</span><span class="p">.</span><span class="n">DrawImage</span><span class="p">(</span><span class="n">Properties</span><span class="p">.</span><span class="n">Resources</span><span class="p">.</span><span class="n">Flag</span><span class="p">,</span> <span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span> <span class="p">+</span> <span class="m">4</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span> <span class="p">+</span> <span class="m">2</span><span class="p">);</span>   <span class="c1">// 绘制红旗
</span><span class="c1"></span>                        <span class="p">}</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">)</span>
                        <span class="p">{</span>
                            <span class="n">g</span><span class="p">.</span><span class="n">DrawImage</span><span class="p">(</span><span class="n">Properties</span><span class="p">.</span><span class="n">Resources</span><span class="p">.</span><span class="n">Doubt</span><span class="p">,</span> <span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span> <span class="p">+</span> <span class="m">4</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span> <span class="p">+</span> <span class="m">2</span><span class="p">);</span>   <span class="c1">// 绘制问号
</span><span class="c1"></span>                        <span class="p">}</span>
                    <span class="p">}</span>
                    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">1</span><span class="p">)</span> <span class="c1">// 点开
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">!=</span> <span class="p">-</span><span class="m">1</span><span class="p">)</span>   <span class="c1">// 非地雷
</span><span class="c1"></span>                        <span class="p">{</span>
                            <span class="c1">// 绘制背景
</span><span class="c1"></span>                            <span class="k">if</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">==</span> <span class="n">i</span> <span class="p">&amp;&amp;</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span> <span class="p">==</span> <span class="n">j</span><span class="p">)</span>
                            <span class="p">{</span>
                                <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">FromArgb</span><span class="p">(</span><span class="m">100</span><span class="p">,</span> <span class="n">Color</span><span class="p">.</span><span class="n">LightGray</span><span class="p">)),</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>
                            <span class="p">}</span>
                            <span class="k">else</span>
                            <span class="p">{</span>
                            <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">LightGray</span><span class="p">,</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>
                            <span class="p">}</span>
                            <span class="c1">// 绘制数字
</span><span class="c1"></span>                            <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">!=</span> <span class="m">0</span><span class="p">)</span>
                            <span class="p">{</span>
                                <span class="n">Brush</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">Blue</span><span class="p">);</span>   <span class="c1">// 定义钢笔
</span><span class="c1"></span>                                <span class="c1">// 各个地雷数目的颜色
</span><span class="c1"></span>                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">2</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">Green</span><span class="p">);</span> <span class="p">}</span>
                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">Red</span><span class="p">);</span> <span class="p">}</span>
                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">4</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">DarkBlue</span><span class="p">);</span> <span class="p">}</span>
                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">5</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">DarkRed</span><span class="p">);</span> <span class="p">}</span>
                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">6</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">DarkSeaGreen</span><span class="p">);</span> <span class="p">}</span>
                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">7</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">Black</span><span class="p">);</span> <span class="p">}</span>
                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">8</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">DarkGray</span><span class="p">);</span> <span class="p">}</span>
                                <span class="n">SizeF</span> <span class="n">Size</span> <span class="p">=</span> <span class="n">g</span><span class="p">.</span><span class="n">MeasureString</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">].</span><span class="n">ToString</span><span class="p">(),</span> <span class="k">new</span> <span class="n">Font</span><span class="p">(</span><span class="s">&#34;Consolas&#34;</span><span class="p">,</span> <span class="m">16</span><span class="p">));</span>
                                <span class="n">g</span><span class="p">.</span><span class="n">DrawString</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">].</span><span class="n">ToString</span><span class="p">(),</span> <span class="k">new</span> <span class="n">Font</span><span class="p">(</span><span class="s">&#34;Consolas&#34;</span><span class="p">,</span> <span class="m">16</span><span class="p">),</span> <span class="n">DrawBrush</span><span class="p">,</span> <span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span> <span class="p">+</span> <span class="p">(</span><span class="m">32</span> <span class="p">-</span> <span class="n">Size</span><span class="p">.</span><span class="n">Width</span><span class="p">)</span> <span class="p">/</span> <span class="m">2</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span> <span class="p">+</span> <span class="p">(</span><span class="m">32</span> <span class="p">-</span> <span class="n">Size</span><span class="p">.</span><span class="n">Height</span><span class="p">)</span> <span class="p">/</span> <span class="m">2</span><span class="p">);</span>
                            <span class="p">}</span>
                        <span class="p">}</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>此时，我们发现当我们的区域处于红旗或者问号的时候，左击的时候还是会打开该区域，修改左击代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">bMouseLeft</span><span class="p">)</span>   <span class="c1">// 左键被按下
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">!=</span> <span class="p">-</span><span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="n">dfs</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">);</span>
                <span class="p">}</span>
                <span class="k">else</span>
                <span class="p">{</span>
                    <span class="c1">// 地雷，游戏结束
</span><span class="c1"></span>                <span class="p">}</span>
            <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>此时，我们以及完成了基本的游戏功能了。接下来我们还需要完成一个鼠标左右键同时按下的事件，代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">            <span class="k">if</span><span class="p">(</span><span class="n">bMouseLeft</span> <span class="p">&amp;&amp;</span> <span class="n">BMouseRight</span><span class="p">)</span>   <span class="c1">// 左右键同时按下
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">==</span> <span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="n">pMine</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span>    <span class="c1">// 为数字区域
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="kt">int</span> <span class="n">nFlagCnt</span> <span class="p">=</span> <span class="m">0</span><span class="p">,</span> <span class="n">nDoubtCnt</span> <span class="p">=</span> <span class="m">0</span><span class="p">,</span> <span class="n">nSysCnt</span> <span class="p">=</span> <span class="n">pMine</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">];</span>   <span class="c1">// 记录红旗数目，问号数目，九宫格地雷数目
</span><span class="c1"></span>                    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="m">8</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
                    <span class="p">{</span>
                        <span class="c1">// 获取偏移量
</span><span class="c1"></span>                        <span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">+</span> <span class="n">dx</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                        <span class="kt">int</span> <span class="n">y</span> <span class="p">=</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span> <span class="p">+</span> <span class="n">dy</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">==</span> <span class="m">2</span><span class="p">)</span>   <span class="c1">// 红旗
</span><span class="c1"></span>                        <span class="p">{</span>
                            <span class="n">nFlagCnt</span><span class="p">++;</span>
                        <span class="p">}</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">)</span>   <span class="c1">// 问号
</span><span class="c1"></span>                        <span class="p">{</span>
                            <span class="n">nDoubtCnt</span><span class="p">++;</span>
                        <span class="p">}</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">nFlagCnt</span> <span class="p">==</span> <span class="n">nSysCnt</span> <span class="p">||</span> <span class="n">nFlagCnt</span> <span class="p">+</span> <span class="n">nDoubtCnt</span> <span class="p">==</span> <span class="n">nSysCnt</span><span class="p">)</span> <span class="c1">// 打开九宫格
</span><span class="c1"></span>                        <span class="p">{</span>
                            <span class="kt">bool</span> <span class="n">bFlag</span> <span class="p">=</span> <span class="n">OpenMine</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">);</span>
                            <span class="k">if</span><span class="p">(!</span><span class="n">bFlag</span><span class="p">)</span>  <span class="c1">// 周围有地雷
</span><span class="c1"></span>                            <span class="p">{</span>
                                <span class="c1">// 结束游戏
</span><span class="c1"></span>                            <span class="p">}</span>
                        <span class="p">}</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>这里，我们缺少一个 OpenMine 函数，定义如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="n">tool</span> <span class="n">OpenMine</span><span class="p">(</span><span class="kt">int</span> <span class="n">sx</span><span class="p">,</span> <span class="kt">int</span> <span class="n">sy</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">bool</span> <span class="n">bFlag</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>  <span class="c1">// 默认周围无雷
</span><span class="c1"></span>            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="m">8</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
            <span class="p">{</span>
                <span class="c1">// 获取偏移量
</span><span class="c1"></span>                <span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">+</span> <span class="n">dx</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="kt">int</span> <span class="n">y</span> <span class="p">=</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span> <span class="p">+</span> <span class="n">dy</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>  <span class="c1">// 问号
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="n">pState</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>   <span class="c1">// 打开
</span><span class="c1"></span>                    <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">==</span> <span class="p">-</span><span class="m">1</span><span class="p">)</span>   <span class="c1">// 有地雷
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">bFlag</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
                        <span class="k">break</span><span class="p">;</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">return</span> <span class="n">bFlag</span><span class="p">;</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>此时，如果我们运行程序，很有可能出现下面的情况，有的地方是一个白色的区域，没有任何内容：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%83%e8%8a%82%e3%80%81%e5%86%85%e9%83%a8%e5%ae%9e%e7%8e%b0%ef%bc%88%e7%bb%ad%ef%bc%89/mineSweeper_7_14.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第七节、内部实现（续）/mineSweeper_7_14.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第七节、内部实现（续）/mineSweeper_7_14.png" data-sub-html="<h2>阶段性效果</h2>">
        
    </a><figcaption class="image-caption">阶段性效果</figcaption>
    </figure>
<p>出现这种结果，也就意味着出现了地雷，因为我们的 PaintGame 函数暂时还没有绘制地雷的功能。</p>
<p>细心的读者可能发现了一个问题，地图上有了一面红旗，底下的状态栏中却仍然显示地雷数目为 10，我们通过修改右击事件来修复这个问题：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Form_Main_MouseUp</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">MouseEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">==</span> <span class="m">0</span> <span class="p">&amp;&amp;</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>  <span class="c1">// 不在地雷区域
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">return</span><span class="p">;</span>     <span class="c1">// 不做任何处理
</span><span class="c1"></span>            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="n">bMouseLeft</span> <span class="p">&amp;&amp;</span> <span class="n">BMouseRight</span><span class="p">)</span>   <span class="c1">// 左右键同时按下
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">==</span> <span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="n">pMine</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span>    <span class="c1">// 为数字区域
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="kt">int</span> <span class="n">nFlagCnt</span> <span class="p">=</span> <span class="m">0</span><span class="p">,</span> <span class="n">nDoubtCnt</span> <span class="p">=</span> <span class="m">0</span><span class="p">,</span> <span class="n">nSysCnt</span> <span class="p">=</span> <span class="n">pMine</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">];</span>   <span class="c1">// 记录红旗数目，问号数目，九宫格地雷数目
</span><span class="c1"></span>                    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="m">8</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
                    <span class="p">{</span>
                        <span class="c1">// 获取偏移量
</span><span class="c1"></span>                        <span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">+</span> <span class="n">dx</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                        <span class="kt">int</span> <span class="n">y</span> <span class="p">=</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span> <span class="p">+</span> <span class="n">dy</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">==</span> <span class="m">2</span><span class="p">)</span>   <span class="c1">// 红旗
</span><span class="c1"></span>                        <span class="p">{</span>
                            <span class="n">nFlagCnt</span><span class="p">++;</span>
                        <span class="p">}</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">)</span>   <span class="c1">// 问号
</span><span class="c1"></span>                        <span class="p">{</span>
                            <span class="n">nDoubtCnt</span><span class="p">++;</span>
                        <span class="p">}</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">nFlagCnt</span> <span class="p">==</span> <span class="n">nSysCnt</span> <span class="p">||</span> <span class="n">nFlagCnt</span> <span class="p">+</span> <span class="n">nDoubtCnt</span> <span class="p">==</span> <span class="n">nSysCnt</span><span class="p">)</span> <span class="c1">// 打开九宫格
</span><span class="c1"></span>                        <span class="p">{</span>
                            <span class="kt">bool</span> <span class="n">bFlag</span> <span class="p">=</span> <span class="n">OpenMine</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">);</span>
                            <span class="k">if</span><span class="p">(!</span><span class="n">bFlag</span><span class="p">)</span>  <span class="c1">// 周围有地雷
</span><span class="c1"></span>                            <span class="p">{</span>
                                <span class="c1">// 结束游戏
</span><span class="c1"></span>                            <span class="p">}</span>
                        <span class="p">}</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">bMouseLeft</span><span class="p">)</span>   <span class="c1">// 左键被按下
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">!=</span> <span class="p">-</span><span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="n">dfs</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">);</span>
                <span class="p">}</span>
                <span class="k">else</span>
                <span class="p">{</span>
                    <span class="c1">// 地雷，游戏结束
</span><span class="c1"></span>                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">bMouseRight</span><span class="p">)</span>  <span class="c1">// 右键被按下
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">bMark</span><span class="p">)</span>   <span class="c1">// 可以使用标记
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="c1">// 未点开
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">=</span> <span class="m">2</span><span class="p">;</span> <span class="c1">// 红旗
</span><span class="c1"></span>                        <span class="n">Label_Mine</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">Convert</span><span class="p">.</span><span class="n">ToInt32</span><span class="p">(</span><span class="n">Label_Mine</span><span class="p">.</span><span class="n">Text</span><span class="p">)</span> <span class="p">-</span> <span class="m">1</span><span class="p">);</span>   <span class="c1">// 剩余地雷数目减 1
</span><span class="c1"></span>                    <span class="p">}</span>
                    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">==</span> <span class="m">2</span><span class="p">)</span> <span class="c1">// 红旗
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">=</span> <span class="m">3</span><span class="p">;</span> <span class="c1">// 问号
</span><span class="c1"></span>                        <span class="n">Label_Mine</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">Convert</span><span class="p">.</span><span class="n">ToInt32</span><span class="p">(</span><span class="n">Label_Mine</span><span class="p">.</span><span class="n">Text</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">);</span>   <span class="c1">// 剩余地雷数目加 1
</span><span class="c1"></span>                    <span class="p">}</span>
                    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">)</span> <span class="c1">// 问号
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="c1">// 未点开
</span><span class="c1"></span>                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">this</span><span class="p">.</span><span class="n">Refresh</span><span class="p">();</span> 
            <span class="n">bMouseLeft</span> <span class="p">=</span> <span class="n">bMouseRight</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>最终，我们会看到这样的效果：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%83%e8%8a%82%e3%80%81%e5%86%85%e9%83%a8%e5%ae%9e%e7%8e%b0%ef%bc%88%e7%bb%ad%ef%bc%89/mineSweeper_7_16.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第七节、内部实现（续）/mineSweeper_7_16.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第七节、内部实现（续）/mineSweeper_7_16.png" data-sub-html="<h2>运行效果</h2>">
        
    </a><figcaption class="image-caption">运行效果</figcaption>
    </figure>
<p>我们将在下一节中介绍游戏结束的相关内容。</p>
]]></description></item></channel></rss>