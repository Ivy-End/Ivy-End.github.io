<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>寸方斋</title><link>https://example.com/</link><description>和光同尘，与时舒卷</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>suda.ivywk@gmail.com (Kai Wang)</managingEditor><webMaster>suda.ivywk@gmail.com (Kai Wang)</webMaster><copyright>本作品采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可</copyright><lastBuildDate>Sat, 19 Oct 2013 21:30:00 +0800</lastBuildDate><atom:link href="https://example.com/index.xml" rel="self" type="application/rss+xml"/><item><title>算法专题：最小生成树 – Prim Algoritm</title><link>https://example.com/2013/10/%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91-prim-algoritm/</link><pubDate>Sat, 19 Oct 2013 21:30:00 +0800</pubDate><author>作者</author><guid>https://example.com/2013/10/%E7%AE%97%E6%B3%95%E4%B8%93%E9%A2%98%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91-prim-algoritm/</guid><description>最近开始准备 NOIP 复赛，发现很多算法已经不会了。只能一个个的捡起来，慢慢复习，顺便做点笔记。 最小生成树（Minimum Spanning Trees），简称 MST</description></item><item><title>杂记（20130930）</title><link>https://example.com/2013/09/%E6%9D%82%E8%AE%B020130930/</link><pubDate>Mon, 30 Sep 2013 21:01:00 +0800</pubDate><author>作者</author><guid>https://example.com/2013/09/%E6%9D%82%E8%AE%B020130930/</guid><description>随便写写，记录一下最近发生的事情。 高中最后一次运动会居然是在停课中度过的。不过比起化学组去省选的那些人还算幸运的，至少也参与了一点，虽然成绩</description></item><item><title>中秋望月感怀</title><link>https://example.com/2013/09/%E4%B8%AD%E7%A7%8B%E6%9C%9B%E6%9C%88%E6%84%9F%E6%80%80/</link><pubDate>Thu, 19 Sep 2013 20:03:00 +0800</pubDate><author>作者</author><guid>https://example.com/2013/09/%E4%B8%AD%E7%A7%8B%E6%9C%9B%E6%9C%88%E6%84%9F%E6%80%80/</guid><description>在我的印象中，从来没有过真正意义上的赏月。小时候虽然每年都会如约赏月，但那时候年纪尚小，即使望月，也不会有什么特别的感触。 自从高二受了周红娟</description></item><item><title>关于复数的一些补充</title><link>https://example.com/2013/08/%E5%85%B3%E4%BA%8E%E5%A4%8D%E6%95%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E8%A1%A5%E5%85%85/</link><pubDate>Fri, 30 Aug 2013 20:16:00 +0800</pubDate><author>作者</author><guid>https://example.com/2013/08/%E5%85%B3%E4%BA%8E%E5%A4%8D%E6%95%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E8%A1%A5%E5%85%85/</guid><description>新版高中教材对复数内容进行了极大的删减，使得我们对于复数的认知还停留在最原始的阶段。殊不知，复数的应用非常广泛。现参考《高中数学·甲种本》以</description></item><item><title>线段树 – 有改动求解区间最值 – 忠诚 2</title><link>https://example.com/2013/08/%E7%BA%BF%E6%AE%B5%E6%A0%91-%E6%9C%89%E6%94%B9%E5%8A%A8%E6%B1%82%E8%A7%A3%E5%8C%BA%E9%97%B4%E6%9C%80%E5%80%BC-%E5%BF%A0%E8%AF%9A-2/</link><pubDate>Tue, 27 Aug 2013 21:16:00 +0800</pubDate><author>作者</author><guid>https://example.com/2013/08/%E7%BA%BF%E6%AE%B5%E6%A0%91-%E6%9C%89%E6%94%B9%E5%8A%A8%E6%B1%82%E8%A7%A3%E5%8C%BA%E9%97%B4%E6%9C%80%E5%80%BC-%E5%BF%A0%E8%AF%9A-2/</guid><description>忠诚 2 是忠诚的一个提升版本。我们在之前的一篇文章线段树 – 无改动求解区间最值 – 忠诚简单的谈了一下关于无改动求解区间最值的问题。现在我们来研究一</description></item><item><title>线段树 – 无改动求解区间最值 – 忠诚</title><link>https://example.com/2013/08/%E7%BA%BF%E6%AE%B5%E6%A0%91-%E6%97%A0%E6%94%B9%E5%8A%A8%E6%B1%82%E8%A7%A3%E5%8C%BA%E9%97%B4%E6%9C%80%E5%80%BC-%E5%BF%A0%E8%AF%9A/</link><pubDate>Tue, 27 Aug 2013 21:06:00 +0800</pubDate><author>作者</author><guid>https://example.com/2013/08/%E7%BA%BF%E6%AE%B5%E6%A0%91-%E6%97%A0%E6%94%B9%E5%8A%A8%E6%B1%82%E8%A7%A3%E5%8C%BA%E9%97%B4%E6%9C%80%E5%80%BC-%E5%BF%A0%E8%AF%9A/</guid><description>昨天研究了一下线段树，发现原来线段树有这么多实现方式。当然，对于非递归自底向上线段树，俗称 ZKW 线段树还是不太理解。而且我的实现方式还是用的指针</description></item><item><title>0/1 背包 - NOIP2005P3</title><link>https://example.com/2013/08/01-%E8%83%8C%E5%8C%85-noip2005p3/</link><pubDate>Fri, 23 Aug 2013 09:03:00 +0800</pubDate><author>作者</author><guid>https://example.com/2013/08/01-%E8%83%8C%E5%8C%85-noip2005p3/</guid><description>题目是经典的采药问题。也是最基础的 0/1 背包问题。 我们约定有 $ N $ 件物品和一个容量为 $ C $ 的背包。第 $ i $ 件物品的重量是 $ w\left [ i \right ] $ ，价值是 $</description></item><item><title>暑假小结</title><link>https://example.com/2013/08/%E6%9A%91%E5%81%87%E5%B0%8F%E7%BB%93/</link><pubDate>Thu, 22 Aug 2013 21:15:00 +0800</pubDate><author>作者</author><guid>https://example.com/2013/08/%E6%9A%91%E5%81%87%E5%B0%8F%E7%BB%93/</guid><description>一个暑假很快就过去了，还有一个多星期就要高三了。回顾这个暑假，总感觉比之前任何一个暑假都要充实，这种感觉就如同大块朵颐后的欣悦。简略的说几类</description></item><item><title>Dilworth 定理 - NOIP1999T1</title><link>https://example.com/2013/08/dilworth-%E5%AE%9A%E7%90%86-noip1999t1/</link><pubDate>Thu, 22 Aug 2013 16:32:00 +0800</pubDate><author>作者</author><guid>https://example.com/2013/08/dilworth-%E5%AE%9A%E7%90%86-noip1999t1/</guid><description>题目是经典的导弹拦截。第一问很有信心的写下了最长非增序列。第二问就懵了。后来看了题解，有一个“Dilworth 定理”，现在将定理的表述和证明</description></item><item><title>BFS解决蛇形填数 - NOIP1995P2</title><link>https://example.com/2013/08/bfs-%E8%A7%A3%E5%86%B3%E8%9B%87%E5%BD%A2%E5%A1%AB%E6%95%B0-noip1995p2/</link><pubDate>Thu, 22 Aug 2013 10:36:00 +0800</pubDate><author>作者</author><guid>https://example.com/2013/08/bfs-%E8%A7%A3%E5%86%B3%E8%9B%87%E5%BD%A2%E5%A1%AB%E6%95%B0-noip1995p2/</guid><description>题目描述是经典的蛇形填数问题。 以前解决这类问题，通常是通过控制 $ i,j $ 的值来定位数组元素的位置，然后进行赋值。但是这种方法非常的繁琐，且难于理</description></item></channel></rss>