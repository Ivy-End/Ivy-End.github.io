<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>分布距离 on 退思轩</title>
    <link>https://kwang.life/tags/%E5%88%86%E5%B8%83%E8%B7%9D%E7%A6%BB/</link>
    <description>Recent content in 分布距离 on 退思轩</description>
    <image>
      <title>退思轩</title>
      <url>https://kwang.life/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://kwang.life/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 23 Aug 2022 11:27:00 +0800</lastBuildDate><atom:link href="https://kwang.life/tags/%E5%88%86%E5%B8%83%E8%B7%9D%E7%A6%BB/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>机器学习中常用的距离度量汇总</title>
      <link>https://kwang.life/2022/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E8%B7%9D%E7%A6%BB%E5%BA%A6%E9%87%8F%E6%B1%87%E6%80%BB/</link>
      <pubDate>Tue, 23 Aug 2022 11:27:00 +0800</pubDate>
      
      <guid>https://kwang.life/2022/08/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E4%B8%AD%E5%B8%B8%E7%94%A8%E7%9A%84%E8%B7%9D%E7%A6%BB%E5%BA%A6%E9%87%8F%E6%B1%87%E6%80%BB/</guid>
      <description>距离的定义 在机器学习中，我们通过计算不同样本在特征空间中的距离来评估样本间的相似度，进而为其进行分类。根据样本特征空间的不同，我们需要选择合适的距离度量方法。一般而言，对于距离度量函数$d(x,y)$，其需要满足如下性质：
非负性：$d(x,y)\geq 0$ 同一性：$d(x,y)=0\Leftrightarrow x=y$ 对称性：$d(x,y)=d(y,x)$ 三角不等式：$d(x,y)\leq d(x,z)+d(z,y)$ 根据样本特征空间的不同，我们把度量的距离分为：空间距离、字符距离、集合距离、分布距离。
空间距离 欧几里得距离（Euclidean Distance） 欧几里得距离用于描述欧式空间中任意两点间的直线距离，常被称作欧几里得范数，或$\mathcal{L}_2$范数。对于$n$维空间中的任意两点$A(x_1,x_2,\cdots,x_n)$和$B(y_1,y_2,\cdots,y_n)$的欧几里得距离定义为：
$$d=\sqrt{\sum_{i=1}^{n}{\left(x_i-y_i\right)^2}}$$
在 Python 中用于计算任意两点间欧几里得距离的代码如下：
import numpy as np def EuclideanDistance(x, y): x = np.array(x) y = np.array(y) return np.sqrt(np.sum(np.square(x - y))) 曼哈顿距离（Manhattan Distance） 曼哈顿距离用于描述标准坐标系中任意两点间的绝对轴距之和，常被称作曼哈顿范数，或$\mathcal{L}_1$范数。对于$n$维空间中的任意两点$A(x_1,x_2,\cdots,x_n)$和$B(y_1,y_2,\cdots,y_n)$的曼哈顿距离定义为：
$$d=\sqrt{\sum_{i=1}^{n}{\left|x_i-y_i\right|}}$$
下图所示红色路径为曼哈顿距离，绿色路径为欧几里得距离，蓝色路径和黄色路径为等价曼哈顿距离。曼哈顿距离的发明是为了应对早期计算图形学领域中浮点运算代价高的情况，采用曼哈顿距离代替欧几里得距离进行图形渲染。
曼哈顿距离（Manhattan Distance）
在 Python 中用于计算任意两点间曼哈顿距离的代码如下：
import numpy as np def ManhattanDistance(x, y): x = np.array(x) y = np.array(y) return np.sum(np.abs(x - y)) 切比雪夫距离（Chebyschev Distance） 切比雪夫距离用于描述标准坐标系中任意两点间的绝对轴距最大值，常被称作切比雪夫范数，或$\mathcal{L}_\infty$范数。对于$n$维空间中的任意两点$A(x_1,x_2,\cdots,x_n)$和$B(y_1,y_2,\cdots,y_n)$的切比雪夫距离定义为：
$$d=\max\left|x_i-y_i\right|$$
以下图所示位于 F6 的“王”为例，其到棋盘上任意一点的切比雪夫距离即为它需要移动的步数。需要注意的是，在国际象棋中“王”每次可以朝任意方向移动一格。
切比雪夫距离（Chebyschev Distance）</description>
    </item>
    
  </channel>
</rss>
