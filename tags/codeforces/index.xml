<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Codeforces - 标签 - 退思轩</title><link>https://example.com/tags/codeforces/</link><description>Codeforces - 标签 - 退思轩</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>suda.ivywk@gmail.com (Kai Wang)</managingEditor><webMaster>suda.ivywk@gmail.com (Kai Wang)</webMaster><copyright>本作品采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可</copyright><lastBuildDate>Sun, 20 Jul 2014 10:08:00 +0800</lastBuildDate><atom:link href="https://example.com/tags/codeforces/" rel="self" type="application/rss+xml"/><item><title>Codeforces 1B - Spreadsheet</title><link>https://example.com/2014/07/codeforces-1b-spreadsheet/</link><pubDate>Sun, 20 Jul 2014 10:08:00 +0800</pubDate><author>作者</author><guid>https://example.com/2014/07/codeforces-1b-spreadsheet/</guid><description><![CDATA[<p><a href="https://codeforces.com/contest/1/problem/B" target="_blank" rel="noopener noreffer">1B Spreadsheet</a></p>
<h2 id="analysis">Analysis</h2>
<p>The essence of this problem lays in the conversion between decimal (&lsquo;0&rsquo;-&lsquo;9&rsquo;) and base 26 (&lsquo;A&rsquo;-&lsquo;Z&rsquo;).</p>
<p>Notice: There is no number in the base 26 system that function as the number &lsquo;0&rsquo; in the decimal system, so when the decimal number is a multiple of 26, a special handle is needed.</p>
<p><code>if(C % 26 == 0) { strTmp = 'Z' + strTmp; C /= 26; C--; continue; }</code></p>
<p>In the code above, <code>C</code> means the column, while <code>strTmp</code> stands for the base 26 string after conversion.</p>
<h2 id="solution">Solution</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span><span class="lnt">73
</span><span class="lnt">74
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-cpp" data-lang="cpp"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="cp">#include</span> <span class="cpf">&lt;ctype.h&gt;</span><span class="cp">
</span><span class="cp"></span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="n">string</span> <span class="nf">Convert</span><span class="p">(</span><span class="n">string</span> <span class="n">x</span><span class="p">);</span>

<span class="kt">int</span> <span class="n">N</span><span class="p">;</span>
<span class="n">string</span> <span class="n">strInput</span><span class="p">;</span> 

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">N</span><span class="p">;</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">N</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">strInput</span><span class="p">;</span>
		<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">Convert</span><span class="p">(</span><span class="n">strInput</span><span class="p">)</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span> 

<span class="n">string</span> <span class="nf">Convert</span><span class="p">(</span><span class="n">string</span> <span class="n">x</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">string</span> <span class="n">strRet</span> <span class="o">=</span> <span class="s">&#34;&#34;</span><span class="p">;</span> 
	<span class="kt">int</span> <span class="n">nTmp</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
	<span class="kt">bool</span> <span class="n">bTmp</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">x</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="k">if</span><span class="p">(</span><span class="n">isdigit</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="n">i</span><span class="p">])</span> <span class="o">&amp;&amp;</span> <span class="o">!</span><span class="n">bTmp</span><span class="p">)</span> <span class="p">{</span> <span class="n">bTmp</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span> <span class="n">nTmp</span><span class="o">++</span><span class="p">;</span> <span class="p">}</span>
		<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">isdigit</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="n">i</span><span class="p">]))</span> <span class="p">{</span> <span class="n">bTmp</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span> <span class="p">}</span>
	<span class="p">}</span>
	<span class="k">if</span><span class="p">(</span><span class="n">nTmp</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span>
	<span class="p">{</span>
		<span class="n">string</span> <span class="n">R</span><span class="p">,</span> <span class="n">C</span><span class="p">;</span>
		<span class="kt">int</span> <span class="n">nC</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="n">nHex</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
		<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">x</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="k">if</span><span class="p">(</span><span class="n">isalpha</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="n">i</span><span class="p">]))</span> <span class="p">{</span> <span class="n">C</span> <span class="o">+=</span> <span class="n">x</span><span class="p">[</span><span class="n">i</span><span class="p">];</span> <span class="p">}</span>
			<span class="k">else</span> <span class="p">{</span> <span class="n">R</span> <span class="o">+=</span> <span class="n">x</span><span class="p">[</span><span class="n">i</span><span class="p">];</span> <span class="p">}</span>
		<span class="p">}</span>
		<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">C</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">nC</span> <span class="o">+=</span> <span class="p">(</span><span class="n">C</span><span class="p">[</span><span class="n">C</span><span class="p">.</span><span class="n">size</span><span class="p">()</span> <span class="o">-</span> <span class="n">i</span> <span class="o">-</span> <span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="sc">&#39;A&#39;</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="n">nHex</span><span class="p">;</span>
			<span class="n">nHex</span> <span class="o">*=</span> <span class="mi">26</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="n">strRet</span> <span class="o">+=</span> <span class="s">&#34;R&#34;</span> <span class="o">+</span> <span class="n">R</span> <span class="o">+</span> <span class="s">&#34;C&#34;</span><span class="p">;</span>
		<span class="n">string</span> <span class="n">strTmp</span> <span class="o">=</span> <span class="s">&#34;&#34;</span><span class="p">;</span>
		<span class="k">while</span><span class="p">(</span><span class="n">nC</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">strTmp</span> <span class="o">=</span> <span class="p">(</span><span class="kt">char</span><span class="p">)(</span><span class="n">nC</span> <span class="o">%</span> <span class="mi">10</span> <span class="o">+</span> <span class="mi">48</span><span class="p">)</span> <span class="o">+</span> <span class="n">strTmp</span><span class="p">;</span>
			<span class="n">nC</span> <span class="o">/=</span> <span class="mi">10</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="n">strRet</span> <span class="o">+=</span> <span class="n">strTmp</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">else</span>
	<span class="p">{</span>
		<span class="kt">int</span> <span class="n">C</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
		<span class="kt">int</span> <span class="n">nPos</span> <span class="o">=</span> <span class="n">x</span><span class="p">.</span><span class="n">find</span><span class="p">(</span><span class="sc">&#39;C&#39;</span><span class="p">);</span>
		<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">nPos</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">x</span><span class="p">.</span><span class="n">size</span><span class="p">();</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">C</span> <span class="o">*=</span> <span class="mi">10</span><span class="p">;</span>
			<span class="n">C</span> <span class="o">+=</span> <span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">-</span> <span class="sc">&#39;0&#39;</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="n">string</span> <span class="n">strTmp</span> <span class="o">=</span> <span class="s">&#34;&#34;</span><span class="p">;</span>
		<span class="k">while</span><span class="p">(</span><span class="n">C</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="k">if</span><span class="p">(</span><span class="n">C</span> <span class="o">%</span> <span class="mi">26</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="n">strTmp</span> <span class="o">=</span> <span class="sc">&#39;Z&#39;</span> <span class="o">+</span> <span class="n">strTmp</span><span class="p">;</span> <span class="n">C</span> <span class="o">/=</span> <span class="mi">26</span><span class="p">;</span> <span class="n">C</span><span class="o">--</span><span class="p">;</span> <span class="k">continue</span><span class="p">;</span> <span class="p">}</span>
			<span class="n">strTmp</span> <span class="o">=</span> <span class="p">(</span><span class="kt">char</span><span class="p">)((</span><span class="n">C</span> <span class="o">%</span> <span class="mi">26</span><span class="p">)</span> <span class="o">+</span> <span class="sc">&#39;A&#39;</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">+</span> <span class="n">strTmp</span><span class="p">;</span>
			<span class="n">C</span> <span class="o">/=</span> <span class="mi">26</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="n">strRet</span> <span class="o">=</span> <span class="n">strTmp</span> <span class="o">+</span> <span class="n">x</span><span class="p">.</span><span class="n">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">nPos</span> <span class="o">-</span> <span class="mi">1</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="n">strRet</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div>]]></description></item><item><title>Codeforces 1A - Theatre Square</title><link>https://example.com/2014/07/codeforces-1a-theatre-square/</link><pubDate>Sun, 20 Jul 2014 09:58:00 +0800</pubDate><author>作者</author><guid>https://example.com/2014/07/codeforces-1a-theatre-square/</guid><description><![CDATA[<p><a href="https://codeforces.com/contest/1/problem/A" target="_blank" rel="noopener noreffer">1A Theatre Square</a></p>
<h2 id="analysis">Analysis</h2>
<p>Calculate the number of flagstones used to cover the length and width, then multiply them to get the correct answer.</p>
<p>Notice: Pay attention to the data range. Use <code>unsigned long long</code>.</p>
<h2 id="solution">Solution</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-cpp" data-lang="cpp"><span class="cp">#include</span> <span class="cpf">&lt;iostream&gt;</span><span class="cp">
</span><span class="cp"></span>
<span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
    <span class="kt">unsigned</span> <span class="kt">long</span> <span class="kt">long</span> <span class="n">n</span><span class="p">,</span> <span class="n">m</span><span class="p">,</span> <span class="n">a</span><span class="p">,</span> <span class="n">ans</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">n</span> <span class="o">&gt;&gt;</span> <span class="n">m</span> <span class="o">&gt;&gt;</span> <span class="n">a</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span><span class="n">n</span> <span class="o">%</span> <span class="n">a</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="n">n</span> <span class="o">/=</span> <span class="n">a</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">else</span> <span class="p">{</span> <span class="n">n</span> <span class="o">=</span> <span class="n">n</span> <span class="o">/</span> <span class="n">a</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">if</span><span class="p">(</span><span class="n">m</span> <span class="o">%</span> <span class="n">a</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span> <span class="n">m</span> <span class="o">/=</span> <span class="n">a</span><span class="p">;</span> <span class="p">}</span>
    <span class="k">else</span> <span class="p">{</span> <span class="n">m</span> <span class="o">=</span> <span class="n">m</span> <span class="o">/</span> <span class="n">a</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span> <span class="p">}</span> 
    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">n</span> <span class="o">*</span> <span class="n">m</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span> 
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span> 
<span class="p">}</span> 
</code></pre></td></tr></table>
</div>
</div>]]></description></item></channel></rss>