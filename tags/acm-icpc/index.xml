<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>ACM-ICPC - 标签 - 寸方斋</title><link>https://example.com/tags/acm-icpc/</link><description>ACM-ICPC - 标签 - 寸方斋</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>suda.ivywk@gmail.com (Kai Wang)</managingEditor><webMaster>suda.ivywk@gmail.com (Kai Wang)</webMaster><copyright>本作品采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可</copyright><lastBuildDate>Tue, 05 Apr 2016 22:40:00 +0800</lastBuildDate><atom:link href="https://example.com/tags/acm-icpc/" rel="self" type="application/rss+xml"/><item><title>再见了，ACM-ICPC</title><link>https://example.com/2016/04/%E5%86%8D%E8%A7%81%E4%BA%86acm-icpc/</link><pubDate>Tue, 05 Apr 2016 22:40:00 +0800</pubDate><author>作者</author><guid>https://example.com/2016/04/%E5%86%8D%E8%A7%81%E4%BA%86acm-icpc/</guid><description>终于还是来到了这一天，当双手在键盘上敲下这些文字的时候，竟有些颤抖。尽管曾经不止一次的思考过退役后的场景，也做足了充分的思想准备，但当这一刻</description></item><item><title>记 2015 ACM-ICPC亚洲区域赛（长春站、北京站）</title><link>https://example.com/2015/11/%E8%AE%B0-2015-acm-icpc%E4%BA%9A%E6%B4%B2%E5%8C%BA%E5%9F%9F%E8%B5%9B%E9%95%BF%E6%98%A5%E7%AB%99%E5%8C%97%E4%BA%AC%E7%AB%99/</link><pubDate>Fri, 20 Nov 2015 21:50:00 +0800</pubDate><author>作者</author><guid>https://example.com/2015/11/%E8%AE%B0-2015-acm-icpc%E4%BA%9A%E6%B4%B2%E5%8C%BA%E5%9F%9F%E8%B5%9B%E9%95%BF%E6%98%A5%E7%AB%99%E5%8C%97%E4%BA%AC%E7%AB%99/</guid><description>细细想来，已经有近四个月没有更新过博客，上一次还是在 7 月份。既然这样，那就从那时候讲起吧。 整个暑假，绝大部分时间在参加 ACM 训练，除此之外，还参</description></item><item><title>SGU 144 - Meeting</title><link>https://example.com/2015/07/sgu-144-meeting/</link><pubDate>Wed, 22 Jul 2015 20:46:00 +0800</pubDate><author>作者</author><guid>https://example.com/2015/07/sgu-144-meeting/</guid><description>Description Two of the three members of the winning team of one of the ACM regional contests are going to meet in order to train for the upcoming World Finals. They decided that they will meet sometime between $X$ o&amp;rsquo;clock and $Y$ o&amp;rsquo;clock. Because they never get anywhere on time (they were late even on the day of the regional contest), they did not set an exact time when they</description></item><item><title>SGU 116 - Index of super-prime</title><link>https://example.com/2015/07/sgu-116-index-of-super-prime/</link><pubDate>Mon, 20 Jul 2015 13:39:00 +0800</pubDate><author>作者</author><guid>https://example.com/2015/07/sgu-116-index-of-super-prime/</guid><description>Description Let $P_1, P_2,\cdots ,P_N,\cdots$ be a sequence of prime numbers. Super-prime number is such a prime number that its current number in prime numbers sequence is a prime number too. For example, 3 is a super-prime number, but 7 is not. Index of super-prime for number is 0 iff it is impossible to present it as a sum of few (maybe one) super-prime numbers, and if such presentation exists,</description></item><item><title>专题一、简单搜索 - Virtual Judge</title><link>https://example.com/2015/06/%E4%B8%93%E9%A2%98%E4%B8%80%E7%AE%80%E5%8D%95%E6%90%9C%E7%B4%A2-virtual-judge/</link><pubDate>Mon, 08 Jun 2015 21:57:00 +0800</pubDate><author>作者</author><guid>https://example.com/2015/06/%E4%B8%93%E9%A2%98%E4%B8%80%E7%AE%80%E5%8D%95%E6%90%9C%E7%B4%A2-virtual-judge/</guid><description>很久以前刷完了 Virtual Judge 上的简单搜索专题，现总结如下： POJ 1321 由于题目的数据范围比较小，可以直接 dfs 暴力。读入时记录每个空位的位置，保存在 pX[] 以及 pY[] 数组中</description></item><item><title>记 2015 ACM-ICPC 上海大都会赛</title><link>https://example.com/2015/05/%E8%AE%B0-2015-acm-icpc-%E4%B8%8A%E6%B5%B7%E5%A4%A7%E9%83%BD%E4%BC%9A%E8%B5%9B/</link><pubDate>Sat, 30 May 2015 09:46:00 +0800</pubDate><author>作者</author><guid>https://example.com/2015/05/%E8%AE%B0-2015-acm-icpc-%E4%B8%8A%E6%B5%B7%E5%A4%A7%E9%83%BD%E4%BC%9A%E8%B5%9B/</guid><description>到今天为止，距离 2015 ACM 国际大学生程序设计竞赛上海大都会赛结束已经快有一个星期了，趁着记忆中暂存的些许余温，将其记录下来。 我们从上周四开始，放下</description></item><item><title>SGU 114 - Telecasting station</title><link>https://example.com/2015/03/sgu-114-telecasting-station/</link><pubDate>Sat, 07 Mar 2015 19:37:00 +0800</pubDate><author>作者</author><guid>https://example.com/2015/03/sgu-114-telecasting-station/</guid><description>Description Every city in Berland is situated on $Ox$ axis. The government of the country decided to build new telecasting station. After many experiments Berland scientists came to a conclusion that in any city citizens displeasure is equal to product of citizens amount in it by distance between city and TV-station. Find such point on $Ox$ axis for station so that sum of displeasures of all cities is minimal. Input</description></item><item><title>SGU 222 - Little Rooks</title><link>https://example.com/2015/03/sgu-222-little-rooks/</link><pubDate>Sat, 07 Mar 2015 14:26:00 +0800</pubDate><author>作者</author><guid>https://example.com/2015/03/sgu-222-little-rooks/</guid><description>Description Inspired by a &amp;ldquo;Little Bishops&amp;rdquo; problem, Petya now wants to solve problem for rooks. A rook is a piece used in the game of chess which is played on a board of square grids. A rook can only move horizontally and vertically from its current position and two rooks attack each other if one is on the path of the other. Given two numbers $n$ and $k$, your job</description></item><item><title>SGU 154 - Factorial</title><link>https://example.com/2015/03/sgu-154-factorial/</link><pubDate>Sat, 07 Mar 2015 13:18:00 +0800</pubDate><author>作者</author><guid>https://example.com/2015/03/sgu-154-factorial/</guid><description>Description You task is to find minimal natural number $N$, so that $N!$ contains exactly $Q$ zeroes on the trail in decimal notation. As you know $N! = 1\cdot2\cdots N$. For example, $5! = 120$, 120 contains one zero on the trail. Input One number $Q$ written in the input ($0\leq Q\leq 10^8$). Output Write &amp;ldquo;No solution&amp;rdquo;, if there is no such number $N$, and $N$ otherwise. Sample Input 1</description></item><item><title>SGU 130 - Circle</title><link>https://example.com/2015/03/sgu-130-circle/</link><pubDate>Sat, 07 Mar 2015 11:04:00 +0800</pubDate><author>作者</author><guid>https://example.com/2015/03/sgu-130-circle/</guid><description>Description On a circle border there are $2k$ different points $A_1, A_2, \cdots , A_{2k}$, located contiguously. These points connect $k$ chords so that each of points $A_1, A_2, \cdots, A_{2k}$ is the end point of one chord. Chords divide the circle into parts. You have to find $N$ - the number of different ways to connect the points so that the circle is broken into minimal possible amount of</description></item></channel></rss>