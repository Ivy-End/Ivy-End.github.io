<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>CSharp - 标签 - 退思轩</title><link>https://kwang.life/tags/csharp/</link><description>CSharp - 标签 - 退思轩</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>suda.ivywk@gmail.com (Kai Wang)</managingEditor><webMaster>suda.ivywk@gmail.com (Kai Wang)</webMaster><copyright>本作品采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可</copyright><lastBuildDate>Sat, 02 May 2015 11:12:00 +0800</lastBuildDate><atom:link href="https://kwang.life/tags/csharp/" rel="self" type="application/rss+xml"/><item><title>扫雷游戏制作过程（CSharp 描述）：第八节、整体完善</title><link>https://kwang.life/2015/05/%E6%89%AB%E9%9B%B7%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bcsharp-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E5%85%AB%E8%8A%82%E6%95%B4%E4%BD%93%E5%AE%8C%E5%96%84/</link><pubDate>Sat, 02 May 2015 11:12:00 +0800</pubDate><author>作者</author><guid>https://kwang.life/2015/05/%E6%89%AB%E9%9B%B7%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bcsharp-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E5%85%AB%E8%8A%82%E6%95%B4%E4%BD%93%E5%AE%8C%E5%96%84/</guid><description><![CDATA[<p>这一节我们将介绍结束游戏的方法，以及一些整体方面的完善。首先考虑失败的情况，它会将所有的地雷都显示出来。我们新建一个 GameLost 函数：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">    <span class="k">private</span> <span class="k">void</span> <span class="n">GameLost</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span><span class="p">&lt;=</span> <span class="n">nWidth</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
        <span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">j</span><span class="p">&lt;=</span> <span class="n">nHeight</span><span class="p">;</span> <span class="n">j</span><span class="p">++)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="p">-</span><span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span> <span class="p">||</span> <span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">))</span>   <span class="c1">// 未点开或者标记为问号的雷
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>   <span class="c1">// 点开该地雷
</span><span class="c1"></span>                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
    <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>在游戏结束的地方调用 GameLost 函数，因为我们上一节中讲述的游戏结束都是失败的情况：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">                        <span class="k">if</span><span class="p">(</span><span class="n">nFlagCnt</span> <span class="p">==</span> <span class="n">nSysCnt</span> <span class="p">||</span> <span class="n">nFlagCnt</span> <span class="p">+</span> <span class="n">nDoubtCnt</span> <span class="p">==</span> <span class="n">nSysCnt</span><span class="p">)</span> <span class="c1">// 打开九宫格
</span><span class="c1"></span>                        <span class="p">{</span>
                            <span class="kt">bool</span> <span class="n">bFlag</span> <span class="p">=</span> <span class="n">OpenMine</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">);</span>
                            <span class="k">if</span><span class="p">(!</span><span class="n">bFlag</span><span class="p">)</span>  <span class="c1">// 周围有地雷
</span><span class="c1"></span>                            <span class="p">{</span>
                                <span class="c1">// 结束游戏
</span><span class="c1"></span>                                <span class="n">GameLost</span><span class="p">();</span>
                            <span class="p">}</span>
                        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">                <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">!=</span> <span class="p">-</span><span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="n">dfs</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">);</span>
                <span class="p">}</span>
                <span class="k">else</span>
                <span class="p">{</span>
                    <span class="c1">// 地雷，游戏结束
</span><span class="c1"></span>                    <span class="n">GameLost</span><span class="p">();</span>
                <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>我们发现游戏结束的时候，虽然所有的格子都打开了，但是并没有显示出地雷的图标，我们将地雷的图标调整为 20×20，并且按照上一节的方法将它将入到 Resources.resx 文件中。同时修改 PaintGame 函数点开部分的代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">                    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">1</span><span class="p">)</span> <span class="c1">// 点开
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="c1">// 绘制背景
</span><span class="c1"></span>                        <span class="k">if</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">==</span> <span class="n">i</span> <span class="p">&amp;&amp;</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span> <span class="p">==</span> <span class="n">j</span><span class="p">)</span>
                        <span class="p">{</span>
                            <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">FromArgb</span><span class="p">(</span><span class="m">100</span><span class="p">,</span> <span class="n">Color</span><span class="p">.</span><span class="n">LightGray</span><span class="p">)),</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>
                        <span class="p">}</span>
                        <span class="k">else</span>
                        <span class="p">{</span>
                        <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">LightGray</span><span class="p">,</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>
                        <span class="p">}</span>
                        <span class="c1">// 绘制数字
</span><span class="c1"></span>                        <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">!=</span> <span class="m">0</span><span class="p">)</span>
                        <span class="p">{</span>
                            <span class="n">Brush</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">Blue</span><span class="p">);</span>   <span class="c1">// 定义钢笔
</span><span class="c1"></span>                            <span class="c1">// 各个地雷数目的颜色
</span><span class="c1"></span>                            <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">2</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">Green</span><span class="p">);</span> <span class="p">}</span>
                            <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">Red</span><span class="p">);</span> <span class="p">}</span>
                            <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">4</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">DarkBlue</span><span class="p">);</span> <span class="p">}</span>
                            <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">5</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">DarkRed</span><span class="p">);</span> <span class="p">}</span>
                            <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">6</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">DarkSeaGreen</span><span class="p">);</span> <span class="p">}</span>
                            <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">7</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">Black</span><span class="p">);</span> <span class="p">}</span>
                            <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">8</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">DarkGray</span><span class="p">);</span> <span class="p">}</span>
                            <span class="n">SizeF</span> <span class="n">Size</span> <span class="p">=</span> <span class="n">g</span><span class="p">.</span><span class="n">MeasureString</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">].</span><span class="n">ToString</span><span class="p">(),</span> <span class="k">new</span> <span class="n">Font</span><span class="p">(</span><span class="s">&#34;Consolas&#34;</span><span class="p">,</span> <span class="m">16</span><span class="p">));</span>
                            <span class="n">g</span><span class="p">.</span><span class="n">DrawString</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">].</span><span class="n">ToString</span><span class="p">(),</span> <span class="k">new</span> <span class="n">Font</span><span class="p">(</span><span class="s">&#34;Consolas&#34;</span><span class="p">,</span> <span class="m">16</span><span class="p">),</span> <span class="n">DrawBrush</span><span class="p">,</span> <span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span> <span class="p">+</span> <span class="p">(</span><span class="m">32</span> <span class="p">-</span> <span class="n">Size</span><span class="p">.</span><span class="n">Width</span><span class="p">)</span> <span class="p">/</span> <span class="m">2</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span> <span class="p">+</span> <span class="p">(</span><span class="m">32</span> <span class="p">-</span> <span class="n">Size</span><span class="p">.</span><span class="n">Height</span><span class="p">)</span> <span class="p">/</span> <span class="m">2</span><span class="p">);</span>
                        <span class="p">}</span>
                        <span class="c1">// 绘制地雷
</span><span class="c1"></span>                        <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="p">-</span><span class="m">1</span><span class="p">)</span>
                        <span class="p">{</span>
                            <span class="n">g</span><span class="p">.</span><span class="n">DrawImage</span><span class="p">(</span><span class="n">Properties</span><span class="p">.</span><span class="n">Resources</span><span class="p">.</span><span class="n">Mine</span><span class="p">,</span> <span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span> <span class="p">+</span> <span class="m">4</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span> <span class="p">+</span> <span class="m">2</span><span class="p">);</span>   <span class="c1">// 绘制地雷
</span><span class="c1"></span>                        <span class="p">}</span>
                    <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>此时，我们再次测试的时候，就会看到地雷的图标了：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e5%85%ab%e8%8a%82%e3%80%81%e6%95%b4%e4%bd%93%e5%ae%8c%e5%96%84/mineSweeper_8_05.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第八节、整体完善/mineSweeper_8_05.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第八节、整体完善/mineSweeper_8_05.png" data-sub-html="<h2>阶段性效果</h2>">
        
    </a><figcaption class="image-caption">阶段性效果</figcaption>
    </figure>
<p>然而，我们发现有一个问题，当我们单击数字的时候，会把所有的地雷都显示出来，也就是游戏结束。我们修改左击的事件：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">bMouseLeft</span><span class="p">)</span>   <span class="c1">// 左键被按下
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">!=</span> <span class="p">-</span><span class="m">1</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>
                    <span class="p">{</span>
                        <span class="n">dfs</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">);</span>
                    <span class="p">}</span>
                <span class="p">}</span>
                <span class="k">else</span>
                <span class="p">{</span>
                    <span class="c1">// 地雷，游戏结束
</span><span class="c1"></span>                    <span class="n">GameLost</span><span class="p">();</span>
                <span class="p">}</span>
            <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>这时候，刚才的问题就得到了修复。但是我们却又发现了一个问题——游戏结束的时候，还是可以继续单击雷区，打开区域。为此，我们增加一个变量检测游戏是否结束，如果结束，则任何按键都视为无效。首先定义一个变量：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="kt">bool</span> <span class="n">bGame</span><span class="p">;</span> <span class="c1">// 游戏是否结束
</span></code></pre></td></tr></table>
</div>
</div><p>我们在游戏开始的时候对它进行初始化，在 New Game 菜单事件处理函数的末尾修改代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">            <span class="n">Label_Mine</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="n">nMineCnt</span><span class="p">.</span><span class="n">ToString</span><span class="p">();</span>  <span class="c1">// 显示地雷数目
</span><span class="c1"></span>            <span class="n">Label_Timer</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="s">&#34;0&#34;</span><span class="p">;</span> <span class="c1">// 计时器清零
</span><span class="c1"></span>            <span class="n">Timer_Main</span><span class="p">.</span><span class="n">Enable</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>  <span class="c1">// 启动计时器计时
</span><span class="c1"></span>            <span class="n">bGame</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>  <span class="c1">// 游戏暂未结束
</span></code></pre></td></tr></table>
</div>
</div><p>将 GameLost 函数修改如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">    <span class="k">private</span> <span class="k">void</span> <span class="n">GameLost</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span><span class="p">&lt;=</span> <span class="n">nWidth</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
        <span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">j</span><span class="p">&lt;=</span> <span class="n">nHeight</span><span class="p">;</span> <span class="n">j</span><span class="p">++)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="p">-</span><span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span> <span class="p">||</span> <span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">))</span>   <span class="c1">// 未点开或者标记为问号的雷
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>   <span class="c1">// 点开该地雷
</span><span class="c1"></span>                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="n">bGame</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
    <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>同时修改 MouseUp 事件，将开头代码修改如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Form_Main_MouseUp</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">MouseEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">==</span> <span class="m">0</span> <span class="p">&amp;&amp;</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span> <span class="p">==</span> <span class="m">0</span> <span class="p">||</span> <span class="n">bGame</span><span class="p">)</span>  <span class="c1">// 不在地雷区域或游戏结束
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">return</span><span class="p">;</span>     <span class="c1">// 不做任何处理
</span><span class="c1"></span>            <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>至此，这个问题已经得到了修复。我们可以运行查看结果。</p>
<p>但是，我们现在还有一个判断游戏胜利的函数没有写，我们在每次打开地雷区域的时候判断游戏者是否胜利，首先定义一个 GameWin 函数如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">GameWin</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="kt">int</span> <span class="n">nCnt</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>   <span class="c1">// 用户标记红旗数目、问号数目、以及无标记未点开区域总数
</span><span class="c1"></span>            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;=</span> <span class="n">nWidth</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
            <span class="p">{</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">j</span> <span class="p">&lt;=</span> <span class="n">nHeight</span><span class="p">;</span> <span class="n">j</span><span class="p">++)</span>
                <span class="p">{</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span> <span class="p">||</span> <span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">2</span> <span class="p">||</span> <span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">)</span> <span class="c1">// 对应标记未点开区域、红旗区域、问号区域
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">nCnt</span><span class="p">++;</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="n">nCnt</span> <span class="p">==</span> <span class="n">nMineCnt</span><span class="p">)</span> <span class="c1">// 胜利条件
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="n">Timer_Main</span><span class="p">.</span><span class="n">Enabled</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span> <span class="c1">// 关闭计时器
</span><span class="c1"></span>                <span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="n">String</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&#34;游戏胜利，耗时：{0} 秒&#34;</span><span class="p">,</span> <span class="n">Label_Timer</span><span class="p">.</span><span class="n">Text</span><span class="p">),</span> <span class="s">&#34;提示&#34;</span><span class="p">,</span> <span class="n">MessageBoxButtons</span><span class="p">.</span><span class="n">OK</span><span class="p">);</span>
                <span class="c1">// 更新记录
</span><span class="c1"></span>                <span class="k">if</span> <span class="p">(</span><span class="n">nWidth</span> <span class="p">==</span> <span class="m">10</span> <span class="p">&amp;&amp;</span> <span class="n">nHeight</span> <span class="p">==</span> <span class="m">10</span> <span class="p">&amp;&amp;</span> <span class="n">nMineCnt</span> <span class="p">==</span> <span class="m">10</span><span class="p">)</span> <span class="c1">// 初级
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="k">if</span> <span class="p">(</span><span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Beginner</span> <span class="p">&gt;</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToInt32</span><span class="p">(</span><span class="n">Label_Timer</span><span class="p">.</span><span class="n">Text</span><span class="p">))</span>   <span class="c1">// 更新记录
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Beginner</span> <span class="p">=</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToInt32</span><span class="p">(</span><span class="n">Label_Timer</span><span class="p">.</span><span class="n">Text</span><span class="p">)</span>
                        <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Beginner</span><span class="p">.</span><span class="n">Save</span><span class="p">();</span>
                    <span class="p">}</span>
                <span class="p">}</span>
                <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">nWidth</span> <span class="p">==</span> <span class="m">16</span> <span class="p">&amp;&amp;</span> <span class="n">nHeight</span> <span class="p">==</span> <span class="m">16</span> <span class="p">&amp;&amp;</span> <span class="n">nMineCnt</span> <span class="p">==</span> <span class="m">40</span><span class="p">)</span> <span class="c1">// 中级
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="k">if</span> <span class="p">(</span><span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Intermediate</span> <span class="p">&gt;</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToInt32</span><span class="p">(</span><span class="n">Label_Timer</span><span class="p">.</span><span class="n">Text</span><span class="p">))</span>   <span class="c1">// 更新记录
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Intermediate</span> <span class="p">=</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToInt32</span><span class="p">(</span><span class="n">Label_Timer</span><span class="p">.</span><span class="n">Text</span><span class="p">)</span>
                        <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Intermediate</span><span class="p">.</span><span class="n">Save</span><span class="p">();</span>
                    <span class="p">}</span>
                <span class="p">}</span>
                <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">nWidth</span> <span class="p">==</span> <span class="m">30</span> <span class="p">&amp;&amp;</span> <span class="n">nHeight</span> <span class="p">==</span> <span class="m">16</span> <span class="p">&amp;&amp;</span> <span class="n">nMineCnt</span> <span class="p">==</span> <span class="m">40</span><span class="p">)</span> <span class="c1">// 高级
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="k">if</span> <span class="p">(</span><span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Expert</span> <span class="p">&gt;</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToInt32</span><span class="p">(</span><span class="n">Label_Timer</span><span class="p">.</span><span class="n">Text</span><span class="p">))</span>   <span class="c1">// 更新记录
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Expert</span> <span class="p">=</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToInt32</span><span class="p">(</span><span class="n">Label_Timer</span><span class="p">.</span><span class="n">Text</span><span class="p">)</span>
                        <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Expert</span><span class="p">.</span><span class="n">Save</span><span class="p">();</span>
                    <span class="p">}</span>
                <span class="p">}</span>
                <span class="n">bGame</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>然后，在MouseUp最后调用该函数：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">            <span class="n">GameWin</span><span class="p">();</span>
            <span class="k">this</span><span class="p">.</span><span class="n">Refresh</span><span class="p">();</span>
            <span class="n">bMouseLeft</span> <span class="p">=</span> <span class="n">bMouseRight</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>此时，我们的游戏基本完成了，但是有时会有这样的问题，左右双击区域的时候，不会显示到数字边界上，我们在 OpenMine 的时候调用一下 dfs 函数即可，将 OpenMine 函数修改如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="n">tool</span> <span class="n">OpenMine</span><span class="p">(</span><span class="kt">int</span> <span class="n">sx</span><span class="p">,</span> <span class="kt">int</span> <span class="n">sy</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">bool</span> <span class="n">bFlag</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>  <span class="c1">// 默认周围无雷
</span><span class="c1"></span>            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="m">8</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
            <span class="p">{</span>
                <span class="c1">// 获取偏移量
</span><span class="c1"></span>                <span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">+</span> <span class="n">dx</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="kt">int</span> <span class="n">y</span> <span class="p">=</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span> <span class="p">+</span> <span class="n">dy</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>  <span class="c1">// 问号
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="n">pState</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>   <span class="c1">// 打开
</span><span class="c1"></span>                    <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">==</span> <span class="p">-</span><span class="m">1</span><span class="p">)</span>   <span class="c1">// 有地雷
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">dfs</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">);</span>
                    <span class="p">}</span>
                    <span class="k">else</span>    <span class="c1">// 有地雷
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">bFlag</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
                        <span class="k">break</span><span class="p">;</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">return</span> <span class="n">bFlag</span><span class="p">;</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>至此，我们的扫雷游戏基本完成了，接下来还需要处理的一个功能是音效，首先搜索音效资源：Bomb、Tick。然后按照之前的方法，将它们添加到 Resources.resx 文件中。</p>
<p>定义两个变量用来播放这两个音效，并且在构造函数中进行初始化，如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="n">System</span><span class="p">.</span><span class="n">Media</span><span class="p">.</span><span class="n">SoundPlayer</span> <span class="n">soundTick</span><span class="p">;</span> <span class="c1">// 计时
</span><span class="c1"></span>        <span class="n">System</span><span class="p">.</span><span class="n">Media</span><span class="p">.</span><span class="n">SoundPlayer</span> <span class="n">soundBomb</span><span class="p">;</span> <span class="c1">// 爆炸
</span></code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">public</span> <span class="n">Form_Main</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">InitializeComponent</span><span class="p">();</span>

            <span class="k">this</span><span class="p">.</span><span class="n">DoubleBuffered</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span> <span class="c1">// 开启双缓冲
</span><span class="c1"></span>
            <span class="c1">// 初始化游戏参数
</span><span class="c1"></span>            <span class="n">nWidth</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Width</span><span class="p">;</span>
            <span class="n">nHeight</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Height</span><span class="p">;</span>
            <span class="n">nMineCnt</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">MineCnt</span><span class="p">;</span>

            <span class="c1">// 初始化
</span><span class="c1"></span>            <span class="n">bMark</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Mark</span><span class="p">;</span>
            <span class="n">bAudio</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Audio</span><span class="p">;</span>
            <span class="n">markMToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="n">bMark</span><span class="p">;</span>
            <span class="n">audioMToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="n">bAudio</span><span class="p">;</span>

            <span class="c1">// 初始化音频
</span><span class="c1"></span>            <span class="n">soundTick</span> <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">Media</span><span class="p">.</span><span class="n">SoundPlayer</span><span class="p">(</span><span class="n">Properties</span><span class="p">.</span><span class="n">Resources</span><span class="p">.</span><span class="n">Tick</span><span class="p">);</span>
            <span class="n">soundBomb</span> <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">Media</span><span class="p">.</span><span class="n">SoundPlayer</span><span class="p">(</span><span class="n">Properties</span><span class="p">.</span><span class="n">Resources</span><span class="p">.</span><span class="n">Bomb</span><span class="p">);</span>

            <span class="n">UpdateSize</span><span class="p">();</span>
            <span class="n">SelectLevel</span><span class="p">();</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>接下来分别在计时器的事件以及 GameLost 函数中添加如下代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">    <span class="k">private</span> <span class="k">void</span> <span class="n">Timer_Main_Tick</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">bAudio</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">soundTick</span><span class="p">.</span><span class="n">Play</span><span class="p">();</span>   <span class="c1">// 播放
</span><span class="c1"></span>        <span class="p">}</span>
        <span class="n">Label_Timer</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">Convert</span><span class="p">.</span><span class="n">ToInt32</span><span class="p">(</span><span class="n">Label_Timer</span><span class="p">.</span><span class="n">Text</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">);</span> <span class="c1">// 自增 1 秒
</span><span class="c1"></span>    <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">    <span class="k">private</span> <span class="k">void</span> <span class="n">GameLost</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span><span class="p">&lt;=</span> <span class="n">nWidth</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
        <span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">j</span><span class="p">&lt;=</span> <span class="n">nHeight</span><span class="p">;</span> <span class="n">j</span><span class="p">++)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="p">-</span><span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span> <span class="p">||</span> <span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">))</span>   <span class="c1">// 未点开或者标记为问号的雷
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>   <span class="c1">// 点开该地雷
</span><span class="c1"></span>                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">if</span><span class="p">(</span><span class="n">bAudio</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">soundBomb</span><span class="p">.</span><span class="n">Play</span><span class="p">();</span>
        <span class="p">}</span>
        <span class="n">bGame</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
    <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>此外，我们还需要将音效的初始默认值设置为 False，只需要将 Setting 文件中的默认值改为 False 即可。此外，我们还需要在 GameLost 的时候停止计时器：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">    <span class="k">private</span> <span class="k">void</span> <span class="n">GameLost</span><span class="p">()</span>
    <span class="p">{</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span><span class="p">&lt;=</span> <span class="n">nWidth</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
        <span class="p">{</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">j</span><span class="p">&lt;=</span> <span class="n">nHeight</span><span class="p">;</span> <span class="n">j</span><span class="p">++)</span>
            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="p">-</span><span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span> <span class="p">||</span> <span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">))</span>   <span class="c1">// 未点开或者标记为问号的雷
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>   <span class="c1">// 点开该地雷
</span><span class="c1"></span>                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
        <span class="k">if</span><span class="p">(</span><span class="n">bAudio</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">soundBomb</span><span class="p">.</span><span class="n">Play</span><span class="p">();</span>
        <span class="p">}</span>
        <span class="n">Timer_Main</span><span class="p">.</span><span class="n">Enabled</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span> <span class="c1">// 停用计时器
</span><span class="c1"></span>        <span class="n">bGame</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
    <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>至此，我们的一个扫雷游戏就制作完成了，效果如下：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e5%85%ab%e8%8a%82%e3%80%81%e6%95%b4%e4%bd%93%e5%ae%8c%e5%96%84/mineSweeper_8_20.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第八节、整体完善/mineSweeper_8_20.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第八节、整体完善/mineSweeper_8_20.png" data-sub-html="<h2>运行效果</h2>">
        
    </a><figcaption class="image-caption">运行效果</figcaption>
    </figure>
<p>但有时我们会发现雷区还没有被完全打开，就已经弹出了游戏结束的对话框，为此，我们只需要在 MouseUp 事件中将刷新和判断游戏胜利的语句换一下次序即可：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">            <span class="k">this</span><span class="p">.</span><span class="n">Refresh</span><span class="p">();</span>
            <span class="n">GameWin</span><span class="p">();</span>
            <span class="n">bMouseLeft</span> <span class="p">=</span> <span class="n">bMouseRight</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><p>测试的时候，我们发现，单击 Rank 对话框中的 Reset 按钮，虽然数据库恢复了默认值，但是显示的值却没有马上恢复默认值，为此，双击 Rank 窗口中的 Reset 按钮，修改它的事件如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Button_Reset_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="c1">// 将标签设置为默认值
</span><span class="c1"></span>            <span class="n">Label_Beginer</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="n">String</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&#34;Beginner:        {0}&#34;</span><span class="p">,</span> <span class="m">999</span><span class="p">);</span>
            <span class="n">Label_Intermeidate</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="n">String</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&#34;Intermediate:        {0}&#34;</span><span class="p">,</span> <span class="m">999</span><span class="p">);</span>
            <span class="n">Label_Expert</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="n">String</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&#34;Expert:        {0}&#34;</span><span class="p">,</span> <span class="m">999</span><span class="p">);</span>

            <span class="c1">// 将所有记录设置为 999 即完成初始化
</span><span class="c1"></span>            <span class="n">Propoerties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Beginner</span> <span class="p">=</span> <span class="m">999</span><span class="p">;</span>
            <span class="n">Propoerties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Intermediate</span> <span class="p">=</span> <span class="m">999</span><span class="p">;</span>
            <span class="n">Propoerties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Export</span> <span class="p">=</span> <span class="m">999</span><span class="p">;</span>
            <span class="n">Propoerties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Save</span><span class="p">();</span>    <span class="c1">// 保存设置
</span><span class="c1"></span>        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>至此，一个较为完善的扫雷游戏就完成了，我将它托管在了 GitHub 上：<a href="https://github.com/Ivy-End/Minesweeper" target="_blank" rel="noopener noreffer">Minesweeper</a>。</p>
]]></description></item><item><title>扫雷游戏制作过程（CSharp 描述）：第七节、内部实现（续）</title><link>https://kwang.life/2015/05/%E6%89%AB%E9%9B%B7%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bcsharp-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E4%B8%83%E8%8A%82%E5%86%85%E9%83%A8%E5%AE%9E%E7%8E%B0%E7%BB%AD/</link><pubDate>Fri, 01 May 2015 22:23:00 +0800</pubDate><author>作者</author><guid>https://kwang.life/2015/05/%E6%89%AB%E9%9B%B7%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bcsharp-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E4%B8%83%E8%8A%82%E5%86%85%E9%83%A8%E5%AE%9E%E7%8E%B0%E7%BB%AD/</guid><description><![CDATA[<p>这一节我们主要讲解扫雷时鼠标单击的事件。我们首先介绍左键单击的事件，分为两种情况——遇到地雷，游戏结束；不是地雷，自动点开相邻的非地雷区域，并且显示对应地雷区域周围地雷的数目。</p>
<p>我们首先需要为 Form_Main 添加 MouseDown 以及 MouseUp 事件，分别用来监测鼠标按下以及弹起的事件信息。再定义两个全局变量，用来标识鼠标左键以及右键是否被按下，代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="kt">bool</span> <span class="n">bMouseLeft</span><span class="p">;</span>    <span class="c1">// 鼠标左键是否被按下
</span><span class="c1"></span>        <span class="kt">bool</span> <span class="n">bMouseRight</span><span class="p">;</span>   <span class="c1">// 鼠标右键是否被按下
</span></code></pre></td></tr></table>
</div>
</div><p>在 MouseDown 事件中输入下面的代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Form_Main_MouseDown</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">MouseEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">Button</span> <span class="p">==</span> <span class="n">MouseButtons</span><span class="p">.</span><span class="n">Left</span><span class="p">)</span>   <span class="c1">// 鼠标左键被按下
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="n">bMouseLeft</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">Button</span> <span class="p">==</span> <span class="n">MouseButtons</span><span class="p">.</span><span class="n">Right</span><span class="p">)</span>  <span class="c1">// 鼠标右键被按下
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="n">bMouseRight</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>在 MouseUp 事件中，我们需要获取鼠标弹起前按下的鼠标按键的状态信息，代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Form_Main_MouseUp</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">MouseEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">bMouseLeft</span> <span class="p">&amp;&amp;</span> <span class="n">BMouseRight</span><span class="p">)</span>   <span class="c1">// 左右键同时按下
</span><span class="c1"></span>            <span class="p">{</span>

            <span class="p">}</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">bMouseLeft</span><span class="p">)</span>   <span class="c1">// 左键被按下
</span><span class="c1"></span>            <span class="p">{</span>
                
            <span class="p">}</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">bMouseRight</span><span class="p">)</span>  <span class="c1">// 右键被按下
</span><span class="c1"></span>            <span class="p">{</span>
                
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>我们首先处理鼠标左键按下的情况，这里分为两种情况，在前文中已经介绍过。但是在处理之前，我们需要获取游戏者单击的是哪个雷区，因此我们需要加入一些用以判断当前鼠标所属区域的代码。但是回顾一下，我们上一节中在 MouseMove 事件中已经获得了当前鼠标所属的区域，并且保存在了全局变量中，因此，我们直接调用即可：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Form_Main_MouseUp</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">MouseEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">==</span> <span class="m">0</span> <span class="p">&amp;&amp;</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>  <span class="c1">// 不在地雷区域
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">return</span><span class="p">;</span>     <span class="c1">// 不做任何处理
</span><span class="c1"></span>            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="n">bMouseLeft</span> <span class="p">&amp;&amp;</span> <span class="n">BMouseRight</span><span class="p">)</span>   <span class="c1">// 左右键同时按下
</span><span class="c1"></span>            <span class="p">{</span>
                
            <span class="p">}</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">bMouseLeft</span><span class="p">)</span>   <span class="c1">// 左键被按下
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">!=</span> <span class="p">-</span><span class="m">1</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="c1">// 非地雷，自动打开周围非地雷区域
</span><span class="c1"></span>                <span class="p">}</span>
                <span class="k">else</span>
                <span class="p">{</span>
                    <span class="c1">// 地雷，游戏结束
</span><span class="c1"></span>                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">bMouseRight</span><span class="p">)</span>  <span class="c1">// 右键被按下
</span><span class="c1"></span>            <span class="p">{</span>
                
            <span class="p">}</span>
            <span class="n">bMouseLeft</span> <span class="p">=</span> <span class="n">bMouseRight</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>我们首先来处理非地雷的情况。也就是说我们需要寻找所有相邻的非地雷区域，这里我们才有深度优先搜索（Depth First Search），首先定义一个函数如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">dfs</span><span class="p">(</span><span class="kt">int</span> <span class="n">sx</span><span class="p">,</span> <span class="kt">int</span> <span class="n">sy</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">pState</span><span class="p">[</span><span class="n">sx</span><span class="p">,</span> <span class="n">sy</span><span class="p">]</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="c1">// 访问该点
</span><span class="c1"></span>            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="m">4</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
            <span class="p">{</span>
                <span class="c1">// 获取相邻点的坐标
</span><span class="c1"></span>                <span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="n">sx</span> <span class="p">+</span> <span class="n">px</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="kt">int</span> <span class="n">y</span> <span class="p">=</span> <span class="n">sy</span> <span class="p">+</span> <span class="n">py</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="k">if</span><span class="p">(</span><span class="n">x</span> <span class="p">&gt;=</span> <span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="n">x</span> <span class="p">&lt;=</span> <span class="n">nWidth</span> <span class="p">&amp;&amp;</span> <span class="n">y</span> <span class="p">&gt;=</span> <span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="n">y</span> <span class="p">&lt;=</span> <span class="n">nHeight</span> <span class="p">&amp;&amp;</span>
                    <span class="n">pMine</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">!=</span> <span class="p">-</span><span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="n">pMine</span><span class="p">[</span><span class="n">sx</span><span class="p">,</span> <span class="n">sy</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span> <span class="p">&amp;&amp;</span>
                    <span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span> <span class="p">||</span> <span class="n">pState</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">))</span> <span class="c1">// 不是地雷，处于地雷区域，且未点开，或者标记为问号
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="n">dfs</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">);</span>  <span class="c1">// 访问该点
</span><span class="c1"></span>                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>在 MouseUp 函数中调用，并且刷新绘图区域：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">bMouseLeft</span><span class="p">)</span>   <span class="c1">// 左键被按下
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">!=</span> <span class="p">-</span><span class="m">1</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="n">dfs</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">);</span>
                <span class="p">}</span>
                <span class="k">else</span>
                <span class="p">{</span>
                    <span class="c1">// 地雷，游戏结束
</span><span class="c1"></span>                <span class="p">}</span>
            <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>此时，我们运行程序，单击雷区，与上一节结束时的程序没有什么区别，因为我们还没有更新绘图函数，用下面的代码更新 PaintGame 函数主循环中的代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="c1">/// &lt;summary&gt;
</span><span class="c1"></span>        <span class="c1">/// 绘制游戏区
</span><span class="c1"></span>        <span class="c1">/// &lt;/summary&gt;
</span><span class="c1"></span>        <span class="k">private</span> <span class="k">void</span> <span class="n">PaintGame</span><span class="p">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">g</span><span class="p">.</span><span class="n">Clear</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">White</span><span class="p">);</span>   <span class="c1">// 清空绘图区
</span><span class="c1"></span>            <span class="c1">// 我们需要使雷区在用户显示的区域上下左右保持 6px 的偏移量，使得整体看起来更加协调
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">nOffsetX</span> <span class="p">=</span> <span class="m">6</span><span class="p">;</span>   <span class="c1">// X 方向偏移量
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">nOffsetY</span> <span class="p">=</span> <span class="m">6</span> <span class="p">+</span> <span class="n">MenuStrip_Main</span><span class="p">.</span><span class="n">Height</span><span class="p">;</span>   <span class="c1">// Y 方向偏移量
</span><span class="c1"></span>            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;=</span> <span class="n">nWidth</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>   <span class="c1">// 绘制行
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">j</span> <span class="p">&lt;=</span> <span class="n">nHeight</span><span class="p">;</span> <span class="n">j</span><span class="p">++)</span>  <span class="c1">// 绘制列
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="c1">// 第一个参数为笔刷，这里采用内置笔刷 SandyBrown
</span><span class="c1"></span>                    <span class="c1">// 第二个参数为方块的参数，这里采用左上角坐标以及长宽的形式给出
</span><span class="c1"></span>                    <span class="c1">// 34 表示每个雷区的大小，再加上偏移量就是我们当前雷区的起始位置，由于要空出 1px 的间隔，因此还需要加 1
</span><span class="c1"></span>                    <span class="c1">// 由此可以得到每个方块在雷区中的位置，然后利用循环绘制出来
</span><span class="c1"></span>
                    <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="c1">// 未点开
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="p">==</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">&amp;&amp;</span> <span class="n">j</span> <span class="p">==</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">)</span>  <span class="c1">// 是否为高亮点
</span><span class="c1"></span>                        <span class="p">{</span>
                            <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">FromArgb</span><span class="p">(</span><span class="m">100</span><span class="p">,</span> <span class="n">Color</span><span class="p">.</span><span class="n">SandyBrown</span><span class="p">)),</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>
                        <span class="p">}</span>
                        <span class="k">else</span> 
                        <span class="p">{</span>
                            <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">SandyBrown</span><span class="p">,</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>   <span class="c1">// 绘制雷区方块
</span><span class="c1"></span>                        <span class="p">}</span>
                    <span class="p">}</span>
                    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">1</span><span class="p">)</span> <span class="c1">// 点开
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">!=</span> <span class="p">-</span><span class="m">1</span><span class="p">)</span>   <span class="c1">// 非地雷
</span><span class="c1"></span>                        <span class="p">{</span>
                            <span class="c1">// 绘制背景
</span><span class="c1"></span>                            <span class="k">if</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">==</span> <span class="n">i</span> <span class="p">&amp;&amp;</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span> <span class="p">==</span> <span class="n">j</span><span class="p">)</span>
                            <span class="p">{</span>
                                <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">FromArgb</span><span class="p">(</span><span class="m">100</span><span class="p">,</span> <span class="n">Color</span><span class="p">.</span><span class="n">LightGray</span><span class="p">)),</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>
                            <span class="p">}</span>
                            <span class="k">else</span>
                            <span class="p">{</span>
                            <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">LightGray</span><span class="p">,</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>
                            <span class="p">}</span>
                            <span class="c1">// 绘制数字
</span><span class="c1"></span>                            <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">!=</span> <span class="m">0</span><span class="p">)</span>
                            <span class="p">{</span>
                                <span class="n">Brush</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">Blue</span><span class="p">);</span>   <span class="c1">// 定义钢笔
</span><span class="c1"></span>                                <span class="c1">// 各个地雷数目的颜色
</span><span class="c1"></span>                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">2</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">Green</span><span class="p">);</span> <span class="p">}</span>
                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">Red</span><span class="p">);</span> <span class="p">}</span>
                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">4</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">DarkBlue</span><span class="p">);</span> <span class="p">}</span>
                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">5</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">DarkRed</span><span class="p">);</span> <span class="p">}</span>
                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">6</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">DarkSeaGreen</span><span class="p">);</span> <span class="p">}</span>
                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">7</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">Black</span><span class="p">);</span> <span class="p">}</span>
                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">8</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">DarkGray</span><span class="p">);</span> <span class="p">}</span>
                                <span class="n">SizeF</span> <span class="n">Size</span> <span class="p">=</span> <span class="n">g</span><span class="p">.</span><span class="n">MeasureString</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">].</span><span class="n">ToString</span><span class="p">(),</span> <span class="k">new</span> <span class="n">Font</span><span class="p">(</span><span class="s">&#34;Consolas&#34;</span><span class="p">,</span> <span class="m">16</span><span class="p">));</span>
                                <span class="n">g</span><span class="p">.</span><span class="n">DrawString</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">].</span><span class="n">ToString</span><span class="p">(),</span> <span class="k">new</span> <span class="n">Font</span><span class="p">(</span><span class="s">&#34;Consolas&#34;</span><span class="p">,</span> <span class="m">16</span><span class="p">),</span> <span class="n">DrawBrush</span><span class="p">,</span> <span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span> <span class="p">+</span> <span class="p">(</span><span class="m">32</span> <span class="p">-</span> <span class="n">Size</span><span class="p">.</span><span class="n">Width</span><span class="p">)</span> <span class="p">/</span> <span class="m">2</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span> <span class="p">+</span> <span class="p">(</span><span class="m">32</span> <span class="p">-</span> <span class="n">Size</span><span class="p">.</span><span class="n">Height</span><span class="p">)</span> <span class="p">/</span> <span class="m">2</span><span class="p">);</span>
                            <span class="p">}</span>
                        <span class="p">}</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>此时，我们再次运行程序，单击某个格子，如果不是地雷，那么就可以看到下面的情况：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%83%e8%8a%82%e3%80%81%e5%86%85%e9%83%a8%e5%ae%9e%e7%8e%b0%ef%bc%88%e7%bb%ad%ef%bc%89/mineSweeper_7_08.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第七节、内部实现（续）/mineSweeper_7_08.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第七节、内部实现（续）/mineSweeper_7_08.png" data-sub-html="<h2>阶段性效果</h2>">
        
    </a><figcaption class="image-caption">阶段性效果</figcaption>
    </figure>
<p>接下来，我们先不处理游戏失败的情况，先来考虑右击事件，它主要用于更改标记，我们在右击函数中加入下面的代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">bMouseRight</span><span class="p">)</span>  <span class="c1">// 右键被按下
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">bMark</span><span class="p">)</span>   <span class="c1">// 可以使用标记
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="c1">// 未点开
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">=</span> <span class="m">2</span><span class="p">;</span> <span class="c1">// 红旗
</span><span class="c1"></span>                    <span class="p">}</span>
                    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">==</span> <span class="m">2</span><span class="p">)</span> <span class="c1">// 红旗
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">=</span> <span class="m">3</span><span class="p">;</span> <span class="c1">// 问号
</span><span class="c1"></span>                    <span class="p">}</span>
                    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">)</span> <span class="c1">// 问号
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="c1">// 未点开
</span><span class="c1"></span>                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">this</span><span class="p">.</span><span class="n">Refresh</span><span class="p">();</span> 
            <span class="n">bMouseLeft</span> <span class="p">=</span> <span class="n">bMouseRight</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>同样，我们现在运行程序还是不会有什么效果。我们需要更新PaintGame函数。再次之前，我们需要将我们的图标信息代入到工程中来，在导入之前我们需要将它们大尺寸分别修改为 24×24 和 20×20，以达到更好的显示效果。</p>
<p>在右侧解决方案资源管理器中找到 Resources.resx 文件，双击打开资源管理界面，将两张图片选中后拖动过去即可完成图片的导入。同时修改 PaintGame 函数的未点开功能部分如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span><span class="lnt">70
</span><span class="lnt">71
</span><span class="lnt">72
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="c1">/// &lt;summary&gt;
</span><span class="c1"></span>        <span class="c1">/// 绘制游戏区
</span><span class="c1"></span>        <span class="c1">/// &lt;/summary&gt;
</span><span class="c1"></span>        <span class="k">private</span> <span class="k">void</span> <span class="n">PaintGame</span><span class="p">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">g</span><span class="p">.</span><span class="n">Clear</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">White</span><span class="p">);</span>   <span class="c1">// 清空绘图区
</span><span class="c1"></span>            <span class="c1">// 我们需要使雷区在用户显示的区域上下左右保持 6px 的偏移量，使得整体看起来更加协调
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">nOffsetX</span> <span class="p">=</span> <span class="m">6</span><span class="p">;</span>   <span class="c1">// X 方向偏移量
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">nOffsetY</span> <span class="p">=</span> <span class="m">6</span> <span class="p">+</span> <span class="n">MenuStrip_Main</span><span class="p">.</span><span class="n">Height</span><span class="p">;</span>   <span class="c1">// Y 方向偏移量
</span><span class="c1"></span>            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;=</span> <span class="n">nWidth</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>   <span class="c1">// 绘制行
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">j</span> <span class="p">&lt;=</span> <span class="n">nHeight</span><span class="p">;</span> <span class="n">j</span><span class="p">++)</span>  <span class="c1">// 绘制列
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="c1">// 第一个参数为笔刷，这里采用内置笔刷 SandyBrown
</span><span class="c1"></span>                    <span class="c1">// 第二个参数为方块的参数，这里采用左上角坐标以及长宽的形式给出
</span><span class="c1"></span>                    <span class="c1">// 34 表示每个雷区的大小，再加上偏移量就是我们当前雷区的起始位置，由于要空出 1px 的间隔，因此还需要加 1
</span><span class="c1"></span>                    <span class="c1">// 由此可以得到每个方块在雷区中的位置，然后利用循环绘制出来
</span><span class="c1"></span>
                    <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="c1">// 未点开
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="c1">// 绘制背景
</span><span class="c1"></span>                        <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="p">==</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">&amp;&amp;</span> <span class="n">j</span> <span class="p">==</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">)</span>  <span class="c1">// 是否为高亮点
</span><span class="c1"></span>                        <span class="p">{</span>
                            <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">FromArgb</span><span class="p">(</span><span class="m">100</span><span class="p">,</span> <span class="n">Color</span><span class="p">.</span><span class="n">SandyBrown</span><span class="p">)),</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>
                        <span class="p">}</span>
                        <span class="k">else</span> 
                        <span class="p">{</span>
                            <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">SandyBrown</span><span class="p">,</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>   <span class="c1">// 绘制雷区方块
</span><span class="c1"></span>                        <span class="p">}</span>
                        <span class="c1">// 绘制标记
</span><span class="c1"></span>                        <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">2</span><span class="p">)</span>
                        <span class="p">{</span>
                            <span class="n">g</span><span class="p">.</span><span class="n">DrawImage</span><span class="p">(</span><span class="n">Properties</span><span class="p">.</span><span class="n">Resources</span><span class="p">.</span><span class="n">Flag</span><span class="p">,</span> <span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span> <span class="p">+</span> <span class="m">4</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span> <span class="p">+</span> <span class="m">2</span><span class="p">);</span>   <span class="c1">// 绘制红旗
</span><span class="c1"></span>                        <span class="p">}</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">)</span>
                        <span class="p">{</span>
                            <span class="n">g</span><span class="p">.</span><span class="n">DrawImage</span><span class="p">(</span><span class="n">Properties</span><span class="p">.</span><span class="n">Resources</span><span class="p">.</span><span class="n">Doubt</span><span class="p">,</span> <span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span> <span class="p">+</span> <span class="m">4</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span> <span class="p">+</span> <span class="m">2</span><span class="p">);</span>   <span class="c1">// 绘制问号
</span><span class="c1"></span>                        <span class="p">}</span>
                    <span class="p">}</span>
                    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">1</span><span class="p">)</span> <span class="c1">// 点开
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">!=</span> <span class="p">-</span><span class="m">1</span><span class="p">)</span>   <span class="c1">// 非地雷
</span><span class="c1"></span>                        <span class="p">{</span>
                            <span class="c1">// 绘制背景
</span><span class="c1"></span>                            <span class="k">if</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">==</span> <span class="n">i</span> <span class="p">&amp;&amp;</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span> <span class="p">==</span> <span class="n">j</span><span class="p">)</span>
                            <span class="p">{</span>
                                <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">FromArgb</span><span class="p">(</span><span class="m">100</span><span class="p">,</span> <span class="n">Color</span><span class="p">.</span><span class="n">LightGray</span><span class="p">)),</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>
                            <span class="p">}</span>
                            <span class="k">else</span>
                            <span class="p">{</span>
                            <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">LightGray</span><span class="p">,</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>
                            <span class="p">}</span>
                            <span class="c1">// 绘制数字
</span><span class="c1"></span>                            <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">!=</span> <span class="m">0</span><span class="p">)</span>
                            <span class="p">{</span>
                                <span class="n">Brush</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">Blue</span><span class="p">);</span>   <span class="c1">// 定义钢笔
</span><span class="c1"></span>                                <span class="c1">// 各个地雷数目的颜色
</span><span class="c1"></span>                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">2</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">Green</span><span class="p">);</span> <span class="p">}</span>
                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">Red</span><span class="p">);</span> <span class="p">}</span>
                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">4</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">DarkBlue</span><span class="p">);</span> <span class="p">}</span>
                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">5</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">DarkRed</span><span class="p">);</span> <span class="p">}</span>
                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">6</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">DarkSeaGreen</span><span class="p">);</span> <span class="p">}</span>
                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">7</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">Black</span><span class="p">);</span> <span class="p">}</span>
                                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">==</span> <span class="m">8</span><span class="p">)</span> <span class="p">{</span> <span class="n">DrawBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">DarkGray</span><span class="p">);</span> <span class="p">}</span>
                                <span class="n">SizeF</span> <span class="n">Size</span> <span class="p">=</span> <span class="n">g</span><span class="p">.</span><span class="n">MeasureString</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">].</span><span class="n">ToString</span><span class="p">(),</span> <span class="k">new</span> <span class="n">Font</span><span class="p">(</span><span class="s">&#34;Consolas&#34;</span><span class="p">,</span> <span class="m">16</span><span class="p">));</span>
                                <span class="n">g</span><span class="p">.</span><span class="n">DrawString</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">].</span><span class="n">ToString</span><span class="p">(),</span> <span class="k">new</span> <span class="n">Font</span><span class="p">(</span><span class="s">&#34;Consolas&#34;</span><span class="p">,</span> <span class="m">16</span><span class="p">),</span> <span class="n">DrawBrush</span><span class="p">,</span> <span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span> <span class="p">+</span> <span class="p">(</span><span class="m">32</span> <span class="p">-</span> <span class="n">Size</span><span class="p">.</span><span class="n">Width</span><span class="p">)</span> <span class="p">/</span> <span class="m">2</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span> <span class="p">+</span> <span class="p">(</span><span class="m">32</span> <span class="p">-</span> <span class="n">Size</span><span class="p">.</span><span class="n">Height</span><span class="p">)</span> <span class="p">/</span> <span class="m">2</span><span class="p">);</span>
                            <span class="p">}</span>
                        <span class="p">}</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>此时，我们发现当我们的区域处于红旗或者问号的时候，左击的时候还是会打开该区域，修改左击代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">bMouseLeft</span><span class="p">)</span>   <span class="c1">// 左键被按下
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">!=</span> <span class="p">-</span><span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="n">dfs</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">);</span>
                <span class="p">}</span>
                <span class="k">else</span>
                <span class="p">{</span>
                    <span class="c1">// 地雷，游戏结束
</span><span class="c1"></span>                <span class="p">}</span>
            <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>此时，我们以及完成了基本的游戏功能了。接下来我们还需要完成一个鼠标左右键同时按下的事件，代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">            <span class="k">if</span><span class="p">(</span><span class="n">bMouseLeft</span> <span class="p">&amp;&amp;</span> <span class="n">BMouseRight</span><span class="p">)</span>   <span class="c1">// 左右键同时按下
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">==</span> <span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="n">pMine</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span>    <span class="c1">// 为数字区域
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="kt">int</span> <span class="n">nFlagCnt</span> <span class="p">=</span> <span class="m">0</span><span class="p">,</span> <span class="n">nDoubtCnt</span> <span class="p">=</span> <span class="m">0</span><span class="p">,</span> <span class="n">nSysCnt</span> <span class="p">=</span> <span class="n">pMine</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">];</span>   <span class="c1">// 记录红旗数目，问号数目，九宫格地雷数目
</span><span class="c1"></span>                    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="m">8</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
                    <span class="p">{</span>
                        <span class="c1">// 获取偏移量
</span><span class="c1"></span>                        <span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">+</span> <span class="n">dx</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                        <span class="kt">int</span> <span class="n">y</span> <span class="p">=</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span> <span class="p">+</span> <span class="n">dy</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">==</span> <span class="m">2</span><span class="p">)</span>   <span class="c1">// 红旗
</span><span class="c1"></span>                        <span class="p">{</span>
                            <span class="n">nFlagCnt</span><span class="p">++;</span>
                        <span class="p">}</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">)</span>   <span class="c1">// 问号
</span><span class="c1"></span>                        <span class="p">{</span>
                            <span class="n">nDoubtCnt</span><span class="p">++;</span>
                        <span class="p">}</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">nFlagCnt</span> <span class="p">==</span> <span class="n">nSysCnt</span> <span class="p">||</span> <span class="n">nFlagCnt</span> <span class="p">+</span> <span class="n">nDoubtCnt</span> <span class="p">==</span> <span class="n">nSysCnt</span><span class="p">)</span> <span class="c1">// 打开九宫格
</span><span class="c1"></span>                        <span class="p">{</span>
                            <span class="kt">bool</span> <span class="n">bFlag</span> <span class="p">=</span> <span class="n">OpenMine</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">);</span>
                            <span class="k">if</span><span class="p">(!</span><span class="n">bFlag</span><span class="p">)</span>  <span class="c1">// 周围有地雷
</span><span class="c1"></span>                            <span class="p">{</span>
                                <span class="c1">// 结束游戏
</span><span class="c1"></span>                            <span class="p">}</span>
                        <span class="p">}</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>这里，我们缺少一个 OpenMine 函数，定义如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="n">tool</span> <span class="n">OpenMine</span><span class="p">(</span><span class="kt">int</span> <span class="n">sx</span><span class="p">,</span> <span class="kt">int</span> <span class="n">sy</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">bool</span> <span class="n">bFlag</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>  <span class="c1">// 默认周围无雷
</span><span class="c1"></span>            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="m">8</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
            <span class="p">{</span>
                <span class="c1">// 获取偏移量
</span><span class="c1"></span>                <span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">+</span> <span class="n">dx</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="kt">int</span> <span class="n">y</span> <span class="p">=</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span> <span class="p">+</span> <span class="n">dy</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>  <span class="c1">// 问号
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="n">pState</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span>   <span class="c1">// 打开
</span><span class="c1"></span>                    <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">==</span> <span class="p">-</span><span class="m">1</span><span class="p">)</span>   <span class="c1">// 有地雷
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">bFlag</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
                        <span class="k">break</span><span class="p">;</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">return</span> <span class="n">bFlag</span><span class="p">;</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>此时，如果我们运行程序，很有可能出现下面的情况，有的地方是一个白色的区域，没有任何内容：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%83%e8%8a%82%e3%80%81%e5%86%85%e9%83%a8%e5%ae%9e%e7%8e%b0%ef%bc%88%e7%bb%ad%ef%bc%89/mineSweeper_7_14.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第七节、内部实现（续）/mineSweeper_7_14.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第七节、内部实现（续）/mineSweeper_7_14.png" data-sub-html="<h2>阶段性效果</h2>">
        
    </a><figcaption class="image-caption">阶段性效果</figcaption>
    </figure>
<p>出现这种结果，也就意味着出现了地雷，因为我们的 PaintGame 函数暂时还没有绘制地雷的功能。</p>
<p>细心的读者可能发现了一个问题，地图上有了一面红旗，底下的状态栏中却仍然显示地雷数目为 10，我们通过修改右击事件来修复这个问题：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span><span class="lnt">69
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Form_Main_MouseUp</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">MouseEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">==</span> <span class="m">0</span> <span class="p">&amp;&amp;</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>  <span class="c1">// 不在地雷区域
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">return</span><span class="p">;</span>     <span class="c1">// 不做任何处理
</span><span class="c1"></span>            <span class="p">}</span>
            <span class="k">if</span><span class="p">(</span><span class="n">bMouseLeft</span> <span class="p">&amp;&amp;</span> <span class="n">BMouseRight</span><span class="p">)</span>   <span class="c1">// 左右键同时按下
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">==</span> <span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="n">pMine</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span>    <span class="c1">// 为数字区域
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="kt">int</span> <span class="n">nFlagCnt</span> <span class="p">=</span> <span class="m">0</span><span class="p">,</span> <span class="n">nDoubtCnt</span> <span class="p">=</span> <span class="m">0</span><span class="p">,</span> <span class="n">nSysCnt</span> <span class="p">=</span> <span class="n">pMine</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">];</span>   <span class="c1">// 记录红旗数目，问号数目，九宫格地雷数目
</span><span class="c1"></span>                    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="m">8</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
                    <span class="p">{</span>
                        <span class="c1">// 获取偏移量
</span><span class="c1"></span>                        <span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">+</span> <span class="n">dx</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                        <span class="kt">int</span> <span class="n">y</span> <span class="p">=</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span> <span class="p">+</span> <span class="n">dy</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">==</span> <span class="m">2</span><span class="p">)</span>   <span class="c1">// 红旗
</span><span class="c1"></span>                        <span class="p">{</span>
                            <span class="n">nFlagCnt</span><span class="p">++;</span>
                        <span class="p">}</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">)</span>   <span class="c1">// 问号
</span><span class="c1"></span>                        <span class="p">{</span>
                            <span class="n">nDoubtCnt</span><span class="p">++;</span>
                        <span class="p">}</span>
                        <span class="k">if</span><span class="p">(</span><span class="n">nFlagCnt</span> <span class="p">==</span> <span class="n">nSysCnt</span> <span class="p">||</span> <span class="n">nFlagCnt</span> <span class="p">+</span> <span class="n">nDoubtCnt</span> <span class="p">==</span> <span class="n">nSysCnt</span><span class="p">)</span> <span class="c1">// 打开九宫格
</span><span class="c1"></span>                        <span class="p">{</span>
                            <span class="kt">bool</span> <span class="n">bFlag</span> <span class="p">=</span> <span class="n">OpenMine</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">);</span>
                            <span class="k">if</span><span class="p">(!</span><span class="n">bFlag</span><span class="p">)</span>  <span class="c1">// 周围有地雷
</span><span class="c1"></span>                            <span class="p">{</span>
                                <span class="c1">// 结束游戏
</span><span class="c1"></span>                            <span class="p">}</span>
                        <span class="p">}</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">bMouseLeft</span><span class="p">)</span>   <span class="c1">// 左键被按下
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">!=</span> <span class="p">-</span><span class="m">1</span> <span class="p">&amp;&amp;</span> <span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="n">dfs</span><span class="p">(</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">);</span>
                <span class="p">}</span>
                <span class="k">else</span>
                <span class="p">{</span>
                    <span class="c1">// 地雷，游戏结束
</span><span class="c1"></span>                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">bMouseRight</span><span class="p">)</span>  <span class="c1">// 右键被按下
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">if</span><span class="p">(</span><span class="n">bMark</span><span class="p">)</span>   <span class="c1">// 可以使用标记
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="c1">// 未点开
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">=</span> <span class="m">2</span><span class="p">;</span> <span class="c1">// 红旗
</span><span class="c1"></span>                        <span class="n">Label_Mine</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">Convert</span><span class="p">.</span><span class="n">ToInt32</span><span class="p">(</span><span class="n">Label_Mine</span><span class="p">.</span><span class="n">Text</span><span class="p">)</span> <span class="p">-</span> <span class="m">1</span><span class="p">);</span>   <span class="c1">// 剩余地雷数目减 1
</span><span class="c1"></span>                    <span class="p">}</span>
                    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">==</span> <span class="m">2</span><span class="p">)</span> <span class="c1">// 红旗
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">=</span> <span class="m">3</span><span class="p">;</span> <span class="c1">// 问号
</span><span class="c1"></span>                        <span class="n">Label_Mine</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">Convert</span><span class="p">.</span><span class="n">ToInt32</span><span class="p">(</span><span class="n">Label_Mine</span><span class="p">.</span><span class="n">Text</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">);</span>   <span class="c1">// 剩余地雷数目加 1
</span><span class="c1"></span>                    <span class="p">}</span>
                    <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">==</span> <span class="m">3</span><span class="p">)</span> <span class="c1">// 问号
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">pState</span><span class="p">[</span><span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">]</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="c1">// 未点开
</span><span class="c1"></span>                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">this</span><span class="p">.</span><span class="n">Refresh</span><span class="p">();</span> 
            <span class="n">bMouseLeft</span> <span class="p">=</span> <span class="n">bMouseRight</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>最终，我们会看到这样的效果：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%83%e8%8a%82%e3%80%81%e5%86%85%e9%83%a8%e5%ae%9e%e7%8e%b0%ef%bc%88%e7%bb%ad%ef%bc%89/mineSweeper_7_16.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第七节、内部实现（续）/mineSweeper_7_16.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第七节、内部实现（续）/mineSweeper_7_16.png" data-sub-html="<h2>运行效果</h2>">
        
    </a><figcaption class="image-caption">运行效果</figcaption>
    </figure>
<p>我们将在下一节中介绍游戏结束的相关内容。</p>
]]></description></item><item><title>扫雷游戏制作过程（CSharp 描述）：第六节、内部实现</title><link>https://kwang.life/2015/04/%E6%89%AB%E9%9B%B7%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bcsharp-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E5%85%AD%E8%8A%82%E5%86%85%E9%83%A8%E5%AE%9E%E7%8E%B0/</link><pubDate>Thu, 30 Apr 2015 21:26:00 +0800</pubDate><author>作者</author><guid>https://kwang.life/2015/04/%E6%89%AB%E9%9B%B7%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bcsharp-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E5%85%AD%E8%8A%82%E5%86%85%E9%83%A8%E5%AE%9E%E7%8E%B0/</guid><description><![CDATA[<p>在进行内部实现之前，我们先来考虑一下扫雷的内部逻辑。首先，我们需要保存每个点上是否有地雷，如果没有地雷，那么要显示与它紧邻的八个格子中一共有多少的地雷。还需保存每个雷区的状态（点开，未点开，红旗，问号）。我们考虑定义两个常量，表示地雷的最大范围：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">const</span> <span class="kt">int</span> <span class="n">MAX_WIDTH</span> <span class="p">=</span> <span class="m">64</span><span class="p">;</span>   <span class="c1">// 最大宽度
</span><span class="c1"></span>        <span class="k">const</span> <span class="kt">int</span> <span class="n">MAX_HEIGHT</span> <span class="p">=</span> <span class="m">32</span><span class="p">;</span>  <span class="c1">// 最大高度
</span></code></pre></td></tr></table>
</div>
</div><p>接下来定义两个数组，用来保存上述两种数据。对于第一类数据，我们使用 -1 表示该区域有地雷，使用数字表示与它紧邻的八个格子中一共有多少地雷；对于第二类数据，我们使用 0 表示未点开，1 表示点开，2 表示红旗，3 表示问号。如下图所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="kt">int</span><span class="p">[,]</span> <span class="n">pMine</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">[</span><span class="n">MAX_WIDTH</span><span class="p">,</span> <span class="n">MAX_HEIGHT</span><span class="p">];</span>  <span class="c1">// 第一类数据
</span><span class="c1"></span>        <span class="kt">int</span><span class="p">[,]</span> <span class="n">pState</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">[</span><span class="n">MAX_WIDTH</span><span class="p">,</span> <span class="n">MAX_HEIGHT</span><span class="p">];</span>  <span class="c1">// 第二类数据
</span></code></pre></td></tr></table>
</div>
</div><p>接下来我们需要初始化游戏数据，双击 New Game 菜单，输入游戏的初始化代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">newGameNToolStripMenuItem_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="c1">// 以下两行清空数组
</span><span class="c1"></span>            <span class="n">Array</span><span class="p">.</span><span class="n">Clear</span><span class="p">(</span><span class="n">pMine</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">pMine</span><span class="p">.</span><span class="n">Length</span><span class="p">);</span>
            <span class="n">Array</span><span class="p">.</span><span class="n">Clear</span><span class="p">(</span><span class="n">pState</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">pState</span><span class="p">.</span><span class="n">Length</span><span class="p">);</span>
            <span class="c1">// 初始化地雷数据
</span><span class="c1"></span>            <span class="n">Random</span> <span class="n">Rand</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Random</span><span class="p">();</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;=</span> <span class="n">nMineCnt</span><span class="p">;</span> <span class="p">)</span> <span class="c1">// 地雷总数
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="c1">// 随机地雷坐标 (x, y)
</span><span class="c1"></span>                <span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="n">Rand</span><span class="p">.</span><span class="n">Next</span><span class="p">(</span><span class="n">nWidth</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">;</span>
                <span class="kt">int</span> <span class="n">y</span> <span class="p">=</span> <span class="n">Rand</span><span class="p">.</span><span class="n">Next</span><span class="p">(</span><span class="n">nHeight</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">;</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">!=</span> <span class="p">-</span><span class="m">1</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="n">pMine</span><span class="p">[</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">]</span> <span class="p">=</span> <span class="p">-</span><span class="m">1</span><span class="p">;</span> <span class="n">i</span><span class="p">++;</span>
                <span class="p">}</span>
            <span class="p">}</span>
            <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span> <span class="p">;</span> <span class="n">i</span> <span class="p">&lt;=</span> <span class="n">nWidth</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>   <span class="c1">// 枚举宽度
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">j</span> <span class="p">&lt;=</span> <span class="n">nHeight</span><span class="p">;</span> <span class="n">j</span><span class="p">++)</span>   <span class="c1">// 枚举高度
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]</span> <span class="p">!=</span> <span class="p">-</span><span class="m">1</span><span class="p">)</span>   <span class="c1">// 不是地雷，显示周围地雷数
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">k</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">k</span> <span class="p">&lt;</span> <span class="m">8</span><span class="p">;</span> <span class="n">k</span><span class="p">++)</span>  <span class="c1">// 八个方向拓展
</span><span class="c1"></span>                        <span class="p">{</span>
                            <span class="k">if</span><span class="p">(</span><span class="n">pMine</span><span class="p">[</span><span class="n">i</span> <span class="p">+</span> <span class="n">dx</span><span class="p">[</span><span class="n">k</span><span class="p">],</span> <span class="n">j</span> <span class="p">+</span> <span class="n">dy</span><span class="p">[</span><span class="n">k</span><span class="p">]]</span> <span class="p">==</span> <span class="p">-</span><span class="m">1</span><span class="p">)</span> <span class="c1">// 找到地雷
</span><span class="c1"></span>                            <span class="p">{</span>
                                <span class="n">pMine</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">]++;</span>  <span class="c1">// 地雷数自增
</span><span class="c1"></span>                            <span class="p">}</span>
                        <span class="p">}</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>其中涉及到了 dx 以及 dy 这两个偏移量常量数组的定义，如下图所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="kt">int</span><span class="p">[]</span> <span class="n">dx</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">[]</span> <span class="p">{</span> <span class="p">-</span><span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="p">-</span><span class="m">1</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="p">-</span><span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">1</span> <span class="p">};</span>     <span class="c1">// x 坐标偏移量
</span><span class="c1"></span>        <span class="kt">int</span><span class="p">[]</span> <span class="n">dy</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">int</span><span class="p">[]</span> <span class="p">{</span> <span class="m">1</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="p">-</span><span class="m">1</span><span class="p">,</span> <span class="p">-</span><span class="m">1</span><span class="p">,</span> <span class="p">-</span><span class="m">1</span> <span class="p">};</span>     <span class="c1">// y 坐标偏移量
</span></code></pre></td></tr></table>
</div>
</div><p>接下来我我们来实现一些特效，例如高亮当前鼠标悬浮位置的雷区，打开设计窗口，添加 MouseMove 事件：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Form_Main_MouseMove</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">MouseEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">X</span> <span class="p">-</span> <span class="m">6</span><span class="p">)</span> <span class="p">/</span> <span class="m">36</span> <span class="p">+</span> <span class="m">1</span><span class="p">;</span>     <span class="c1">// 获取 x 位置
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">y</span> <span class="p">=</span> <span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">Y</span> <span class="p">-</span> <span class="n">MenuStrip_Main</span><span class="p">.</span><span class="n">Height</span> <span class="p">-</span> <span class="m">6</span><span class="p">)</span> <span class="p">/</span> <span class="m">36</span> <span class="p">+</span> <span class="m">1</span><span class="p">;</span>     <span class="c1">// 获取 y 位置
</span><span class="c1"></span>            <span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">=</span> <span class="n">x</span><span class="p">;</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span> <span class="p">=</span> <span class="n">y</span><span class="p">;</span> <span class="c1">// 设置当前高亮点
</span><span class="c1"></span>            <span class="n">PaintGame</span><span class="p">();</span>    <span class="c1">// 重绘雷区
</span><span class="c1"></span>        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>为此，我们还需要定义一个变量 MouseFocus 来记录当前的高亮点，代码分别如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="n">Point</span> <span class="n">MouseFocus</span><span class="p">;</span>   <span class="c1">// 高亮点记录
</span></code></pre></td></tr></table>
</div>
</div><p>同时，我们需要在初始化的时候对它进行清零操作，将下面的清零代码加入到刚才的初始化函数中：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="c1">// 重置高亮点
</span><span class="c1"></span>        <span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><p>接下来我们需要修改 PaintGame 函数，添加对高亮点的绘制：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="c1">/// &lt;summary&gt;
</span><span class="c1"></span>        <span class="c1">/// 绘制游戏区
</span><span class="c1"></span>        <span class="c1">/// &lt;/summary&gt;
</span><span class="c1"></span>        <span class="k">private</span> <span class="k">void</span> <span class="n">PaintGame</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">Graphics</span> <span class="n">g</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">CreateGraphics</span><span class="p">();</span>     <span class="c1">// 创建绘图句柄
</span><span class="c1"></span>            <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">White</span><span class="p">,</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="n">Width</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="n">Height</span><span class="p">));</span>
            <span class="c1">// 我们需要使雷区在用户显示的区域上下左右保持 6px 的偏移量，使得整体看起来更加协调
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">nOffsetX</span> <span class="p">=</span> <span class="m">6</span><span class="p">;</span>   <span class="c1">// X 方向偏移量
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">nOffsetY</span> <span class="p">=</span> <span class="m">6</span> <span class="p">+</span> <span class="n">MenuStrip_Main</span><span class="p">.</span><span class="n">Height</span><span class="p">;</span>   <span class="c1">// Y 方向偏移量
</span><span class="c1"></span>            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;=</span> <span class="n">nWidth</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>   <span class="c1">// 绘制行
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">j</span> <span class="p">&lt;=</span> <span class="n">nHeight</span><span class="p">;</span> <span class="n">j</span><span class="p">++)</span>  <span class="c1">// 绘制列
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="c1">// 第一个参数为笔刷，这里采用内置笔刷 SandyBrown
</span><span class="c1"></span>                    <span class="c1">// 第二个参数为方块的参数，这里采用左上角坐标以及长宽的形式给出
</span><span class="c1"></span>                    <span class="c1">// 34 表示每个雷区的大小，再加上偏移量就是我们当前雷区的起始位置，由于要空出 1px 的间隔，因此还需要加 1
</span><span class="c1"></span>                    <span class="c1">// 由此可以得到每个方块在雷区中的位置，然后利用循环绘制出来
</span><span class="c1"></span>
                    <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="p">==</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">&amp;&amp;</span> <span class="n">j</span> <span class="p">==</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">)</span> <span class="c1">// 是否为高亮点
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">FromArgb</span><span class="p">(</span><span class="m">100</span><span class="p">,</span> <span class="n">Color</span><span class="p">.</span><span class="n">SandyBrown</span><span class="p">)),</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>
                    <span class="p">}</span>
                    <span class="k">else</span> 
                    <span class="p">{</span>
                        <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">SandyBrown</span><span class="p">,</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>   <span class="c1">// 绘制雷区方块
</span><span class="c1"></span>                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>此时，我们可以尝试运行，然而却发现界面会一直在闪，使得游戏体验急剧下降，为了修复这个问题，我们只需要在构造函数中添加一句代码，开启双缓冲即可，代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">public</span> <span class="n">Form_Main</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">InitializeComponent</span><span class="p">();</span>

            <span class="k">this</span><span class="p">.</span><span class="n">DoubleBuffered</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span> <span class="c1">// 开启双缓冲
</span><span class="c1"></span>
            <span class="c1">// 初始化游戏参数
</span><span class="c1"></span>            <span class="n">nWidth</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Width</span><span class="p">;</span>
            <span class="n">nHeight</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Height</span><span class="p">;</span>
            <span class="n">nMineCnt</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">MineCnt</span><span class="p">;</span>

            <span class="c1">// 初始化
</span><span class="c1"></span>            <span class="n">bMark</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Mark</span><span class="p">;</span>
            <span class="n">bAudio</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Audio</span><span class="p">;</span>
            <span class="n">markMToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="n">bMark</span><span class="p">;</span>
            <span class="n">audioMToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="n">bAudio</span><span class="p">;</span>

            <span class="n">UpdateSize</span><span class="p">();</span>
            <span class="n">SelectLevel</span><span class="p">();</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>然而我们发现效果并没有很大的提升，这是由于我们之前定义的 PaintGame 函数所导致的，它不断的定义新的 Graphics 实例，使得这个过程变得很慢，我们可以直接使用 Paint 事件中的 Graphics 实例。首先修改 PaintGame 函数的定义以及部分实现，如下图所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="c1">/// &lt;summary&gt;
</span><span class="c1"></span>        <span class="c1">/// 绘制游戏区
</span><span class="c1"></span>        <span class="c1">/// &lt;/summary&gt;
</span><span class="c1"></span>        <span class="k">private</span> <span class="k">void</span> <span class="n">PaintGame</span><span class="p">(</span><span class="n">Graphics</span> <span class="n">g</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">g</span><span class="p">.</span><span class="n">Clear</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">White</span><span class="p">);</span>   <span class="c1">// 清空绘图区
</span><span class="c1"></span>            <span class="c1">// 我们需要使雷区在用户显示的区域上下左右保持 6px 的偏移量，使得整体看起来更加协调
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">nOffsetX</span> <span class="p">=</span> <span class="m">6</span><span class="p">;</span>   <span class="c1">// X 方向偏移量
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">nOffsetY</span> <span class="p">=</span> <span class="m">6</span> <span class="p">+</span> <span class="n">MenuStrip_Main</span><span class="p">.</span><span class="n">Height</span><span class="p">;</span>   <span class="c1">// Y 方向偏移量
</span><span class="c1"></span>            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;=</span> <span class="n">nWidth</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>   <span class="c1">// 绘制行
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">j</span> <span class="p">&lt;=</span> <span class="n">nHeight</span><span class="p">;</span> <span class="n">j</span><span class="p">++)</span>  <span class="c1">// 绘制列
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="c1">// 第一个参数为笔刷，这里采用内置笔刷 SandyBrown
</span><span class="c1"></span>                    <span class="c1">// 第二个参数为方块的参数，这里采用左上角坐标以及长宽的形式给出
</span><span class="c1"></span>                    <span class="c1">// 34 表示每个雷区的大小，再加上偏移量就是我们当前雷区的起始位置，由于要空出 1px 的间隔，因此还需要加 1
</span><span class="c1"></span>                    <span class="c1">// 由此可以得到每个方块在雷区中的位置，然后利用循环绘制出来
</span><span class="c1"></span>
                    <span class="k">if</span><span class="p">(</span><span class="n">i</span> <span class="p">==</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">&amp;&amp;</span> <span class="n">j</span> <span class="p">==</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span><span class="p">)</span> <span class="c1">// 是否为高亮点
</span><span class="c1"></span>                    <span class="p">{</span>
                        <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">SolidBrush</span><span class="p">(</span><span class="n">Color</span><span class="p">.</span><span class="n">FromArgb</span><span class="p">(</span><span class="m">100</span><span class="p">,</span> <span class="n">Color</span><span class="p">.</span><span class="n">SandyBrown</span><span class="p">)),</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>
                    <span class="p">}</span>
                    <span class="k">else</span> 
                    <span class="p">{</span>
                        <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">SandyBrown</span><span class="p">,</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>   <span class="c1">// 绘制雷区方块
</span><span class="c1"></span>                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>同时修改 Paint 事件中的调用函数：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Form_Main_Paint</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">PaintEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">PaintGame</span><span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">Graphics</span><span class="p">);</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>对于其它非 Paint 函数调用的 PaintGame 函数，一律修改为 <code>this.Refresh();</code> 即可，如下图所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="c1">/// &lt;summary&gt;
</span><span class="c1"></span>        <span class="c1">/// 自动更新窗口大小
</span><span class="c1"></span>        <span class="c1">/// &lt;summary&gt;
</span><span class="c1"></span>        <span class="k">private</span> <span class="k">void</span> <span class="n">UpdateSize</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="kt">int</span> <span class="n">nOffsetX</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">Width</span> <span class="p">-</span> <span class="k">this</span><span class="p">.</span><span class="n">ClientSize</span><span class="p">.</span><span class="n">Width</span><span class="p">;</span>  <span class="c1">// 包含了窗口标题栏以及上下边框的高度
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">nOffsetY</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">Height</span> <span class="p">-</span> <span class="k">this</span><span class="p">.</span><span class="n">ClientSize</span><span class="p">.</span><span class="n">Height</span><span class="p">;</span>    <span class="c1">// 包含了左右边框的宽度
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">nAdditionY</span> <span class="p">=</span> <span class="n">MenuStrip_Main</span><span class="p">.</span><span class="n">Height</span> <span class="p">+</span> <span class="n">TableLayoutPanel_Main</span><span class="p">.</span><span class="n">Height</span><span class="p">;</span>  <span class="c1">// 包含了菜单栏以及下方显示信息栏的高度
</span><span class="c1"></span>            <span class="k">this</span><span class="p">.</span><span class="n">Width</span> <span class="p">=</span> <span class="m">12</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="n">nWidth</span> <span class="p">+</span> <span class="n">nOffsetX</span><span class="p">;</span>   <span class="c1">// 设置窗口高度，34 为每个雷区的高度，12 为上下总空隙（6px + 6px），再加上偏移量
</span><span class="c1"></span>            <span class="k">this</span><span class="p">.</span><span class="n">Height</span> <span class="p">=</span> <span class="m">12</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="n">nHeight</span> <span class="p">+</span> <span class="n">nAdditionY</span> <span class="p">+</span> <span class="n">nOffsetY</span><span class="p">;</span>    <span class="c1">// 设置窗口宽度，同理
</span><span class="c1"></span>            <span class="c1">// PaintGame()
</span><span class="c1"></span>            <span class="k">this</span><span class="p">.</span><span class="n">Refresh</span><span class="p">();</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Form_Main_MouseMove</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">MouseEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">X</span> <span class="p">-</span> <span class="m">6</span><span class="p">)</span> <span class="p">/</span> <span class="m">36</span> <span class="p">+</span> <span class="m">1</span><span class="p">;</span>     <span class="c1">// 获取 x 位置
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">y</span> <span class="p">=</span> <span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">Y</span> <span class="p">-</span> <span class="n">MenuStrip_Main</span><span class="p">.</span><span class="n">Height</span> <span class="p">-</span> <span class="m">6</span><span class="p">)</span> <span class="p">/</span> <span class="m">36</span> <span class="p">+</span> <span class="m">1</span><span class="p">;</span>     <span class="c1">// 获取 y 位置
</span><span class="c1"></span>            <span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">=</span> <span class="n">x</span><span class="p">;</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span> <span class="p">=</span> <span class="n">y</span><span class="p">;</span> <span class="c1">// 设置当前高亮点
</span><span class="c1"></span>            <span class="k">this</span><span class="p">.</span><span class="n">Refresh</span><span class="p">();</span>     <span class="c1">// 重绘雷区
</span><span class="c1"></span>        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>再次运行的时候，我们发现已经没有了之前的闪屏问题了。然而我们却发现了新的问题，对于当前移动到的位置坐标获取不准确，我们进行下面的调整：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Form_Main_MouseMove</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">MouseEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">X</span> <span class="p">&lt;</span> <span class="m">6</span> <span class="p">||</span> <span class="n">e</span><span class="p">.</span><span class="n">X</span> <span class="p">&gt;</span> <span class="m">6</span> <span class="p">+</span> <span class="n">nWidth</span> <span class="p">*</span> <span class="m">34</span> <span class="p">||</span>
                <span class="n">e</span><span class="p">.</span><span class="n">Y</span> <span class="p">&lt;</span> <span class="m">6</span> <span class="p">+</span> <span class="n">MenuStrip_Main</span><span class="p">.</span><span class="n">Height</span> <span class="p">||</span>
                <span class="n">e</span><span class="p">.</span><span class="n">Y</span> <span class="p">&gt;</span> <span class="m">6</span> <span class="p">+</span> <span class="n">MenuStrip_Main</span><span class="p">.</span><span class="n">Height</span> <span class="p">+</span> <span class="n">nHeight</span> <span class="p">*</span> <span class="m">34</span><span class="p">)</span>     <span class="c1">// 不在地雷区域
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span>
            <span class="p">{</span>
                <span class="kt">int</span> <span class="n">x</span> <span class="p">=</span> <span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">X</span> <span class="p">-</span> <span class="m">6</span><span class="p">)</span> <span class="p">/</span> <span class="m">36</span> <span class="p">+</span> <span class="m">1</span><span class="p">;</span>     <span class="c1">// 获取 x 位置
</span><span class="c1"></span>                <span class="kt">int</span> <span class="n">y</span> <span class="p">=</span> <span class="p">(</span><span class="n">e</span><span class="p">.</span><span class="n">Y</span> <span class="p">-</span> <span class="n">MenuStrip_Main</span><span class="p">.</span><span class="n">Height</span> <span class="p">-</span> <span class="m">6</span><span class="p">)</span> <span class="p">/</span> <span class="m">36</span> <span class="p">+</span> <span class="m">1</span><span class="p">;</span>     <span class="c1">// 获取 y 位置
</span><span class="c1"></span>                <span class="n">MouseFocus</span><span class="p">.</span><span class="n">X</span> <span class="p">=</span> <span class="n">x</span><span class="p">;</span> <span class="n">MouseFocus</span><span class="p">.</span><span class="n">Y</span> <span class="p">=</span> <span class="n">y</span><span class="p">;</span> <span class="c1">// 设置当前高亮点
</span><span class="c1"></span>            <span class="p">}</span>            
            <span class="k">this</span><span class="p">.</span><span class="n">Refresh</span><span class="p">();</span>     <span class="c1">// 重绘雷区
</span><span class="c1"></span>        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>此时，我们运行程序的时候，就会发现界面基本已经完成了。</p>
<p>接下来我们需要为 Setting 菜单添加一个单击确定按钮以后就自动开始游戏的功能，为此我们只需要修改 UpdateSize 函数，代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="c1">/// &lt;summary&gt;
</span><span class="c1"></span>        <span class="c1">/// 自动更新窗口大小
</span><span class="c1"></span>        <span class="c1">/// &lt;summary&gt;
</span><span class="c1"></span>        <span class="k">private</span> <span class="k">void</span> <span class="n">UpdateSize</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="kt">int</span> <span class="n">nOffsetX</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">Width</span> <span class="p">-</span> <span class="k">this</span><span class="p">.</span><span class="n">ClientSize</span><span class="p">.</span><span class="n">Width</span><span class="p">;</span>  <span class="c1">// 包含了窗口标题栏以及上下边框的高度
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">nOffsetY</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">Height</span> <span class="p">-</span> <span class="k">this</span><span class="p">.</span><span class="n">ClientSize</span><span class="p">.</span><span class="n">Height</span><span class="p">;</span>    <span class="c1">// 包含了左右边框的宽度
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">nAdditionY</span> <span class="p">=</span> <span class="n">MenuStrip_Main</span><span class="p">.</span><span class="n">Height</span> <span class="p">+</span> <span class="n">TableLayoutPanel_Main</span><span class="p">.</span><span class="n">Height</span><span class="p">;</span>  <span class="c1">// 包含了菜单栏以及下方显示信息栏的高度
</span><span class="c1"></span>            <span class="k">this</span><span class="p">.</span><span class="n">Width</span> <span class="p">=</span> <span class="m">12</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="n">nWidth</span> <span class="p">+</span> <span class="n">nOffsetX</span><span class="p">;</span>   <span class="c1">// 设置窗口高度，34 为每个雷区的高度，12 为上下总空隙（6px + 6px），再加上偏移量
</span><span class="c1"></span>            <span class="k">this</span><span class="p">.</span><span class="n">Height</span> <span class="p">=</span> <span class="m">12</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="n">nHeight</span> <span class="p">+</span> <span class="n">nAdditionY</span> <span class="p">+</span> <span class="n">nOffsetY</span><span class="p">;</span>    <span class="c1">// 设置窗口宽度，同理
</span><span class="c1"></span>            <span class="n">newGameNToolStripMenuItem_Click</span><span class="p">(</span><span class="k">new</span> <span class="kt">object</span><span class="p">(),</span> <span class="k">new</span> <span class="n">EvenetArgs</span><span class="p">());</span>    <span class="c1">// 调用新建游戏函数
</span><span class="c1"></span>        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>接下来我们需要修改一下显示地雷数目以及计时的标签，在新建游戏的函数中修改如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="n">Label_Mine</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="n">nMineCnt</span><span class="p">.</span><span class="n">ToString</span><span class="p">();</span>  <span class="c1">// 显示地雷数目
</span><span class="c1"></span>        <span class="n">Label_Timer</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="s">&#34;0&#34;</span><span class="p">;</span> <span class="c1">// 计时器清零
</span><span class="c1"></span>        <span class="n">Timer_Main</span><span class="p">.</span><span class="n">Enabled</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>  <span class="c1">// 启动计时器计时
</span></code></pre></td></tr></table>
</div>
</div><p>运行后，我们发现计时器并没有显示出来，因为我们还没有为计时器摄制事件。在设计窗口页面中双击计时器，程序自动创建计时器事件，输入下面的代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Timer_Main_Tick</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Label_Timer</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToString</span><span class="p">(</span><span class="n">Convert</span><span class="p">.</span><span class="n">ToInt32</span><span class="p">(</span><span class="n">Label_Timer</span><span class="p">.</span><span class="n">Text</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">);</span> <span class="c1">// 自增 1 秒
</span><span class="c1"></span>        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>同时记得在设计页面中将记时器的 Interval 属性设置为 1000，表示每秒执行一次计时器事件代码。</p>
<p>最后，我们运行程序，效果如下：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e5%85%ad%e8%8a%82%e3%80%81%e5%86%85%e9%83%a8%e5%ae%9e%e7%8e%b0/mineSweeper_6_18.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第六节、内部实现/mineSweeper_6_18.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第六节、内部实现/mineSweeper_6_18.png" data-sub-html="<h2>运行效果</h2>">
        
    </a><figcaption class="image-caption">运行效果</figcaption>
    </figure>
<p>下一讲将会涉及具体的鼠标单击以及右击雷区时的逻辑事件的判定。</p>
]]></description></item><item><title>扫雷游戏制作过程（CSharp 描述）：第五节、菜单操作（续）</title><link>https://kwang.life/2015/04/%E6%89%AB%E9%9B%B7%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bcsharp-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E4%BA%94%E8%8A%82%E8%8F%9C%E5%8D%95%E6%93%8D%E4%BD%9C%E7%BB%AD/</link><pubDate>Fri, 24 Apr 2015 16:09:00 +0800</pubDate><author>作者</author><guid>https://kwang.life/2015/04/%E6%89%AB%E9%9B%B7%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bcsharp-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E4%BA%94%E8%8A%82%E8%8F%9C%E5%8D%95%E6%93%8D%E4%BD%9C%E7%BB%AD/</guid><description><![CDATA[<p>上一节中，我们还剩下 Setting 和 Rank 两个菜单项目没有设置事件，是因为它们都涉及到了弹出一个新的窗口。这一节，我们将主要介绍创建窗口的方法，以及窗口之间的数据通信。</p>
<p>首先，我们新建一个窗口，在右侧找到解决方案资源管理器，右击 Minesweeper 项目名，选择添加，如图所示：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%94%e8%8a%82%e3%80%81%e8%8f%9c%e5%8d%95%e6%93%8d%e4%bd%9c%ef%bc%88%e7%bb%ad%ef%bc%89/mineSweeper_5_01.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第五节、菜单操作（续）/mineSweeper_5_01.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第五节、菜单操作（续）/mineSweeper_5_01.png" data-sub-html="<h2>菜单示意图</h2>">
        
    </a><figcaption class="image-caption">菜单示意图</figcaption>
    </figure>
<p>选择新建项，如图所示：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%94%e8%8a%82%e3%80%81%e8%8f%9c%e5%8d%95%e6%93%8d%e4%bd%9c%ef%bc%88%e7%bb%ad%ef%bc%89/mineSweeper_5_02.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第五节、菜单操作（续）/mineSweeper_5_02.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第五节、菜单操作（续）/mineSweeper_5_02.png" data-sub-html="<h2>菜单示意图</h2>">
        
    </a><figcaption class="image-caption">菜单示意图</figcaption>
    </figure>
<p>在弹出的窗口中选择 Windows 窗体，并将名称修改为 Form_Setting.cs，单击确定，如图所示：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%94%e8%8a%82%e3%80%81%e8%8f%9c%e5%8d%95%e6%93%8d%e4%bd%9c%ef%bc%88%e7%bb%ad%ef%bc%89/mineSweeper_5_03.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第五节、菜单操作（续）/mineSweeper_5_03.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第五节、菜单操作（续）/mineSweeper_5_03.png" data-sub-html="<h2>新建窗口示意图</h2>">
        
    </a><figcaption class="image-caption">新建窗口示意图</figcaption>
    </figure>
<p>将新建的窗口 Icon 属性修改为扫雷的图标，将 MaximizeBox 属性修改为 False，将 Name 属性修改为 Form_Setting，将 BackColor 属性修改为 White，将 Text 属性修改为 Minesweeper，将 FormBorderStyle 属性改为 FixedSingle。</p>
<p>在左边工具箱面板下公共控件中找到 Label 控件，双击添加到窗口中，将它的 Name 属性修改为 Label_Width，Text 属性修改为“Width:”，并移动到合适的位置，再在工具箱面板中找到 NumericUpDown 控件，双击添加到窗口中，将它的 Name 属性修改为 NumericUpDown_Width，Minimum 属性修改为 1，Maximun 属性修改为 30，（其中 Minimum 以及 Maximum 的属性表示为数字的变化范围。）TextAlign 属性修改为 Center。其中 Minimum以 及 Maximum 的属性表示为数字的变化范围。如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%94%e8%8a%82%e3%80%81%e8%8f%9c%e5%8d%95%e6%93%8d%e4%bd%9c%ef%bc%88%e7%bb%ad%ef%bc%89/mineSweeper_5_04.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第五节、菜单操作（续）/mineSweeper_5_04.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第五节、菜单操作（续）/mineSweeper_5_04.png" data-sub-html="<h2>窗口示意图</h2>">
        
    </a><figcaption class="image-caption">窗口示意图</figcaption>
    </figure>
<p>重复上述操作，添加雷区高度（Height），地雷数目（Mine）的控件，其中高度的变化范围为 1 至 16，数目的变化范围为 1 至 99。如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%94%e8%8a%82%e3%80%81%e8%8f%9c%e5%8d%95%e6%93%8d%e4%bd%9c%ef%bc%88%e7%bb%ad%ef%bc%89/mineSweeper_5_05.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第五节、菜单操作（续）/mineSweeper_5_05.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第五节、菜单操作（续）/mineSweeper_5_05.png" data-sub-html="<h2>窗口示意图</h2>">
        
    </a><figcaption class="image-caption">窗口示意图</figcaption>
    </figure>
<p>接下来我们需要添加两个按钮，用来确定修改以及取消修改。在左侧工具箱面板的公共控件中找到 Button 控件，双击添加到窗体中，将它的 Name 属性修改为 Button_OK，Text 属性修改为 OK。同时添加一个取消按钮（Cancel），如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%94%e8%8a%82%e3%80%81%e8%8f%9c%e5%8d%95%e6%93%8d%e4%bd%9c%ef%bc%88%e7%bb%ad%ef%bc%89/mineSweeper_5_06.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第五节、菜单操作（续）/mineSweeper_5_06.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第五节、菜单操作（续）/mineSweeper_5_06.png" data-sub-html="<h2>窗口示意图</h2>">
        
    </a><figcaption class="image-caption">窗口示意图</figcaption>
    </figure>
<p>然后拖动窗口右下方的白点，调整窗口大小到合适的位置，如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%94%e8%8a%82%e3%80%81%e8%8f%9c%e5%8d%95%e6%93%8d%e4%bd%9c%ef%bc%88%e7%bb%ad%ef%bc%89/mineSweeper_5_07.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第五节、菜单操作（续）/mineSweeper_5_07.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第五节、菜单操作（续）/mineSweeper_5_07.png" data-sub-html="<h2>窗口示意图</h2>">
        
    </a><figcaption class="image-caption">窗口示意图</figcaption>
    </figure>
<p>接下来我们用同样的方法和设置来创建一个排行榜的窗口（Form_Rank）。</p>
<p>放置三个标签，分别表示初级（Label_Beginner）、中级（Label_Intermediate）、高级（Label_Expert）的最高分，并且加入两个按钮，表示重新计分（Button_Reset）、确定（OK），如图所示：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%94%e8%8a%82%e3%80%81%e8%8f%9c%e5%8d%95%e6%93%8d%e4%bd%9c%ef%bc%88%e7%bb%ad%ef%bc%89/mineSweeper_5_08.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第五节、菜单操作（续）/mineSweeper_5_08.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第五节、菜单操作（续）/mineSweeper_5_08.png" data-sub-html="<h2>窗口示意图</h2>">
        
    </a><figcaption class="image-caption">窗口示意图</figcaption>
    </figure>
<p>接下来，我们就可以调用这两个窗口了。打开 Form_Main 窗口，为 Setting 和 Rank 分别添加单击事件（双击菜单项，程序自动添加该时间），并且写下如下代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">settingSToolStripMenuItem_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Form_Setting</span> <span class="n">Setting</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Form_Setting</span><span class="p">();</span>
            <span class="n">Setting</span><span class="p">.</span><span class="n">ShowDialog</span><span class="p">();</span>
        <span class="p">}</span>
        
        <span class="k">private</span> <span class="k">void</span> <span class="n">rankRToolStripMenuItem_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Form_Rank</span> <span class="n">Rank</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Form_Rank</span><span class="p">();</span>
            <span class="n">Rank</span><span class="p">.</span><span class="n">ShowDialog</span><span class="p">();</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>这样，我们就完成了对窗口的调用。接下去，我们先来实现较为简单的 Rank 窗口。每次读取最高分的数据，这也就要求我们每次记录得分。</p>
<p>打开 Settings 文件，添加三种等级的最高分，并且将初始值都设置为 999，如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%94%e8%8a%82%e3%80%81%e8%8f%9c%e5%8d%95%e6%93%8d%e4%bd%9c%ef%bc%88%e7%bb%ad%ef%bc%89/mineSweeper_5_10.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第五节、菜单操作（续）/mineSweeper_5_10.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第五节、菜单操作（续）/mineSweeper_5_10.png" data-sub-html="<h2>Setting 示意图</h2>">
        
    </a><figcaption class="image-caption">Setting 示意图</figcaption>
    </figure>
<p>打开排名窗口，双击窗口标题栏，程序会自动添加一个 Load 事件，我们在这里添加如下代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Form_Rank_Load</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="c1">// 读取数据
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">nBeginner</span> <span class="p">=</span> <span class="n">Propoerties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Beginner</span><span class="p">;</span>
            <span class="kt">int</span> <span class="n">nIntermediate</span> <span class="p">=</span> <span class="n">Propoerties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Intermediate</span><span class="p">;</span>
            <span class="kt">int</span> <span class="n">nExport</span> <span class="p">=</span> <span class="n">Propoerties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Export</span><span class="p">;</span>

            <span class="c1">// 显示内容
</span><span class="c1"></span>            <span class="n">Label_Beginer</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="n">String</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&#34;Beginner:        {0}&#34;</span><span class="p">,</span> <span class="n">nBeginner</span><span class="p">);</span>
            <span class="n">Label_Intermeidate</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="n">String</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&#34;Intermediate:        {0}&#34;</span><span class="p">,</span> <span class="n">nIntermediate</span><span class="p">);</span>
            <span class="n">Label_Expert</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="n">String</span><span class="p">.</span><span class="n">Format</span><span class="p">(</span><span class="s">&#34;Expert:        {0}&#34;</span><span class="p">,</span> <span class="n">nExpert</span><span class="p">);</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>这样，我们调试一下，就可以看到排名的效果了：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%94%e8%8a%82%e3%80%81%e8%8f%9c%e5%8d%95%e6%93%8d%e4%bd%9c%ef%bc%88%e7%bb%ad%ef%bc%89/mineSweeper_5_12.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第五节、菜单操作（续）/mineSweeper_5_12.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第五节、菜单操作（续）/mineSweeper_5_12.png" data-sub-html="<h2>Rank 示意图</h2>">
        
    </a><figcaption class="image-caption">Rank 示意图</figcaption>
    </figure>
<p>接下去我们需要为 Reset 以及 OK 按钮添加事件。首先考虑 OK 按钮，双击按钮，添加单击事件，并且添加如下代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Button_OK_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">this</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>   <span class="c1">// 关闭窗口，非退出程序
</span><span class="c1"></span>        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>对于 Reset 按钮，我们添加如下代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Button_Reset_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="c1">// 将所有记录设置为 999 即完成初始化
</span><span class="c1"></span>            <span class="n">Propoerties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Beginner</span> <span class="p">=</span> <span class="m">999</span><span class="p">;</span>
            <span class="n">Propoerties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Intermediate</span> <span class="p">=</span> <span class="m">999</span><span class="p">;</span>
            <span class="n">Propoerties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Export</span> <span class="p">=</span> <span class="m">999</span><span class="p">;</span>
            <span class="n">Propoerties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Save</span><span class="p">();</span>    <span class="c1">// 保存设置
</span><span class="c1"></span>        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>这样，我们就完成了排行榜的功能。接下来我们来考虑设置窗口的功能。我们首先为 Cancel 按钮添加如下代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Button_Cancel_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">this</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>   <span class="c1">// 关闭窗口，非退出程序
</span><span class="c1"></span>        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>我们考虑 OK 按钮，我们需要和 Form_Main 窗口进行通信，修改 Form_Setting 的构造函数，如图所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="n">Form_Main</span> <span class="n">Main</span><span class="p">;</span>

        <span class="k">public</span> <span class="n">Form_Setting</span><span class="p">(</span><span class="n">Form_Main</span> <span class="m">_</span><span class="n">Main</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">InitializeComponent</span><span class="p">();</span>

            <span class="n">Main</span> <span class="p">=</span> <span class="m">_</span><span class="n">Main</span><span class="p">;</span>   <span class="c1">// 传递父窗口实例
</span><span class="c1"></span>        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>接着将 Form_Main 中 nWidth、nHeight、nMine 变量设置为公有类型：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">public</span> <span class="kt">int</span> <span class="n">nWidth</span><span class="p">;</span>  <span class="c1">// 表示雷区的宽度
</span><span class="c1"></span>        <span class="k">public</span> <span class="kt">int</span> <span class="n">nHeight</span><span class="p">;</span>  <span class="c1">// 表示雷区的高度
</span><span class="c1"></span>        <span class="k">public</span> <span class="kt">int</span> <span class="n">nMineCnt</span><span class="p">;</span>  <span class="c1">// 表示地雷的数量
</span></code></pre></td></tr></table>
</div>
</div><p>然后修改对 Setting 窗口的调用函数：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">settingSToolStripMenuItem_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Form_Setting</span> <span class="n">Setting</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Form_Setting</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>  <span class="c1">// 将本身作为参数传递过去
</span><span class="c1"></span>            <span class="n">Setting</span><span class="p">.</span><span class="n">ShowDialog</span><span class="p">();</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>至此，我们就完成了 Setting 窗口和 Main 窗口的信息连接，双击 Setting 窗口的标题栏，修改它的 Load 事件如下，以实现对 Main 窗口中原有游戏参数的读取：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Form_Setting_Load</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">NumericUpDown_Width</span><span class="p">.</span><span class="n">Value</span> <span class="p">=</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToDecimal</span><span class="p">(</span><span class="n">Main</span><span class="p">.</span><span class="n">nWidth</span><span class="p">);</span>
            <span class="n">NumericUpDown_Height</span><span class="p">.</span><span class="n">Value</span> <span class="p">=</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToDecimal</span><span class="p">(</span><span class="n">Main</span><span class="p">.</span><span class="n">nHeight</span><span class="p">);</span>
            <span class="n">NumericUpDown_Mine</span><span class="p">.</span><span class="n">Value</span> <span class="p">=</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToDecimal</span><span class="p">(</span><span class="n">Main</span><span class="p">.</span><span class="n">nMineCnt</span><span class="p">);</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>这样，我们运行的时候就可以看到 Setting 窗口自动获取了 Main 中的游戏参数：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%94%e8%8a%82%e3%80%81%e8%8f%9c%e5%8d%95%e6%93%8d%e4%bd%9c%ef%bc%88%e7%bb%ad%ef%bc%89/mineSweeper_5_20.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第五节、菜单操作（续）/mineSweeper_5_20.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第五节、菜单操作（续）/mineSweeper_5_20.png" data-sub-html="<h2>Setting 窗口示意图</h2>">
        
    </a><figcaption class="image-caption">Setting 窗口示意图</figcaption>
    </figure>
<p>接下来我们为 OK 按钮添加如下的事件：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Button_OK_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Main</span><span class="p">.</span><span class="n">nWidth</span> <span class="p">=</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToDecimal</span><span class="p">(</span><span class="n">NumericUpDown_Width</span><span class="p">.</span><span class="n">Value</span><span class="p">);</span>
            <span class="n">Main</span><span class="p">.</span><span class="n">nHeight</span> <span class="p">=</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToDecimal</span><span class="p">(</span><span class="n">NumericUpDown_Height</span><span class="p">.</span><span class="n">Value</span><span class="p">);</span>
            <span class="n">Main</span><span class="p">.</span><span class="n">nMineCnt</span> <span class="p">=</span> <span class="n">Convert</span><span class="p">.</span><span class="n">ToDecimal</span><span class="p">(</span><span class="n">NumericUpDown_Mine</span><span class="p">.</span><span class="n">Value</span><span class="p">);</span>
            <span class="k">this</span><span class="p">.</span><span class="n">Close</span><span class="p">();</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>这样，我们就完成了游戏规模的设置，有时候，我们发现弹出来的设置窗口以及排行窗口显示的位置都偏左上角，我们对它进行一些调整，修改它们的 StartPosition 属性为 CenterParent。</p>
<p>最后，在调用完设置窗口后，还需要 UpdateSize 一下来实现对游戏规模的修改：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">settingSToolStripMenuItem_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Form_Setting</span> <span class="n">Setting</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Form_Setting</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>  <span class="c1">// 将本身作为参数传递过去
</span><span class="c1"></span>            <span class="n">Setting</span><span class="p">.</span><span class="n">ShowDialog</span><span class="p">();</span>
            <span class="n">UpdateSize</span><span class="p">();</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>最终我们可以实现各种大小的雷区：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%94%e8%8a%82%e3%80%81%e8%8f%9c%e5%8d%95%e6%93%8d%e4%bd%9c%ef%bc%88%e7%bb%ad%ef%bc%89/mineSweeper_5_23.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第五节、菜单操作（续）/mineSweeper_5_23.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第五节、菜单操作（续）/mineSweeper_5_23.png" data-sub-html="<h2>运行效果</h2>">
        
    </a><figcaption class="image-caption">运行效果</figcaption>
    </figure>
<p>这一节暂且讲到这里，下一节我们将会介绍地雷数目以及时间秒数的显示，以及扫雷内部模型的建立。</p>
]]></description></item><item><title>扫雷游戏制作过程（CSharp 描述）：第四节、菜单操作</title><link>https://kwang.life/2015/04/%E6%89%AB%E9%9B%B7%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bcsharp-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E5%9B%9B%E8%8A%82%E8%8F%9C%E5%8D%95%E6%93%8D%E4%BD%9C/</link><pubDate>Wed, 22 Apr 2015 16:33:00 +0800</pubDate><author>作者</author><guid>https://kwang.life/2015/04/%E6%89%AB%E9%9B%B7%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bcsharp-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E5%9B%9B%E8%8A%82%E8%8F%9C%E5%8D%95%E6%93%8D%E4%BD%9C/</guid><description><![CDATA[<p>我们现在的程序单击菜单的时候不会有任何反应，这一节我们主要介绍菜单的相关代码，使得菜单能够正常使用。</p>
<p>在第二节中，我们曾经提出希望在对应级别（初级、中级、高级、自定义）的按钮的显示勾，以表示目前的游戏等级。我们有两个时候需要对它进行操作，一个是加载上次游戏设置的时候，一个是在游戏过程中进行设置的时候，我们先介绍第一种情况。按照下图修改代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="c1">/// &lt;summary&gt;
</span><span class="c1"></span>        <span class="c1">/// 选择对应的游戏等级
</span><span class="c1"></span>        <span class="c1">/// &lt;/summary&gt;
</span><span class="c1"></span>        <span class="k">private</span> <span class="k">void</span> <span class="n">SelectLevel</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">nWidth</span> <span class="p">==</span> <span class="m">10</span> <span class="p">&amp;&amp;</span> <span class="n">nHeight</span> <span class="p">==</span> <span class="m">10</span> <span class="p">&amp;&amp;</span> <span class="n">nMineCnt</span> <span class="p">==</span> <span class="m">10</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">beginnerBToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
                <span class="n">intermediateIToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
                <span class="n">expertEToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
                <span class="n">settingSToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">nWidth</span> <span class="p">==</span> <span class="m">16</span> <span class="p">&amp;&amp;</span> <span class="n">nHeight</span> <span class="p">==</span> <span class="m">16</span> <span class="p">&amp;&amp;</span> <span class="n">nMineCnt</span> <span class="p">==</span> <span class="m">40</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">beginnerBToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
                <span class="n">intermediateIToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
                <span class="n">expertEToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
                <span class="n">settingSToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">nWidth</span> <span class="p">==</span> <span class="m">30</span> <span class="p">&amp;&amp;</span> <span class="n">nHeight</span> <span class="p">==</span> <span class="m">16</span> <span class="p">&amp;&amp;</span> <span class="n">nMineCnt</span> <span class="p">==</span> <span class="m">99</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">beginnerBToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
                <span class="n">intermediateIToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
                <span class="n">expertEToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
                <span class="n">settingSToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
            <span class="p">}</span>
            <span class="k">else</span>
            <span class="p">{</span>
                <span class="n">beginnerBToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
                <span class="n">intermediateIToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
                <span class="n">expertEToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
                <span class="n">settingSToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>注意到 beginnerBToolStripMenuItem、intermediateIToolStripMenuItem、expertEToolStripMenuItem、settingSToolStripMenuItem 分别表示四个等级的菜单的名称，通过修改它们的 Checked 属性来达到修改对应项目前面勾的状态。我们还需要在初始化函数中调用这个函数：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="c1">/// &lt;summary&gt;
</span><span class="c1"></span>        <span class="c1">/// 游戏参数设置
</span><span class="c1"></span>        <span class="c1">/// &lt;/summary&gt;
</span><span class="c1"></span>        <span class="c1">/// &lt;param name=&#34;Width&#34;&gt;雷区宽度&lt;/param&gt;
</span><span class="c1"></span>        <span class="c1">/// &lt;param name=&#34;Height&#34;&gt;雷区高度&lt;/param&gt;
</span><span class="c1"></span>        <span class="c1">/// &lt;param name=&#34;MineCnt&#34;&gt;地雷数目&lt;/param&gt;
</span><span class="c1"></span>        <span class="k">private</span> <span class="k">void</span> <span class="n">SetGame</span><span class="p">(</span><span class="kt">int</span> <span class="n">Width</span><span class="p">,</span> <span class="kt">int</span> <span class="n">Height</span><span class="p">,</span> <span class="kt">int</span> <span class="n">MineCnt</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">nWidth</span> <span class="p">=</span> <span class="n">Width</span><span class="p">;</span>
            <span class="n">nHeight</span> <span class="p">=</span> <span class="n">Height</span><span class="p">;</span>
            <span class="n">nMineCnt</span> <span class="p">=</span> <span class="n">MineCnt</span><span class="p">;</span>
            <span class="n">UpdateSize</span><span class="p">();</span>

            <span class="n">SelectLevel</span><span class="p">();</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>这时候，我们运行就会发现Beginner菜单前面的勾被选中了：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e5%9b%9b%e8%8a%82%e3%80%81%e8%8f%9c%e5%8d%95%e6%93%8d%e4%bd%9c/mineSweeper_4_03.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第四节、菜单操作/mineSweeper_4_03.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第四节、菜单操作/mineSweeper_4_03.png" data-sub-html="<h2>菜单示意图</h2>">
        
    </a><figcaption class="image-caption">菜单示意图</figcaption>
    </figure>
<p>下面我们来处理一下各个菜单按钮的事件，我们只需要双击菜单上的按钮，程序会自动创建对应的单击事件，我们只需要在其中书写代码即可。我们首先来创建 Beginner、Intermediate、Expert、Exit、About 菜单项目对应的事件。我们先介绍 Beginner、Intermediate、Expert 菜单项目对应的代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">beginnerBToolStripMenuItem_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">nWidth</span> <span class="p">=</span> <span class="m">10</span><span class="p">;</span> <span class="n">nHeight</span> <span class="p">=</span> <span class="m">10</span><span class="p">;</span> <span class="n">nMineCnt</span> <span class="p">=</span> <span class="m">10</span><span class="p">;</span>
            <span class="n">SelectLevel</span><span class="p">();</span>
        <span class="p">}</span>
        
        <span class="k">private</span> <span class="k">void</span> <span class="n">intermediateIToolStripMenuItem_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">nWidth</span> <span class="p">=</span> <span class="m">16</span><span class="p">;</span> <span class="n">nHeight</span> <span class="p">=</span> <span class="m">16</span><span class="p">;</span> <span class="n">nMineCnt</span> <span class="p">=</span> <span class="m">40</span><span class="p">;</span>
            <span class="n">SelectLevel</span><span class="p">();</span>
        <span class="p">}</span>
        
        <span class="k">private</span> <span class="k">void</span> <span class="n">expertEToolStripMenuItem_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">nWidth</span> <span class="p">=</span> <span class="m">30</span><span class="p">;</span> <span class="n">nHeight</span> <span class="p">=</span> <span class="m">16</span><span class="p">;</span> <span class="n">nMineCnt</span> <span class="p">=</span> <span class="m">99</span><span class="p">;</span>
            <span class="n">SelectLevel</span><span class="p">();</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>接下来，我们处理 Exit 事件，我们希望在退出游戏之前询问游戏者是否确认退出，代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">exitXToolStripMenuItem_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">MessageBox</span><span class="p">.</span><span class="n">Show</span><span class="p">(</span><span class="s">&#34;Are you sure to exit the game?&#34;</span><span class="p">,</span> <span class="s">&#34;Exit&#34;</span><span class="p">,</span> <span class="n">MessageBoxButtons</span><span class="p">.</span><span class="n">YesNo</span><span class="p">,</span> <span class="n">MessageBoxIcon</span><span class="p">.</span><span class="n">Question</span><span class="p">)</span> <span class="p">==</span> <span class="n">DialogResult</span><span class="p">.</span><span class="n">Yes</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">Application</span><span class="p">.</span><span class="n">Exit</span><span class="p">();</span>
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>然后，我们来处理 About 事件，我们希望得到类似 Windows 默认关于窗口的界面。为此，首先我们需要引用一个类，在代码的开头部分加上下图高亮部分的代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp"><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Collections.Generic</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.ComponentModal</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Data</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Drawing</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Linq</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Runtime.InteropServices</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Text</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Threading.Tasks</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Windows.Forms</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div><p>为了实现这样的功能，我们需要调用 Windows 系统内部的一个 API，添加这样一个函数：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="c1">/// &lt;summary&gt;
</span><span class="c1"></span>        <span class="c1">/// 系统关于对话框（API）
</span><span class="c1"></span>        <span class="c1">/// &lt;/summary&gt;
</span><span class="c1"></span>        <span class="c1">/// &lt;param name=&#34;hWnd&#34;&gt;窗口句柄&lt;/param&gt;
</span><span class="c1"></span>        <span class="c1">/// &lt;param name=&#34;szApp&#34;&gt;标题文本&lt;/param&gt;
</span><span class="c1"></span>        <span class="c1">/// &lt;param name=&#34;szOtherStuff&#34;&gt;内容文本&lt;/param&gt;
</span><span class="c1"></span>        <span class="c1">/// &lt;param name=&#34;hIcon&#34;&gt;图标句柄&lt;/param&gt;
</span><span class="c1"></span>        <span class="c1">/// &lt;returns&gt;&lt;/returns&gt;
</span><span class="c1"></span><span class="na">        [DllImport(&#34;shell32.dll&#34;)]</span>
        <span class="k">public</span> <span class="k">extern</span> <span class="k">static</span> <span class="kt">int</span> <span class="n">ShellAbout</span><span class="p">(</span><span class="n">IntPtr</span> <span class="n">hWnd</span><span class="p">,</span> <span class="kt">string</span> <span class="n">szApp</span><span class="p">,</span> <span class="kt">string</span> <span class="n">szOtherStuff</span><span class="p">,</span> <span class="n">IntPtr</span> <span class="n">hIcon</span><span class="p">);</span>
</code></pre></td></tr></table>
</div>
</div><p>在 About 事件中添加如下代码进行调用：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">aboutAToolStripMenuItem_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">ShellAbout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="n">Handle</span><span class="p">,</span> <span class="s">&#34;Minesweeper&#34;</span><span class="p">,</span> <span class="s">&#34;A minesweeper game using CSharp language.&#34;</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="n">Icon</span><span class="p">.</span><span class="n">Handle</span><span class="p">);</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>运行以后查看结果如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e5%9b%9b%e8%8a%82%e3%80%81%e8%8f%9c%e5%8d%95%e6%93%8d%e4%bd%9c/mineSweeper_4_09.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第四节、菜单操作/mineSweeper_4_09.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第四节、菜单操作/mineSweeper_4_09.png" data-sub-html="<h2>关于</h2>">
        
    </a><figcaption class="image-caption">关于</figcaption>
    </figure>
<p>可能细心的读者会发现，虽然我们通过菜单修改了游戏等级，但是我们窗口中的雷区却没有发生变化，因为我们没有在菜单被按下的时候没有调用 UpdateSize 函数。在三个按钮的事件中添加对 UpdateSize 函数的调用即可。代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">beginnerBToolStripMenuItem_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">nWidth</span> <span class="p">=</span> <span class="m">10</span><span class="p">;</span> <span class="n">nHeight</span> <span class="p">=</span> <span class="m">10</span><span class="p">;</span> <span class="n">nMineCnt</span> <span class="p">=</span> <span class="m">10</span><span class="p">;</span>
            <span class="n">SelectLevel</span><span class="p">();</span>
            <span class="n">UpdateSize</span><span class="p">();</span>
        <span class="p">}</span>
        
        <span class="k">private</span> <span class="k">void</span> <span class="n">intermediateIToolStripMenuItem_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">nWidth</span> <span class="p">=</span> <span class="m">16</span><span class="p">;</span> <span class="n">nHeight</span> <span class="p">=</span> <span class="m">16</span><span class="p">;</span> <span class="n">nMineCnt</span> <span class="p">=</span> <span class="m">40</span><span class="p">;</span>
            <span class="n">SelectLevel</span><span class="p">();</span>
            <span class="n">UpdateSize</span><span class="p">();</span>
        <span class="p">}</span>
        
        <span class="k">private</span> <span class="k">void</span> <span class="n">expertEToolStripMenuItem_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">nWidth</span> <span class="p">=</span> <span class="m">30</span><span class="p">;</span> <span class="n">nHeight</span> <span class="p">=</span> <span class="m">16</span><span class="p">;</span> <span class="n">nMineCnt</span> <span class="p">=</span> <span class="m">99</span><span class="p">;</span>
            <span class="n">SelectLevel</span><span class="p">();</span>
            <span class="n">UpdateSize</span><span class="p">();</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>在此运行的时候，我们发现修改游戏等级的时候，游戏界面也会发生相应的变化。但是还有一点瑕疵，就是在大规模变成小规模的时候，边上会有多余的雷区。为了修正这个 Bug，我们需要将原来 Paint 事件中代码放在一个新的函数 PaintGame 中，同时添加高亮区域的代码，并且在 Paint 事件中进行调用，代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Form_Main_Paint</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">PaintEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">PaintGame</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="c1">/// &lt;summary&gt;
</span><span class="c1"></span>        <span class="c1">/// 绘制游戏区
</span><span class="c1"></span>        <span class="c1">/// &lt;/summary&gt;
</span><span class="c1"></span>        <span class="k">private</span> <span class="k">void</span> <span class="n">PaintGame</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">Graphics</span> <span class="n">g</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">CreateGraphics</span><span class="p">();</span>     <span class="c1">// 创建绘图句柄
</span><span class="c1"></span>            <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">White</span><span class="p">,</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="n">Width</span><span class="p">,</span> <span class="k">this</span><span class="p">.</span><span class="n">Height</span><span class="p">));</span>
            <span class="c1">// 我们需要使雷区在用户显示的区域上下左右保持 6px 的偏移量，使得整体看起来更加协调
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">nOffsetX</span> <span class="p">=</span> <span class="m">6</span><span class="p">;</span>   <span class="c1">// X 方向偏移量
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">nOffsetY</span> <span class="p">=</span> <span class="m">6</span> <span class="p">+</span> <span class="n">MenuStrip_Main</span><span class="p">.</span><span class="n">Height</span><span class="p">;</span>   <span class="c1">// Y 方向偏移量
</span><span class="c1"></span>            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;=</span> <span class="n">nWidth</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>   <span class="c1">// 绘制行
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">j</span> <span class="p">&lt;=</span> <span class="n">nHeight</span><span class="p">;</span> <span class="n">j</span><span class="p">++)</span>  <span class="c1">// 绘制列
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="c1">// 第一个参数为笔刷，这里采用内置笔刷 SandyBrown
</span><span class="c1"></span>                    <span class="c1">// 第二个参数为方块的参数，这里采用左上角坐标以及长宽的形式给出
</span><span class="c1"></span>                    <span class="c1">// 34 表示每个雷区的大小，再加上偏移量就是我们当前雷区的起始位置，由于要空出 1px 的间隔，因此还需要加 1
</span><span class="c1"></span>                    <span class="c1">// 由此可以得到每个方块在雷区中的位置，然后利用循环绘制出来
</span><span class="c1"></span>                    <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">SandyBrown</span><span class="p">,</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>   <span class="c1">// 绘制雷区方块
</span><span class="c1"></span>                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>除此之外，在UpdateSize最后也需要调用PaintGame函数，如下图所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="c1">/// &lt;summary&gt;
</span><span class="c1"></span>        <span class="c1">/// 自动更新窗口大小
</span><span class="c1"></span>        <span class="c1">/// &lt;summary&gt;
</span><span class="c1"></span>        <span class="k">private</span> <span class="k">void</span> <span class="n">UpdateSize</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="kt">int</span> <span class="n">nOffsetX</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">Width</span> <span class="p">-</span> <span class="k">this</span><span class="p">.</span><span class="n">ClientSize</span><span class="p">.</span><span class="n">Width</span><span class="p">;</span>  <span class="c1">// 包含了窗口标题栏以及上下边框的高度
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">nOffsetY</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">Height</span> <span class="p">-</span> <span class="k">this</span><span class="p">.</span><span class="n">ClientSize</span><span class="p">.</span><span class="n">Height</span><span class="p">;</span>    <span class="c1">// 包含了左右边框的宽度
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">nAdditionY</span> <span class="p">=</span> <span class="n">MenuStrip_Main</span><span class="p">.</span><span class="n">Height</span> <span class="p">+</span> <span class="n">TableLayoutPanel_Main</span><span class="p">.</span><span class="n">Height</span><span class="p">;</span>  <span class="c1">// 包含了菜单栏以及下方显示信息栏的高度
</span><span class="c1"></span>            <span class="k">this</span><span class="p">.</span><span class="n">Width</span> <span class="p">=</span> <span class="m">12</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="n">nWidth</span> <span class="p">+</span> <span class="n">nOffsetX</span><span class="p">;</span>   <span class="c1">// 设置窗口高度，34 为每个雷区的高度，12 为上下总空隙（6px + 6px），再加上偏移量
</span><span class="c1"></span>            <span class="k">this</span><span class="p">.</span><span class="n">Height</span> <span class="p">=</span> <span class="m">12</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="n">nHeight</span> <span class="p">+</span> <span class="n">nAdditionY</span> <span class="p">+</span> <span class="n">nOffsetY</span><span class="p">;</span>    <span class="c1">// 设置窗口宽度，同理
</span><span class="c1"></span>            <span class="n">PaintGame</span><span class="p">()</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>再次运行的时候，就会发现边上多余的雷区已经消失了。</p>
<p>接下来我们处理 Mark 以及 Audio 两个事件，我们需要定义两个变量来记录它们的数据，因为这对于我们以后的开发有很大的关系。如下图所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp"><span class="k">namespace</span> <span class="nn">Minesweeper</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">partial</span> <span class="k">class</span> <span class="nc">Form_Main</span> <span class="p">:</span> <span class="n">Form</span>
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">nWidth</span><span class="p">;</span>     <span class="c1">// 表示雷区的宽度
</span><span class="c1"></span>        <span class="kt">int</span> <span class="n">nHeight</span><span class="p">;</span>    <span class="c1">// 表示雷区的高度
</span><span class="c1"></span>        <span class="kt">int</span> <span class="n">nMineCnt</span><span class="p">;</span>   <span class="c1">// 表示地雷的数目
</span><span class="c1"></span>
        <span class="kt">bool</span> <span class="n">bMark</span><span class="p">;</span>     <span class="c1">// 表示是否使用标记
</span><span class="c1"></span>        <span class="kt">bool</span> <span class="n">bAudio</span><span class="p">;</span>    <span class="c1">// 表示是否使用音效
</span><span class="c1"></span>    <span class="p">}</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>同样我们需要在游戏开始的时候读取上次的数据，如果没有则都设置为真。我们首先看 Setting 文件：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e5%9b%9b%e8%8a%82%e3%80%81%e8%8f%9c%e5%8d%95%e6%93%8d%e4%bd%9c/mineSweeper_4_14.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第四节、菜单操作/mineSweeper_4_14.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第四节、菜单操作/mineSweeper_4_14.png" data-sub-html="<h2>Setting 文件配置</h2>">
        
    </a><figcaption class="image-caption">Setting 文件配置</figcaption>
    </figure>
<p>同时加入以下代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">public</span> <span class="n">Form_Main</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">InitializeComponent</span><span class="p">();</span>

            <span class="c1">// 初始化游戏参数
</span><span class="c1"></span>            <span class="n">nWidth</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Width</span><span class="p">;</span>
            <span class="n">nHeight</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Height</span><span class="p">;</span>
            <span class="n">nMineCnt</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">MineCnt</span><span class="p">;</span>

            <span class="c1">// 初始化
</span><span class="c1"></span>            <span class="n">bMark</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Mark</span><span class="p">;</span>
            <span class="n">bAudio</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Audio</span><span class="p">;</span>
            <span class="n">markMToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="n">bMark</span><span class="p">;</span>
            <span class="n">audioMToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="n">bAudio</span><span class="p">;</span>

            <span class="n">UpdateSize</span><span class="p">();</span>
            <span class="n">SelectLevel</span><span class="p">();</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>同时为 Mark 以及 Audio 菜单项目添加如下的事件：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">markMToolStripMenuItem_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">markMToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="n">bMark</span> <span class="p">=</span> <span class="p">!</span><span class="n">bMark</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">private</span> <span class="k">void</span> <span class="n">audioMToolStripMenuItem_Click</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">audioMToolStripMenuItem</span><span class="p">.</span><span class="n">Checked</span> <span class="p">=</span> <span class="n">bAudio</span> <span class="p">=</span> <span class="p">!</span><span class="n">bAudio</span><span class="p">;</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>至此，我们还剩 New Game、Setting、Rank 三个菜单选项的事件没有涉及，因为它们需用用到更多的内容，我们将会在下一节中进行讲解。</p>
]]></description></item><item><title>扫雷游戏制作过程（CSharp 描述）：第三节、雷区绘制</title><link>https://kwang.life/2015/04/%E6%89%AB%E9%9B%B7%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bcsharp-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E4%B8%89%E8%8A%82%E9%9B%B7%E5%8C%BA%E7%BB%98%E5%88%B6/</link><pubDate>Tue, 21 Apr 2015 15:42:00 +0800</pubDate><author>作者</author><guid>https://kwang.life/2015/04/%E6%89%AB%E9%9B%B7%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bcsharp-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E4%B8%89%E8%8A%82%E9%9B%B7%E5%8C%BA%E7%BB%98%E5%88%B6/</guid><description><![CDATA[<p>这一节我们主要涉及界面中雷区的绘制方法。</p>
<p>首先来考虑几个问题。为了保存整个雷区的信息，我们需要哪些数据。显然，除了要保存雷区的宽度和高度（分别定义为宽和高方向上方块的个数）外，还需要保存地雷的数目。这样我们需要用到三个变量 nWidth, nHeight, nMineCnt 分别保存雷区的宽度、雷区的高度以及地雷的数目。</p>
<p>右击窗口，选择查看代码，也可以使用快捷键 F7，如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%89%e8%8a%82%e3%80%81%e9%9b%b7%e5%8c%ba%e7%bb%98%e5%88%b6/mineSweeper_3_01.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第三节、雷区绘制/mineSweeper_3_01.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第三节、雷区绘制/mineSweeper_3_01.png" data-sub-html="<h2>菜单示意图</h2>">
        
    </a><figcaption class="image-caption">菜单示意图</figcaption>
    </figure>
<p>可以看到这样的代码界面：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%89%e8%8a%82%e3%80%81%e9%9b%b7%e5%8c%ba%e7%bb%98%e5%88%b6/mineSweeper_3_02.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第三节、雷区绘制/mineSweeper_3_02.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第三节、雷区绘制/mineSweeper_3_02.png" data-sub-html="<h2>代码界面</h2>">
        
    </a><figcaption class="image-caption">代码界面</figcaption>
    </figure>
<p>添加如下所示的代码，用来定义扫雷区域的基本变量，它们的含义在上文或者注释中都有提及：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp"><span class="k">namespace</span> <span class="nn">Minesweeper</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">partial</span> <span class="k">class</span> <span class="nc">Form_Main</span> <span class="p">:</span> <span class="n">Form</span>
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">nWidth</span><span class="p">;</span>     <span class="c1">// 表示雷区的宽度
</span><span class="c1"></span>        <span class="kt">int</span> <span class="n">nHeight</span><span class="p">;</span>    <span class="c1">// 表示雷区的高度
</span><span class="c1"></span>        <span class="kt">int</span> <span class="n">nMineCnt</span><span class="p">;</span>   <span class="c1">// 表示地雷的数目
</span><span class="c1"></span>
        <span class="k">public</span> <span class="n">Form_Main</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">InitializeComponent</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>为了方便设置这三个参数，我们可以定义一个新的函数 SetGame，如下所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp"><span class="k">namespace</span> <span class="nn">Minesweeper</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">partial</span> <span class="k">class</span> <span class="nc">Form_Main</span> <span class="p">:</span> <span class="n">Form</span>
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">nWidth</span><span class="p">;</span>     <span class="c1">// 表示雷区的宽度
</span><span class="c1"></span>        <span class="kt">int</span> <span class="n">nHeight</span><span class="p">;</span>    <span class="c1">// 表示雷区的高度
</span><span class="c1"></span>        <span class="kt">int</span> <span class="n">nMineCnt</span><span class="p">;</span>   <span class="c1">// 表示地雷的数目
</span><span class="c1"></span>
        <span class="k">public</span> <span class="n">Form_Main</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">InitializeComponent</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="k">private</span> <span class="k">void</span> <span class="n">SetGame</span><span class="p">(</span><span class="kt">int</span> <span class="n">Width</span><span class="p">,</span> <span class="kt">int</span> <span class="n">Height</span><span class="p">,</span> <span class="kt">int</span> <span class="n">MineCnt</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">nWidth</span> <span class="p">=</span> <span class="n">Width</span><span class="p">;</span>
            <span class="n">nHeight</span> <span class="p">=</span> <span class="n">Height</span><span class="p">;</span>
            <span class="n">nMineCnt</span> <span class="p">=</span> <span class="n">MineCnt</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>这样，我们就可以通过调用 SetGame 函数来设置游戏的参数了。为了方便阅读，我们可以为这个函数加上一个注释，在函数名上方输入&quot;///&quot;，程序会自动生成一个注释块，如下所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp"><span class="k">namespace</span> <span class="nn">Minesweeper</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">partial</span> <span class="k">class</span> <span class="nc">Form_Main</span> <span class="p">:</span> <span class="n">Form</span>
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">nWidth</span><span class="p">;</span>     <span class="c1">// 表示雷区的宽度
</span><span class="c1"></span>        <span class="kt">int</span> <span class="n">nHeight</span><span class="p">;</span>    <span class="c1">// 表示雷区的高度
</span><span class="c1"></span>        <span class="kt">int</span> <span class="n">nMineCnt</span><span class="p">;</span>   <span class="c1">// 表示地雷的数目
</span><span class="c1"></span>
        <span class="k">public</span> <span class="n">Form_Main</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">InitializeComponent</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="c1">/// &lt;summary&gt;
</span><span class="c1"></span>        <span class="c1">/// 
</span><span class="c1"></span>        <span class="c1">/// &lt;/summary&gt;
</span><span class="c1"></span>        <span class="c1">/// &lt;param name=&#34;Width&#34;&gt;&lt;/param&gt;
</span><span class="c1"></span>        <span class="c1">/// &lt;param name=&#34;Height&#34;&gt;&lt;/param&gt;
</span><span class="c1"></span>        <span class="c1">/// &lt;param name=&#34;MineCnt&#34;&gt;&lt;/param&gt;
</span><span class="c1"></span>        <span class="k">private</span> <span class="k">void</span> <span class="n">SetGame</span><span class="p">(</span><span class="kt">int</span> <span class="n">Width</span><span class="p">,</span> <span class="kt">int</span> <span class="n">Height</span><span class="p">,</span> <span class="kt">int</span> <span class="n">MineCnt</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">nWidth</span> <span class="p">=</span> <span class="n">Width</span><span class="p">;</span>
            <span class="n">nHeight</span> <span class="p">=</span> <span class="n">Height</span><span class="p">;</span>
            <span class="n">nMineCnt</span> <span class="p">=</span> <span class="n">MineCnt</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>输入相关信息，第二行的内容是用来对函数的作用进行说明，下面的三行分别用来对三个参数的作用进行说明，将它们修改如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="c1">/// &lt;summary&gt;
</span><span class="c1"></span>        <span class="c1">/// 游戏参数设置
</span><span class="c1"></span>        <span class="c1">/// &lt;/summary&gt;
</span><span class="c1"></span>        <span class="c1">/// &lt;param name=&#34;Width&#34;&gt;雷区宽度&lt;/param&gt;
</span><span class="c1"></span>        <span class="c1">/// &lt;param name=&#34;Height&#34;&gt;雷区高度&lt;/param&gt;
</span><span class="c1"></span>        <span class="c1">/// &lt;param name=&#34;MineCnt&#34;&gt;地雷数目&lt;/param&gt;
</span><span class="c1"></span>        <span class="k">private</span> <span class="k">void</span> <span class="n">SetGame</span><span class="p">(</span><span class="kt">int</span> <span class="n">Width</span><span class="p">,</span> <span class="kt">int</span> <span class="n">Height</span><span class="p">,</span> <span class="kt">int</span> <span class="n">MineCnt</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">nWidth</span> <span class="p">=</span> <span class="n">Width</span><span class="p">;</span>
            <span class="n">nHeight</span> <span class="p">=</span> <span class="n">Height</span><span class="p">;</span>
            <span class="n">nMineCnt</span> <span class="p">=</span> <span class="n">MineCnt</span><span class="p">;</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>这样当我们输入这个函数的时候（当然，我们目前还不需要调用这个函数。），就会显示出来对应的注释，如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%89%e8%8a%82%e3%80%81%e9%9b%b7%e5%8c%ba%e7%bb%98%e5%88%b6/mineSweeper_3_07.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第三节、雷区绘制/mineSweeper_3_07.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第三节、雷区绘制/mineSweeper_3_07.png" data-sub-html="<h2>注释示意图</h2>">
        
    </a><figcaption class="image-caption">注释示意图</figcaption>
    </figure>
<p>到目前为止，我们的代码应该是这样的：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp"><span class="k">namespace</span> <span class="nn">Minesweeper</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">partial</span> <span class="k">class</span> <span class="nc">Form_Main</span> <span class="p">:</span> <span class="n">Form</span>
    <span class="p">{</span>
        <span class="kt">int</span> <span class="n">nWidth</span><span class="p">;</span>     <span class="c1">// 表示雷区的宽度
</span><span class="c1"></span>        <span class="kt">int</span> <span class="n">nHeight</span><span class="p">;</span>    <span class="c1">// 表示雷区的高度
</span><span class="c1"></span>        <span class="kt">int</span> <span class="n">nMineCnt</span><span class="p">;</span>   <span class="c1">// 表示地雷的数目
</span><span class="c1"></span>
        <span class="k">public</span> <span class="n">Form_Main</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">InitializeComponent</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="c1">/// &lt;summary&gt;
</span><span class="c1"></span>        <span class="c1">/// 游戏参数设置
</span><span class="c1"></span>        <span class="c1">/// &lt;/summary&gt;
</span><span class="c1"></span>        <span class="c1">/// &lt;param name=&#34;Width&#34;&gt;雷区宽度&lt;/param&gt;
</span><span class="c1"></span>        <span class="c1">/// &lt;param name=&#34;Height&#34;&gt;雷区高度&lt;/param&gt;
</span><span class="c1"></span>        <span class="c1">/// &lt;param name=&#34;MineCnt&#34;&gt;地雷数目&lt;/param&gt;
</span><span class="c1"></span>        <span class="k">private</span> <span class="k">void</span> <span class="n">SetGame</span><span class="p">(</span><span class="kt">int</span> <span class="n">Width</span><span class="p">,</span> <span class="kt">int</span> <span class="n">Height</span><span class="p">,</span> <span class="kt">int</span> <span class="n">MineCnt</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">nWidth</span> <span class="p">=</span> <span class="n">Width</span><span class="p">;</span>
            <span class="n">nHeight</span> <span class="p">=</span> <span class="n">Height</span><span class="p">;</span>
            <span class="n">nMineCnt</span> <span class="p">=</span> <span class="n">MineCnt</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>接下来我们可以定义几个辅助函数，分别表示设置游戏参数为初级、中级、高级，如下图所示：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="c1">/// &lt;summary&gt;
</span><span class="c1"></span>        <span class="c1">/// 设置游戏等级为初级
</span><span class="c1"></span>        <span class="c1">/// &lt;/summary&gt;
</span><span class="c1"></span>        <span class="k">private</span> <span class="k">void</span> <span class="n">SetGameBeginner</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">SetGame</span><span class="p">(</span><span class="m">10</span><span class="p">,</span> <span class="m">10</span><span class="p">,</span> <span class="m">10</span><span class="p">);</span>
        <span class="p">}</span>
        
        <span class="c1">/// &lt;summary&gt;
</span><span class="c1"></span>        <span class="c1">/// 设置游戏等级为中级
</span><span class="c1"></span>        <span class="c1">/// &lt;/summary&gt;
</span><span class="c1"></span>        <span class="k">private</span> <span class="k">void</span> <span class="n">SetGameIntermediate</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">SetGame</span><span class="p">(</span><span class="m">16</span><span class="p">,</span> <span class="m">16</span><span class="p">,</span> <span class="m">40</span><span class="p">);</span>
        <span class="p">}</span>
        
        <span class="c1">/// &lt;summary&gt;
</span><span class="c1"></span>        <span class="c1">/// 设置游戏等级为高级
</span><span class="c1"></span>        <span class="c1">/// &lt;/summary&gt;
</span><span class="c1"></span>        <span class="k">private</span> <span class="k">void</span> <span class="n">SetGameExpert</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">SetGame</span><span class="p">(</span><span class="m">30</span><span class="p">,</span> <span class="m">16</span><span class="p">,</span> <span class="m">99</span><span class="p">);</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>在我们开始游戏的时候，我们希望它自动获取上次的游戏设置，如果这是第一次开始游戏，那么将游戏设置为初级。</p>
<p>我们先来看一下第一个需求，自动获取上次的游戏设置，这就意味着我们需要在上次游戏关闭的时候将上次的游戏设置保存下来。保存到哪里呢，我们在这里采用 Setting 文件来保存这些数据。工程创建的时候，系统会自动生成一个 Setting 文件。因此我们不需要自己创建，只需要使用原有的 Setting 文件即可。在右方解决方案资源管理器面板中展开 Properties，右击 Settings.settings，选择打开即可。</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%89%e8%8a%82%e3%80%81%e9%9b%b7%e5%8c%ba%e7%bb%98%e5%88%b6/mineSweeper_3_10.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第三节、雷区绘制/mineSweeper_3_10.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第三节、雷区绘制/mineSweeper_3_10.png" data-sub-html="<h2>解决方案资源管理器</h2>">
        
    </a><figcaption class="image-caption">解决方案资源管理器</figcaption>
    </figure>
<p>打开后的界面如图所示：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%89%e8%8a%82%e3%80%81%e9%9b%b7%e5%8c%ba%e7%bb%98%e5%88%b6/mineSweeper_3_11.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第三节、雷区绘制/mineSweeper_3_11.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第三节、雷区绘制/mineSweeper_3_11.png" data-sub-html="<h2>Settings.settings 示意图</h2>">
        
    </a><figcaption class="image-caption">Settings.settings 示意图</figcaption>
    </figure>
<p>按照下图对它进行设置，设置完成后按Ctrl + S进行保存。</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%89%e8%8a%82%e3%80%81%e9%9b%b7%e5%8c%ba%e7%bb%98%e5%88%b6/mineSweeper_3_12.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第三节、雷区绘制/mineSweeper_3_12.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第三节、雷区绘制/mineSweeper_3_12.png" data-sub-html="<h2>Settings.settings 设置示意图</h2>">
        
    </a><figcaption class="image-caption">Settings.settings 设置示意图</figcaption>
    </figure>
<p>注意到第四栏值，我们将它初始化为初级的参数，也就完成了我们刚才的第二个需求——无法找到上一次设置的时候，我们将它置为初级模式。</p>
<p>就行了，我们需要通过代码将这些参数读入到定义的变量中去，加入如下图所示的代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">public</span> <span class="n">Form_Main</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">InitializeComponent</span><span class="p">();</span>

            <span class="c1">// 初始化游戏参数
</span><span class="c1"></span>            <span class="n">nWidth</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Width</span><span class="p">;</span>
            <span class="n">nHeight</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Height</span><span class="p">;</span>
            <span class="n">nMineCnt</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">MineCnt</span><span class="p">;</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>有了这些参数我们就可以绘制雷区了，我们假定雷区为 32×32 的小方块，并且四周有一圈宽度为 1 的留白，用于与其它雷区区别，这样，每个雷区的实际大小为 34×34。</p>
<p>接下去，我们将窗口切换到界面布局，选中主窗口，在左边的属性面板中，单击事件按钮，并找到 Paint 事件，双击该条目，系统会自动创建一个事件，我们将在这里绘制雷区。如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%89%e8%8a%82%e3%80%81%e9%9b%b7%e5%8c%ba%e7%bb%98%e5%88%b6/mineSweeper_3_14.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第三节、雷区绘制/mineSweeper_3_14.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第三节、雷区绘制/mineSweeper_3_14.png" data-sub-html="<h2>创建事件</h2>">
        
    </a><figcaption class="image-caption">创建事件</figcaption>
    </figure>
<p>添加 Paint 事件以后，程序会自动跳到代码编辑窗口，并且会看到如下的代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Form_Main_Paint</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">PaintEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>

        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>将Paint函数中的内容修改如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">private</span> <span class="k">void</span> <span class="n">Form_Main_Paint</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">PaintEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Graphics</span> <span class="n">g</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">CreateGraphics</span><span class="p">();</span>     <span class="c1">// 创建绘图句柄
</span><span class="c1"></span>
            <span class="c1">// 我们需要使雷区在用户显示的区域上下左右保持 6px 的偏移量，使得整体看起来更加协调
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">nOffsetX</span> <span class="p">=</span> <span class="m">6</span><span class="p">;</span>   <span class="c1">// X 方向偏移量
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">nOffsetY</span> <span class="p">=</span> <span class="m">6</span> <span class="p">+</span> <span class="n">MenuStrip_Main</span><span class="p">.</span><span class="n">Height</span><span class="p">;</span>   <span class="c1">// Y 方向偏移量
</span><span class="c1"></span>            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;=</span> <span class="n">nWidth</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>   <span class="c1">// 绘制行
</span><span class="c1"></span>            <span class="p">{</span>
                <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="m">1</span><span class="p">;</span> <span class="n">j</span> <span class="p">&lt;=</span> <span class="n">nHeight</span><span class="p">;</span> <span class="n">j</span><span class="p">++)</span>  <span class="c1">// 绘制列
</span><span class="c1"></span>                <span class="p">{</span>
                    <span class="c1">// 第一个参数为笔刷，这里采用内置笔刷 SandyBrown
</span><span class="c1"></span>                    <span class="c1">// 第二个参数为方块的参数，这里采用左上角坐标以及长宽的形式给出
</span><span class="c1"></span>                    <span class="c1">// 34 表示每个雷区的大小，再加上偏移量就是我们当前雷区的起始位置，由于要空出 1px 的间隔，因此还需要加 1
</span><span class="c1"></span>                    <span class="c1">// 由此可以得到每个方块在雷区中的位置，然后利用循环绘制出来
</span><span class="c1"></span>                    <span class="n">g</span><span class="p">.</span><span class="n">FillRectangle</span><span class="p">(</span><span class="n">Brushes</span><span class="p">.</span><span class="n">SandyBrown</span><span class="p">,</span> <span class="k">new</span> <span class="n">Rectangle</span><span class="p">(</span><span class="n">nOffsetX</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">i</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="n">nOffsetY</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="p">(</span><span class="n">j</span> <span class="p">-</span> <span class="m">1</span><span class="p">)</span> <span class="p">+</span> <span class="m">1</span><span class="p">,</span> <span class="m">32</span><span class="p">,</span> <span class="m">32</span><span class="p">));</span>   <span class="c1">// 绘制雷区方块
</span><span class="c1"></span>                <span class="p">}</span>
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>然后，我们按下 Ctrl + F5 就可以看到下面的效果：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%89%e8%8a%82%e3%80%81%e9%9b%b7%e5%8c%ba%e7%bb%98%e5%88%b6/mineSweeper_3_17.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第三节、雷区绘制/mineSweeper_3_17.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第三节、雷区绘制/mineSweeper_3_17.png" data-sub-html="<h2>阶段性效果</h2>">
        
    </a><figcaption class="image-caption">阶段性效果</figcaption>
    </figure>
<p>看上去感觉样式很奇怪，后边多出了很多空白的区域，而且下方还有一些部分没有显示出来，因为我们还没有根据游戏的参数调整窗口的大小。新建一个名为 UpdateSize 的函数，输入下图的代码：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="c1">/// &lt;summary&gt;
</span><span class="c1"></span>        <span class="c1">/// 自动更新窗口大小
</span><span class="c1"></span>        <span class="c1">/// &lt;summary&gt;
</span><span class="c1"></span>        <span class="k">private</span> <span class="k">void</span> <span class="n">UpdateSize</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="kt">int</span> <span class="n">nOffsetX</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">Width</span> <span class="p">-</span> <span class="k">this</span><span class="p">.</span><span class="n">ClientSize</span><span class="p">.</span><span class="n">Width</span><span class="p">;</span>  <span class="c1">// 包含了窗口标题栏以及上下边框的高度
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">nOffsetY</span> <span class="p">=</span> <span class="k">this</span><span class="p">.</span><span class="n">Height</span> <span class="p">-</span> <span class="k">this</span><span class="p">.</span><span class="n">ClientSize</span><span class="p">.</span><span class="n">Height</span><span class="p">;</span>    <span class="c1">// 包含了左右边框的宽度
</span><span class="c1"></span>            <span class="kt">int</span> <span class="n">nAdditionY</span> <span class="p">=</span> <span class="n">MenuStrip_Main</span><span class="p">.</span><span class="n">Height</span> <span class="p">+</span> <span class="n">TableLayoutPanel_Main</span><span class="p">.</span><span class="n">Height</span><span class="p">;</span>  <span class="c1">// 包含了菜单栏以及下方显示信息栏的高度
</span><span class="c1"></span>            <span class="k">this</span><span class="p">.</span><span class="n">Width</span> <span class="p">=</span> <span class="m">12</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="n">nWidth</span> <span class="p">+</span> <span class="n">nOffsetX</span><span class="p">;</span>   <span class="c1">// 设置窗口高度，34 为每个雷区的高度，12 为上下总空隙（6px + 6px），再加上偏移量
</span><span class="c1"></span>            <span class="k">this</span><span class="p">.</span><span class="n">Height</span> <span class="p">=</span> <span class="m">12</span> <span class="p">+</span> <span class="m">34</span> <span class="p">*</span> <span class="n">nHeight</span> <span class="p">+</span> <span class="n">nAdditionY</span> <span class="p">+</span> <span class="n">nOffsetY</span><span class="p">;</span>    <span class="c1">// 设置窗口宽度，同理
</span><span class="c1"></span>        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>接下来我们在 SetGame 函数中调用这个函数，使得修改游戏参数的时候自动修改窗口大小，代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="c1">/// &lt;summary&gt;
</span><span class="c1"></span>        <span class="c1">/// 游戏参数设置
</span><span class="c1"></span>        <span class="c1">/// &lt;/summary&gt;
</span><span class="c1"></span>        <span class="c1">/// &lt;param name=&#34;Width&#34;&gt;雷区宽度&lt;/param&gt;
</span><span class="c1"></span>        <span class="c1">/// &lt;param name=&#34;Height&#34;&gt;雷区高度&lt;/param&gt;
</span><span class="c1"></span>        <span class="c1">/// &lt;param name=&#34;MineCnt&#34;&gt;地雷数目&lt;/param&gt;
</span><span class="c1"></span>        <span class="k">private</span> <span class="k">void</span> <span class="n">SetGame</span><span class="p">(</span><span class="kt">int</span> <span class="n">Width</span><span class="p">,</span> <span class="kt">int</span> <span class="n">Height</span><span class="p">,</span> <span class="kt">int</span> <span class="n">MineCnt</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">nWidth</span> <span class="p">=</span> <span class="n">Width</span><span class="p">;</span>
            <span class="n">nHeight</span> <span class="p">=</span> <span class="n">Height</span><span class="p">;</span>
            <span class="n">nMineCnt</span> <span class="p">=</span> <span class="n">MineCnt</span><span class="p">;</span>
            <span class="n">UpdateSize</span><span class="p">();</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>最后不要忘记了在初始化读入上次游戏参数后也需要修改窗口大小，代码如下：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-csharp" data-lang="csharp">        <span class="k">public</span> <span class="n">Form_Main</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">InitializeComponent</span><span class="p">();</span>

            <span class="c1">// 初始化游戏参数
</span><span class="c1"></span>            <span class="n">nWidth</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Width</span><span class="p">;</span>
            <span class="n">nHeight</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">Height</span><span class="p">;</span>
            <span class="n">nMineCnt</span> <span class="p">=</span> <span class="n">Properties</span><span class="p">.</span><span class="n">Settings</span><span class="p">.</span><span class="n">Default</span><span class="p">.</span><span class="n">MineCnt</span><span class="p">;</span>
            <span class="n">UpdateSize</span><span class="p">();</span>
        <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>最后按 Ctrl + F5 编译运行，得到最终结果：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%89%e8%8a%82%e3%80%81%e9%9b%b7%e5%8c%ba%e7%bb%98%e5%88%b6/mineSweeper_3_21.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第三节、雷区绘制/mineSweeper_3_21.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第三节、雷区绘制/mineSweeper_3_21.png" data-sub-html="<h2>运行效果</h2>">
        
    </a><figcaption class="image-caption">运行效果</figcaption>
    </figure>
<p>到目前为止，扫雷的界面已经基本出来了，下一节我们主要介绍一下菜单的相关代码。</p>
]]></description></item><item><title>扫雷游戏制作过程（CSharp 描述）：第二节、界面设计</title><link>https://kwang.life/2015/04/%E6%89%AB%E9%9B%B7%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bcsharp-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E4%BA%8C%E8%8A%82%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1/</link><pubDate>Mon, 20 Apr 2015 19:31:00 +0800</pubDate><author>作者</author><guid>https://kwang.life/2015/04/%E6%89%AB%E9%9B%B7%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bcsharp-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E4%BA%8C%E8%8A%82%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1/</guid><description><![CDATA[<p>这一节我们主要介绍关于扫雷游戏界面的设计，此处我们借鉴经典扫雷界面的设计方法，首先需要创建一个菜单栏。具体方法在左边找到工具箱窗口，展开其中的菜单和工具栏，找到 MenuStrip 选项，如图所示：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%8c%e8%8a%82%e3%80%81%e7%95%8c%e9%9d%a2%e8%ae%be%e8%ae%a1/mineSweeper_2_01.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第二节、界面设计/mineSweeper_2_01.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第二节、界面设计/mineSweeper_2_01.png" data-sub-html="<h2>添加 MenuStrip</h2>">
        
    </a><figcaption class="image-caption">添加 MenuStrip</figcaption>
    </figure>
<p>只需要双击该条目就可以在窗口中新建一个菜单栏，如图所示：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%8c%e8%8a%82%e3%80%81%e7%95%8c%e9%9d%a2%e8%ae%be%e8%ae%a1/mineSweeper_2_02.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第二节、界面设计/mineSweeper_2_02.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第二节、界面设计/mineSweeper_2_02.png" data-sub-html="<h2>MenuStrip 添加效果</h2>">
        
    </a><figcaption class="image-caption">MenuStrip 添加效果</figcaption>
    </figure>
<p>对于这个控件（我们习惯上将窗口中的东西称作为控件），我们还是需要修改它的一些属性，对于个人习惯而言，我习惯于修改它的 Name 属性，这样编程的时候不至于将很多控件混淆。我们将它的 Name 属性修改为“MenuStrip_Main”。单击“请在此键入”，输入“Game(&amp;G)”，其中 &amp;G 整体会显示成 G 这个字母下面加一个下划线，这样在用户使用的时候就可以通过按下字母 G 来访问这个按键了。（当然，顶层菜单还需要按下 Alt 键，例如 Alt + G 键。）输入以后的界面如图所示：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%8c%e8%8a%82%e3%80%81%e7%95%8c%e9%9d%a2%e8%ae%be%e8%ae%a1/mineSweeper_2_03.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第二节、界面设计/mineSweeper_2_03.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第二节、界面设计/mineSweeper_2_03.png" data-sub-html="<h2>添加菜单项</h2>">
        
    </a><figcaption class="image-caption">添加菜单项</figcaption>
    </figure>
<p>使用同样的方法，创建如下图所示的一个菜单栏：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%8c%e8%8a%82%e3%80%81%e7%95%8c%e9%9d%a2%e8%ae%be%e8%ae%a1/mineSweeper_2_04.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第二节、界面设计/mineSweeper_2_04.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第二节、界面设计/mineSweeper_2_04.png" data-sub-html="<h2>菜单示意图</h2>">
        
    </a><figcaption class="image-caption">菜单示意图</figcaption>
    </figure>
<p>注意到，图中的分割线，只需要输入一个减号，即“-”，再按下回车键即可得到。</p>
<p>我们一次介绍一下各个选项的功能，以便读者对它们有一个基本的了解。菜单一共有两组，一个为游戏（Game），一个为帮助（Help）：其中游戏菜单下分别包含了新游戏（New Game）、初级（Beginner）、中级（Intermediate）、高级（Expert）、设置（Setting）、标记（Mark）、音效（Audio）、排行榜（Rank）、退出（Exit）；而帮助菜单下仅包含关于（About）。</p>
<p>其中新游戏用来开始一场新的游戏；初级、中级、高级，用于选择不同的游戏难度；设置用于自定义扫雷区域的大小以及地雷的数目；标记用于设置是否启用红旗、问号这一类的标记；音效用于设置是否启用音效；排行榜用于对游戏时间进行排名（仅记录初级、中级、高级的结果，对于自定义游戏的结果不进行记录）；退出用于退出游戏。最后，关于用来显示游戏的一些关于信息。</p>
<p>对于初级、中级、高级、标记、音效这几个菜单，我们需要在它的前面显示它的状态，即是否被选中，如果选中了就会在它的前面出现一个勾，如果没有选中，则没有，这是我们以后需要实现的功能，在此先进行说明。</p>
<p>至此，我们的菜单栏就制作完成了。接下来我们需要制作一个用来记录地雷数目以及用时的功能。我们选择工具箱中容器的 TableLayoutPanel，双击该项目，会在窗口中创建一个 TableLayoutPanel 控件。同样我们先将它的 Name 属性修改为“TableLayoutPanel_Main”。展开它的 Size 属性，将 Height 属性修改为 48。同时修改它的 Dock 属性，选择 Bottom，如图所示：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%8c%e8%8a%82%e3%80%81%e7%95%8c%e9%9d%a2%e8%ae%be%e8%ae%a1/mineSweeper_2_05.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第二节、界面设计/mineSweeper_2_05.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第二节、界面设计/mineSweeper_2_05.png" data-sub-html="<h2>TableLayoutPanel 属性设置</h2>">
        
    </a><figcaption class="image-caption">TableLayoutPanel 属性设置</figcaption>
    </figure>
<p>我们会发现它会自动吸附在底部，如果改成别的参数则会吸附在别的位置，这里我们设置为 Bottom。同时将 RowCount 属性设置为 1，ColumnCount 属性设置为 9。打开 Columns 属性对话框，按照下图进行修改：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%8c%e8%8a%82%e3%80%81%e7%95%8c%e9%9d%a2%e8%ae%be%e8%ae%a1/mineSweeper_2_06.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第二节、界面设计/mineSweeper_2_06.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第二节、界面设计/mineSweeper_2_06.png" data-sub-html="<h2>TableLayoutPanel 行列样式</h2>">
        
    </a><figcaption class="image-caption">TableLayoutPanel 行列样式</figcaption>
    </figure>
<p>这里进行一些解释，其中 Column1、Column3、Column5、Column7、Column9 为中心对称的，用来设置边距，不放置任何控件，纯粹为了排版需要。接下来我们需要在 Column2、Column8 中分别放置地雷（Mine_Show.png）以及秒表（Timer.png）的图标，表示剩余的地雷数目以及已用时长。而 Columns4、Columns6 中分别放置用于显示地雷数目以及已用时长的文本。下载地址：地雷、秒表。</p>
<p>在工具箱中展开公共控件，找到 PictureBox，将它拖动到 TableLayoutPanel 的第二个列中，同时将它的 Name 属性设置为“PictureBox_Mine”，Dock 属性设置为 Fill（表示充满整个页面，此处的页面即 TableLayoutPanel 中 Column2 全部），BackgroundImage 属性定位到Mine_Show.png文件（通过导入按钮），BackgroundImageLayout 属性设置为 Stretch（表示自动缩放图像大小）。使用同样的方法加入一个 PictureBox 控件，将它放到 Column8 中，同时将 Name 属性设置为“PictureBox_Timer”，BackgroundImage 属性定位到 Timer.png 文件，其余与 PictureBox_Mine 设置相同。其中图片导入的方法如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%8c%e8%8a%82%e3%80%81%e7%95%8c%e9%9d%a2%e8%ae%be%e8%ae%a1/mineSweeper_2_07.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第二节、界面设计/mineSweeper_2_07.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第二节、界面设计/mineSweeper_2_07.png" data-sub-html="<h2>TableLayoutPanel PixtureBox 资源设置</h2>">
        
    </a><figcaption class="image-caption">TableLayoutPanel PixtureBox 资源设置</figcaption>
    </figure>
<p>接下来我们需要添加两个用于显示内容的 Label 控件，展开工具箱中的公共控件，找到 Label 控件，分别拖动到 Column4 和 Column6，并且将 Dock 属性设置为 Fill，TextAlign 属性设置为 MiddleCenter（使文字显示在控件中心），Font 属性设置为“Consolas, 16.2pt”（即 Consolas 字体，字号三号）。其 Name 属性及 Text 属性分别修改为“Label_Mine”和“Label_Timer”。同时将它们的 ForeColor 属性分别设置为“DarkRed”和“HotTrack”（这项属性用于设置文字显示的颜色）。</p>
<p>至此界面已经基本完成了，但是我们还需要增加一个控件——Timer，用来计时。展开工具箱中的组件，双击 Timer。这个控件不会在界面上显示，但是会在后台进行计时功能。同样，我们将它的 Name 属性修改为“Timer_Main”，Interval 属性修改为“1000”（这里为计时间隔，以毫秒为单位，此处为 1000 毫秒，即 1 秒计时一次）。</p>
<p>最后按下 Ctrl + F5 进行编译查看结果，相较于第一节中的界面已经有了很大的改观，如图所示：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%ba%8c%e8%8a%82%e3%80%81%e7%95%8c%e9%9d%a2%e8%ae%be%e8%ae%a1/mineSweeper_2_08.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第二节、界面设计/mineSweeper_2_08.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第二节、界面设计/mineSweeper_2_08.png" data-sub-html="<h2>运行效果</h2>">
        
    </a><figcaption class="image-caption">运行效果</figcaption>
    </figure>
<p>到这里或许读者会问，最为重要的扫雷区域怎么制作呢，关于这个区域，我们将会使用程序来生成，而不是使用控件。我们将会在下一节中进行讲解。</p>
]]></description></item><item><title>扫雷游戏制作过程（CSharp 描述）：第一节、创建项目</title><link>https://kwang.life/2015/04/%E6%89%AB%E9%9B%B7%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bcsharp-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E4%B8%80%E8%8A%82%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE/</link><pubDate>Mon, 20 Apr 2015 17:58:00 +0800</pubDate><author>作者</author><guid>https://kwang.life/2015/04/%E6%89%AB%E9%9B%B7%E6%B8%B8%E6%88%8F%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8Bcsharp-%E6%8F%8F%E8%BF%B0%E7%AC%AC%E4%B8%80%E8%8A%82%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE/</guid><description><![CDATA[<p>这一系列的文章主要受许宏旭的启发而来。他目前在连载更新一篇使用 C# 制作五子棋的教程。选择这一项目的主要原因是 Windows 8.1 系统上的扫雷需要前往应用商店下载，显得有些麻烦。因此想自己制作一个。主要采用 C# 语言进行实现。主要功能与原来的扫雷游戏基本相同，进行修改的地方主要是扫雷区的界面。如有不恰当的地方，还望指正。</p>
<p>该项目现已根据文章进度托管在<a href="https://github.com/Ivy-End/Minesweeper" target="_blank" rel="noopener noreffer">GitHub</a>上，读者可以自行查看。</p>
<p>玩过扫雷的读者应该知道，扫雷需要用到三种图片素材——地雷、红旗、问号。当右击一个方块的时候，会插上红旗，表示游戏者认为该方块内有地雷；再次右击该方块，会变成问号，表示不确定该方块内是否有地雷；第三次右击该方块，问号消失，恢复到初始的状态。我们前往<a href="https://www.iconfinder.com" target="_blank" rel="noopener noreffer">Iconfinder</a>寻找合适的图标，并且通过 Photoshop 或者 Illustrator 的处理得到我们所需要的图标。文章中含有下载地址的图标资源可以使用右键—目标另存为进行下载。</p>
<p>通过一定的搜索以及图片的处理，我们得到了下面一组素材图标。</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%80%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae/mineSweeper_1_01.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第一节、创建项目/mineSweeper_1_01.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第一节、创建项目/mineSweeper_1_01.png" data-sub-html="<h2>Mine Sweeper 素材</h2>">
        
    </a><figcaption class="image-caption">Mine Sweeper 素材</figcaption>
    </figure>
<p>除了这些素材以外，我们还需要找一个图标，使得整个程序看上去更加正式一点，这里使用图标如下，注意程序图标的后缀为ico。</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%80%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae/mineSweeper_1_02.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第一节、创建项目/mineSweeper_1_02.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第一节、创建项目/mineSweeper_1_02.png" data-sub-html="<h2>Mine Sweeper 图标</h2>">
        
    </a><figcaption class="image-caption">Mine Sweeper 图标</figcaption>
    </figure>
<p>接下来，我们打开Visual Studio 2013开始创建工程，界面如下：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%80%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae/mineSweeper_1_03.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第一节、创建项目/mineSweeper_1_03.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第一节、创建项目/mineSweeper_1_03.png" data-sub-html="<h2>Visual Studio 2013</h2>">
        
    </a><figcaption class="image-caption">Visual Studio 2013</figcaption>
    </figure>
<p>依次展开文件—新建—项目，选择“Visual C#”中的“Windows 窗体应用程序”，项目名称填写为“Minesweeper”，单击确定创建项目。如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%80%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae/mineSweeper_1_04.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第一节、创建项目/mineSweeper_1_04.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第一节、创建项目/mineSweeper_1_04.png" data-sub-html="<h2>创建项目</h2>">
        
    </a><figcaption class="image-caption">创建项目</figcaption>
    </figure>
<p>创建好的项目如下图所示。</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%80%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae/mineSweeper_1_05.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第一节、创建项目/mineSweeper_1_05.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第一节、创建项目/mineSweeper_1_05.png" data-sub-html="<h2>项目创建完毕</h2>">
        
    </a><figcaption class="image-caption">项目创建完毕</figcaption>
    </figure>
<p>我们需要对这个窗口的几项属性进行修改，首先通过 Text 属性将它的标题修改为“Minesweeper”；通过FormBorderStyle属性将它的大小设置为“FixedSingle”，即为不可调节窗口大小；通过 MaximizeBox 属性将它的最大化按钮设置为“False”，即最大化按钮失效；通过 Name 属性将它的名称修改为“Form_Main”，修改这个属性主要用于后面书写代码的方便；通过 BackColor 属性将它的背景修改为“White”。如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%80%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae/mineSweeper_1_06.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第一节、创建项目/mineSweeper_1_06.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第一节、创建项目/mineSweeper_1_06.png" data-sub-html="<h2>属性修改</h2>">
        
    </a><figcaption class="image-caption">属性修改</figcaption>
    </figure>
<p>我们可以顺便修改一下这个窗口的代码文件的名称。在右上方找到解决方案资源管理器，右击Form_1.cs—重命名—Form_Main.cs，程序会自动将下面包含的文件名也都改成一致的名称。如图所示：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%80%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae/mineSweeper_1_07.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第一节、创建项目/mineSweeper_1_07.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第一节、创建项目/mineSweeper_1_07.png" data-sub-html="<h2>文件名修改</h2>">
        
    </a><figcaption class="image-caption">文件名修改</figcaption>
    </figure>
<p>接下来我们需要修改一下程序的图标，将刚才下载的 favicon 文件放到 Minesweeper/Minesweeper 文件夹下，同时将三个图标资源放到 Minesweeper/Minesweeper/Resources 文件夹下（Resources 文件夹需要自己新建），如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%80%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae/mineSweeper_1_08.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第一节、创建项目/mineSweeper_1_08.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第一节、创建项目/mineSweeper_1_08.png" data-sub-html="<h2>创建 Resources 文件夹</h2>">
        
    </a><figcaption class="image-caption">创建 Resources 文件夹</figcaption>
    </figure>
<p>在属性栏中找到 Icon 属性，并且定位到 favicon.ico 文件，如下图所示：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%80%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae/mineSweeper_1_09.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第一节、创建项目/mineSweeper_1_09.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第一节、创建项目/mineSweeper_1_09.png" data-sub-html="<h2>设置 Icon</h2>">
        
    </a><figcaption class="image-caption">设置 Icon</figcaption>
    </figure>
<p>此时，我们按下快捷键 Ctrl + S 对整个工程进行保存，并且按下快捷键 Ctrl + F5 运行查看我们的程序，效果如下：</p>
<figure><a class="lightgallery" href="/images/2015/%e6%89%ab%e9%9b%b7%e6%b8%b8%e6%88%8f%e5%88%b6%e4%bd%9c%e8%bf%87%e7%a8%8b%ef%bc%88CSharp%20%e6%8f%8f%e8%bf%b0%ef%bc%89%ef%bc%9a%e7%ac%ac%e4%b8%80%e8%8a%82%e3%80%81%e5%88%9b%e5%bb%ba%e9%a1%b9%e7%9b%ae/mineSweeper_1_10.png" title="/images/2015/扫雷游戏制作过程（CSharp 描述）：第一节、创建项目/mineSweeper_1_10.png" data-thumbnail="/images/2015/扫雷游戏制作过程（CSharp 描述）：第一节、创建项目/mineSweeper_1_10.png" data-sub-html="<h2>运行结果</h2>">
        
    </a><figcaption class="image-caption">运行结果</figcaption>
    </figure>
<p>到目前为止，我们的程序只是一个空白的界面，下一节中我们将介绍程序的界面布局的设计。</p>
]]></description></item></channel></rss>